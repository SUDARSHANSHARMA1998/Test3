{
	"info": {
		"_postman_id": "f93cead6-22ad-4131-ba3c-a0862f409265",
		"name": "API Dev Platform APIs #reference",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "889219-f93cead6-22ad-4131-ba3c-a0862f409265"
	},
	"item": [
		{
			"name": "API",
			"item": [
				{
					"name": "Socket only endpoints",
					"item": [
						{
							"name": "Subscribe to an API for events",
							"id": "568bbdf8-130d-4ce0-8773-c5e540a3986d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/subscribe",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"subscribe"
									]
								}
							},
							"response": [
								{
									"id": "1d2e8614-a453-4f7a-b75a-30b836e709d8",
									"name": "Subscribe to an API for events",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/apis/{{apiId}}/subscribe",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"subscribe"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"subscribe\"\n\t},\n\t\"data\": {\n\t\t\"subscription\": {\n\t\t\t\"id\": \"apis/{{apiId}}\"\n\t\t}\n\t}\n}"
								}
							]
						},
						{
							"name": "Unsubscribe to an API for events",
							"id": "22b9b576-068b-4f25-861f-5a864a6e1589",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/subscribe",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"subscribe"
									]
								}
							},
							"response": [
								{
									"id": "8875986a-33c3-43ee-9c3e-ed0b0e419ac8",
									"name": "Unsubscribe to an API for events",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/apis/{{apiId}}/subscribe",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"subscribe"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"unsubscribe\"\n\t},\n\t\"data\": {\n\t\t\"subscription\": {\n\t\t\t\"id\": \"apis/{{apiId}}\"\n\t\t}\n\t}\n}"
								}
							]
						},
						{
							"name": "Subscribe for all API events for a user",
							"id": "973c09de-72a6-4fcf-ae8e-085a653b73eb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/subscribe?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"subscribe"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "13fc9c17-c7c3-4a2b-ad57-2d342e55eb8c",
									"name": "Subscribe for all API events for a user",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/apis/subscribe?workspace={{workspaceId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"subscribe"
											],
											"query": [
												{
													"key": "workspace",
													"value": "{{workspaceId}}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"subscribe\"\n\t},\n\t\"data\": {\n\t\t\"subscription\": {\n\t\t\t\"id\": \"workspace/{{workspaceId}}/apis\"\n\t\t}\n\t}\n}"
								}
							]
						},
						{
							"name": "Unsubscribe for all API events for a user",
							"id": "df9dd435-1d2a-45e2-aa4d-017c0215b1cc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/subscribe?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"subscribe"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "47b7740e-1bb6-4121-96f5-a5af02b3670d",
									"name": "Unsubscribe for all API events for a user",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/apis/subscribe?workspace={{workspaceId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"subscribe"
											],
											"query": [
												{
													"key": "workspace",
													"value": "{{workspaceId}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"unsubscribe\"\n\t},\n\t\"data\": {\n\t\t\"subscription\": {\n\t\t\t\"id\": \"workspace/{{workspaceId}}/apis\"\n\t\t}\n\t}\n}"
								}
							]
						}
					],
					"id": "e25a9584-fb21-4119-9769-798a0997ac38"
				},
				{
					"name": "Create an API",
					"id": "63223995-65f8-4a3b-b53e-5c9054411c4d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Access-Token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Sync Service API\",\n\t\"summary\": \"This is supposed to be a short summary.\",\n\t\"description\": \"This is supposed to handle markdown *descriptions*.\",\n\t\"versions\": [{\n\t\t\"name\": \"1.0\"\n\t}, {\n\t\t\"name\": \"2.0\"\n\t}]\n}"
						},
						"url": {
							"raw": "{{url}}/apis?workspace={{workspaceId}}&template=sample",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}",
									"description": "Required. This is the workspace ID in which this API will be created in."
								},
								{
									"key": "template",
									"value": "sample"
								}
							]
						},
						"description": "This endpoint creates an API. The ID will be generated by the server.\n\n### Parameters\n\n*name*: This is the name of the API. (Required)<br>\n*summary*: This is a short summary that describes the API. (Optional)<br>\n*description*: This is a long description that can support markdown. (Optional)<br>\n*workspace*: The workspace ID in which the API is supposed to be created in. (Required)<br>\n*versions*: Array of versions that are to be created for this API. If no versions are provided, a default version \"0.1\" will be created for you. (Optional)"
					},
					"response": [
						{
							"id": "dba4bd88-c85a-497f-ae05-81e5a9e2a598",
							"name": "Create an API (w/ API Version and relations)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Sync Service API\",\n    \"summary\": \"This is supposed to be a short summary.\",\n    \"description\": \"This is supposed to handle markdown *descriptions*.\",\n    \"versions\": [\n        {\n            \"name\": \"1.0\",\n            \"schema\": [\n                {\n                    \"type\": \"openapi3\",\n                    \"language\": \"json\",\n                    \"schema\": \"schema\"\n                }\n            ],\n            \"relations\": {\n                \"documentation\": {\n                    \"collectionGenerationConfig\": {\n                        \"converter\": {\n                            \"folderStrategy\": \"Paths\",\n                            \"collapseFolders\": true\n                        },\n                        \"collection\": {\n                            \"name\": \"Name of collection\"\n                        }\n                    }\n                },\n                \"testsuite\": {\n                    \"collectionGenerationConfig\": {\n                        \"converter\": {\n                            \"folderStrategy\": 'Paths',\n                            \"collapseFolders\": true\n                        },\n                        \"collection\": {\n                            \"name\": \"Name of collection\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}",
											"description": "Required. This is the workspace ID in which this API will be created in."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"create\"\n\t},\n\t\"data\": {\n\t\t\"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\t\"name\": \"Sync API\",\n\t\t\"summary\": \"This is a summary\",\n\t\t\"description\": \"This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.\",\n\t\t\"createdBy\": \"5665\",\n\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\"updatedAt\": \"2019-02-12 19:34:49\",\n\t\t\"versions\": [\n\t\t\t{\n\t\t\t\t\"id\": \"07a9434a-b502-4c3c-aa82-677db74e4b74\",\n\t\t\t\t\"name\": \"1.0\",\n\t\t\t\t\"createdBy\": \"5665\",\n\t\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\"\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "21cb79ca-1c74-4afc-a173-ea396c7636aa",
							"name": "Success: Create an API",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Sync Service API\",\n\t\"summary\": \"This is supposed to be a short summary.\",\n\t\"description\": \"This is supposed to handle markdown *descriptions*.\"\n}"
								},
								"url": {
									"raw": "{{url}}/apis?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}",
											"description": "Required. This is the workspace ID in which this API will be created in."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"create\"\n\t},\n\t\"data\": {\n\t\t\"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\t\"name\": \"Sync API\",\n\t\t\"summary\": \"This is a summary\",\n\t\t\"description\": \"This is supposed to handle markdown *descriptions*.\",\n\t\t\"createdBy\": \"5665\",\n\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\"updatedAt\": \"2019-02-12 19:34:49\",\n\t\t\"versions\": [\n\t\t\t{\n\t\t\t\t\"id\": \"07a9434a-b502-4c3c-aa82-677db74e4b74\",\n\t\t\t\t\"name\": \"0.1\",\n\t\t\t\t\"createdBy\": \"5665\",\n\t\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\"\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "30dec6f2-b0bf-421d-8b50-4b67ac90125f",
							"name": "Create an API (w/ an API Version that does not have any relations)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Sync Service API\",\n\t\"summary\": \"This is supposed to be a short summary.\",\n\t\"description\": \"This is supposed to handle markdown *descriptions*.\",\n\t\"versions\": [\n\t\t{\n\t\t\t\"name\": \"1.0\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{url}}/apis?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}",
											"description": "Required. This is the workspace ID in which this API will be created in."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"create\"\n\t},\n\t\"data\": {\n\t\t\"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\t\"name\": \"Sync API\",\n\t\t\"summary\": \"This is a summary\",\n\t\t\"description\": \"This is supposed to handle markdown *descriptions*.\",\n\t\t\"createdBy\": \"5665\",\n\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\"updatedAt\": \"2019-02-12 19:34:49\",\n\t\t\"versions\": [\n\t\t\t{\n\t\t\t\t\"id\": \"07a9434a-b502-4c3c-aa82-677db74e4b74\",\n\t\t\t\t\"name\": \"1.0\",\n\t\t\t\t\"createdBy\": \"5665\",\n\t\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\"\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "7964311e-f5ea-4097-afa7-7b8c8b0dcbe7",
							"name": "Create a sample API",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis?workspace={{workspaceId}}&template=sample",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}",
											"description": "Required. This is the workspace ID in which this API will be created in."
										},
										{
											"key": "template",
											"value": "sample"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 13 May 2020 18:49:32 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=099506703176c06f"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=87845b501f7da2f5"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"key": "ETag",
									"value": "W/\"265-f5WHLdvCvtTwQFZL/JO4hg\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"create\"\n    },\n    \"data\": {\n        \"createdBy\": \"7732157\",\n        \"updatedBy\": \"7732157\",\n        \"id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n        \"name\": \"SimpleKart E-Commerce API\",\n        \"summary\": null,\n        \"description\": null,\n        \"createdAt\": \"2020-05-13T18:49:31.123Z\",\n        \"updatedAt\": \"2020-05-13T18:49:31.123Z\",\n        \"versions\": [\n            {\n                \"id\": \"559da235-7d58-460a-ac17-7431e6304c94\",\n                \"name\": \"1.0.0\",\n                \"api\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n                \"createdBy\": \"7732157\",\n                \"updatedBy\": \"7732157\",\n                \"createdAt\": \"2020-05-13T18:49:31.124Z\",\n                \"updatedAt\": \"2020-05-13T18:49:31.124Z\",\n                \"schemas\": []\n            }\n        ]\n    },\n    \"revision\": 14716072258\n}"
						}
					]
				},
				{
					"name": "Update an API",
					"id": "242e6791-9663-43c3-bc95-2483ecc65c1e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Access-Token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Sync Pen test\",\n\t\"summary\": \"This is supposed to be a short summary.\",\n\t\"description\": \"This is supposed to handle markdown *descriptions*.\"\n}"
						},
						"url": {
							"raw": "{{url}}/apis/{{apiId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}"
							]
						},
						"description": "This endpoint updates an API.\n\n### Parameters\n\n*name*: This is the name of the API.  \n*summary*: This is a short summary that describes the API.  \n*description*: This is a longer description that can support markdown."
					},
					"response": [
						{
							"id": "2cdc3405-c941-4f8b-a7ea-e9d8f4366be1",
							"name": "Success: Update an API",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Access-Token",
										"type": "text",
										"value": "{{accessToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Sync Service API\",\n\t\"summary\": \"This is supposed to be a short summary.\",\n\t\"description\": \"This is supposed to handle markdown *descriptions*.\"\n}"
								},
								"url": {
									"raw": "{{url}}/apis/392355ae-5f06-47b7-a5b6-854b8be41bd5",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"392355ae-5f06-47b7-a5b6-854b8be41bd5"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"392355ae-5f06-47b7-a5b6-854b8be41bd5\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"update\"\n\t},\n\t\"data\": {\n\t\t\"id\": \"392355ae-5f06-47b7-a5b6-854b8be41bd5\",\n\t\t\"name\": \"Sync Service API\",\n\t\t\"summary\": \"This is supposed to be a short summary.\",\n\t\t\"description\": \"This is supposed to handle markdown *descriptions*.\",\n\t\t\"createdBy\": \"5665\",\n\t\t\"updatedBy\": \"5665\",\n\t\t\"createdAt\": \"2018-12-22 09:09:09\",\n\t\t\"updatedAt\": \"2019-01-01 11:11:11\"\n\t}\n}"
						}
					]
				},
				{
					"name": "Get an API",
					"id": "933af13e-5905-4149-bd67-c5314086bef1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Access-Token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/apis/{{apiId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}"
							],
							"query": [
								{
									"key": "populate",
									"value": "versions",
									"disabled": true
								},
								{
									"key": "populate",
									"value": "schemas",
									"disabled": true
								},
								{
									"key": "populate",
									"value": "relations",
									"disabled": true
								}
							]
						},
						"description": "This endpoint returns an API with the provided id."
					},
					"response": [
						{
							"id": "ea8c0f50-4221-404d-a3c3-f073113dda9f",
							"name": "Get an API",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"find\"\n\t},\n\t\"data\": {\n\t\t\"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\t\"name\": \"Sync API\",\n\t\t\"summary\": \"This is a summary\",\n\t\t\"description\": \"This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.\",\n\t\t\"createdBy\": \"5665\",\n\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\"updatedAt\": \"2019-02-12 19:34:49\",\n        \"isMigrated\": true\n\t}\n}"
						},
						{
							"id": "a0ddc098-15ff-4a40-872b-5f436bc01cd7",
							"name": "Get an API with version",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}?populate=versions",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}"
									],
									"query": [
										{
											"key": "populate",
											"value": "versions"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 13 May 2020 19:01:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=09ecd04a8bf99b7b"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=7abb51f906271bf4"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"key": "ETag",
									"value": "W/\"1f1-/FJZEKcYvwVpkaT3+XauXg\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"findone\"\n    },\n    \"data\": {\n        \"createdBy\": \"7732157\",\n        \"updatedBy\": \"7732157\",\n        \"team\": null,\n        \"id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n        \"name\": \"Sync Pen test\",\n        \"summary\": \"This is supposed to be a short summary.\",\n        \"description\": \"This is supposed to handle markdown *descriptions*.\",\n        \"createdAt\": \"2020-05-13T18:49:31.000Z\",\n        \"updatedAt\": \"2020-05-13T19:01:31.000Z\",\n        \"isMigrated\": true,\n        \"versions\": [\n            {\n                \"id\": \"559da235-7d58-460a-ac17-7431e6304c94\",\n                \"name\": \"1.0.0\"\n            }\n        ]\n    }\n}"
						},
						{
							"id": "3c1e9c72-cd64-40c7-996b-8b8cd8191fa4",
							"name": "Get an API with version and schema data",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}?populate=versions&populate=schemas",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}"
									],
									"query": [
										{
											"key": "populate",
											"value": "versions"
										},
										{
											"key": "populate",
											"value": "schemas"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 13 May 2020 19:06:04 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=316b2ff795ad0a46"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=fbff419242e20a27"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"key": "ETag",
									"value": "W/\"24f-zsrnkmp37EXZ/5LZl2tzrg\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"findone\"\n    },\n    \"data\": {\n        \"createdBy\": \"7732157\",\n        \"updatedBy\": \"7732157\",\n        \"team\": null,\n        \"id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n        \"name\": \"Sync Pen test\",\n        \"summary\": \"This is supposed to be a short summary.\",\n        \"description\": \"This is supposed to handle markdown *descriptions*.\",\n        \"createdAt\": \"2020-05-13T18:49:31.000Z\",\n        \"updatedAt\": \"2020-05-13T19:01:31.000Z\",\n        \"isMigrated\": true,\n        \"versions\": [\n            {\n                \"id\": \"559da235-7d58-460a-ac17-7431e6304c94\",\n                \"name\": \"1.0.0\",\n                \"schemas\": [\n                    {\n                        \"id\": \"e2b2dd33-6261-4ba7-b6a8-cc21b633c101\",\n                        \"type\": \"openapi3\",\n                        \"language\": \"yaml\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
						},
						{
							"id": "b5acae43-86a7-40d6-82ab-6736ac90e5ec",
							"name": "Get an API with version, schema and relation data",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}?populate=versions&populate=schemas&populate=relations",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}"
									],
									"query": [
										{
											"key": "populate",
											"value": "versions"
										},
										{
											"key": "populate",
											"value": "schemas"
										},
										{
											"key": "populate",
											"value": "relations"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 13 May 2020 19:07:10 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=6170eb279f32cbb0"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=99b23bd0ca28b287"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"key": "ETag",
									"value": "W/\"772-aMbOXQ28y8T1rc+HiS9HKQ\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"findone\"\n    },\n    \"data\": {\n        \"createdBy\": \"7732157\",\n        \"updatedBy\": \"7732157\",\n        \"team\": null,\n        \"id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n        \"name\": \"Sync Pen test\",\n        \"summary\": \"This is supposed to be a short summary.\",\n        \"description\": \"This is supposed to handle markdown *descriptions*.\",\n        \"createdAt\": \"2020-05-13T18:49:31.000Z\",\n        \"updatedAt\": \"2020-05-13T19:01:31.000Z\",\n        \"isMigrated\": true,\n        \"versions\": [\n            {\n                \"id\": \"559da235-7d58-460a-ac17-7431e6304c94\",\n                \"name\": \"1.0.0\",\n                \"schemas\": [\n                    {\n                        \"id\": \"e2b2dd33-6261-4ba7-b6a8-cc21b633c101\",\n                        \"type\": \"openapi3\",\n                        \"language\": \"yaml\"\n                    }\n                ],\n                \"relations\": [\n                    {\n                        \"id\": \"7732157-f27041a1-1e05-4f63-a81d-31107364e640\",\n                        \"model\": \"environment\",\n                        \"type\": \"environment\",\n                        \"modelId\": \"7732157-f27041a1-1e05-4f63-a81d-31107364e640\"\n                    },\n                    {\n                        \"id\": \"7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d\",\n                        \"model\": \"environment\",\n                        \"type\": \"environment\",\n                        \"modelId\": \"7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d\"\n                    },\n                    {\n                        \"id\": \"7732157-f2924ed2-5406-4a73-bb80-39a113545cb9\",\n                        \"model\": \"environment\",\n                        \"type\": \"environment\",\n                        \"modelId\": \"7732157-f2924ed2-5406-4a73-bb80-39a113545cb9\"\n                    },\n                    {\n                        \"id\": \"7681c25b-5c50-44a6-8724-fe1e71550160\",\n                        \"model\": \"mock\",\n                        \"type\": \"mock\",\n                        \"modelId\": \"7681c25b-5c50-44a6-8724-fe1e71550160\"\n                    },\n                    {\n                        \"id\": \"1ea954a7-ad6d-46c0-b8e7-552c5334c253\",\n                        \"model\": \"monitor\",\n                        \"type\": \"monitor\",\n                        \"modelId\": \"1ea954a7-ad6d-46c0-b8e7-552c5334c253\"\n                    },\n                    {\n                        \"id\": \"5b32caea-903c-472e-81a2-2cb054ede666\",\n                        \"model\": \"collection\",\n                        \"type\": \"documentation\",\n                        \"modelId\": \"7732157-7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4\"\n                    },\n                    {\n                        \"id\": \"b26bc935-7422-4f73-8d03-9bf212fb48ba\",\n                        \"model\": \"collection\",\n                        \"type\": \"testsuite\",\n                        \"modelId\": \"7732157-37350b62-41f3-428a-8bd5-fec517bb4f43\"\n                    },\n                    {\n                        \"id\": \"35c6bdbd-d602-4b37-9c87-1640fc8025c8\",\n                        \"model\": \"collection\",\n                        \"type\": \"integrationtest\",\n                        \"modelId\": \"7732157-6537c169-8d02-413f-94f3-4dda79355a90\"\n                    },\n                    {\n                        \"id\": \"bb69b435-a90a-44fe-aa49-f580eeb1be88\",\n                        \"model\": \"collection\",\n                        \"type\": \"contracttest\",\n                        \"modelId\": \"7732157-38f1a479-3175-40c6-8b76-9b151f04d7ac\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
						},
						{
							"id": "7825abe0-18dd-4c2c-8ccd-6cbac3d87f9c",
							"name": "Get an API with version and relation without schema",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}?populate=versions&populate=relations",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}"
									],
									"query": [
										{
											"key": "populate",
											"value": "versions"
										},
										{
											"key": "populate",
											"value": "schemas",
											"disabled": true
										},
										{
											"key": "populate",
											"value": "relations"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 13 May 2020 19:07:34 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=6f0390de3755b681"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=0fe5d258a4aa567b"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"key": "ETag",
									"value": "W/\"714-Hk4+bWmwuYej76oShcO/fg\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"findone\"\n    },\n    \"data\": {\n        \"createdBy\": \"7732157\",\n        \"updatedBy\": \"7732157\",\n        \"team\": null,\n        \"id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n        \"name\": \"Sync Pen test\",\n        \"summary\": \"This is supposed to be a short summary.\",\n        \"description\": \"This is supposed to handle markdown *descriptions*.\",\n        \"createdAt\": \"2020-05-13T18:49:31.000Z\",\n        \"updatedAt\": \"2020-05-13T19:01:31.000Z\",\n        \"isMigrated\": true,\n        \"versions\": [\n            {\n                \"id\": \"559da235-7d58-460a-ac17-7431e6304c94\",\n                \"name\": \"1.0.0\",\n                \"relations\": [\n                    {\n                        \"id\": \"7732157-f27041a1-1e05-4f63-a81d-31107364e640\",\n                        \"model\": \"environment\",\n                        \"type\": \"environment\",\n                        \"modelId\": \"7732157-f27041a1-1e05-4f63-a81d-31107364e640\"\n                    },\n                    {\n                        \"id\": \"7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d\",\n                        \"model\": \"environment\",\n                        \"type\": \"environment\",\n                        \"modelId\": \"7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d\"\n                    },\n                    {\n                        \"id\": \"7732157-f2924ed2-5406-4a73-bb80-39a113545cb9\",\n                        \"model\": \"environment\",\n                        \"type\": \"environment\",\n                        \"modelId\": \"7732157-f2924ed2-5406-4a73-bb80-39a113545cb9\"\n                    },\n                    {\n                        \"id\": \"7681c25b-5c50-44a6-8724-fe1e71550160\",\n                        \"model\": \"mock\",\n                        \"type\": \"mock\",\n                        \"modelId\": \"7681c25b-5c50-44a6-8724-fe1e71550160\"\n                    },\n                    {\n                        \"id\": \"1ea954a7-ad6d-46c0-b8e7-552c5334c253\",\n                        \"model\": \"monitor\",\n                        \"type\": \"monitor\",\n                        \"modelId\": \"1ea954a7-ad6d-46c0-b8e7-552c5334c253\"\n                    },\n                    {\n                        \"id\": \"5b32caea-903c-472e-81a2-2cb054ede666\",\n                        \"model\": \"collection\",\n                        \"type\": \"documentation\",\n                        \"modelId\": \"7732157-7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4\"\n                    },\n                    {\n                        \"id\": \"35c6bdbd-d602-4b37-9c87-1640fc8025c8\",\n                        \"model\": \"collection\",\n                        \"type\": \"integrationtest\",\n                        \"modelId\": \"7732157-6537c169-8d02-413f-94f3-4dda79355a90\"\n                    },\n                    {\n                        \"id\": \"b26bc935-7422-4f73-8d03-9bf212fb48ba\",\n                        \"model\": \"collection\",\n                        \"type\": \"testsuite\",\n                        \"modelId\": \"7732157-37350b62-41f3-428a-8bd5-fec517bb4f43\"\n                    },\n                    {\n                        \"id\": \"bb69b435-a90a-44fe-aa49-f580eeb1be88\",\n                        \"model\": \"collection\",\n                        \"type\": \"contracttest\",\n                        \"modelId\": \"7732157-38f1a479-3175-40c6-8b76-9b151f04d7ac\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get all APIs",
					"id": "1fde2690-0609-4e32-9fdb-00071aa0c49e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Access-Token",
								"type": "text",
								"value": "{{accessToken}}"
							}
						],
						"url": {
							"raw": "{{url}}/apis?workspace={{workspaceId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}"
								}
							]
						},
						"description": "This endpoint returns an API."
					},
					"response": [
						{
							"id": "a4eae18a-0325-4e58-a450-badb7d6b0401",
							"name": "Get all APIs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n\t{\n\t\t\"model_id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\t\"meta\": {\n\t\t\t\"model\": \"api\",\n\t\t\t\"action\": \"find\"\n\t\t},\n\t\t\"data\": {\n\t\t\t\"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\t\t\"name\": \"Sync API\",\n\t\t\t\"summary\": \"This is a summary\",\n\t\t\t\"description\": \"This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.\",\n\t\t\t\"createdBy\": \"5665\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\"\t\n\t\t}\n\t},\n\t{\n\t\t\"model_id\": \"12345678-6ee3-1234-6789-225f774edade\",\n\t\t\"meta\": {\n\t\t\t\"model\": \"api\",\n\t\t\t\"action\": \"find\"\n\t\t},\n\t\t\"data\": {\n\t\t\t\"id\": \"12345678-6ee3-1234-6789-225f774edade\",\n\t\t\t\"name\": \"Mock API\",\n\t\t\t\"summary\": \"This is a summary\",\n\t\t\t\"description\": \"This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.\",\n\t\t\t\"createdBy\": \"5665\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\"\t\n\t\t}\n\t}\n]"
						},
						{
							"id": "ee3bfeb1-ba89-4d4d-83df-f215c4eed700",
							"name": "Get only user created APIs(using showOnlyUserAPIs query param)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/apis?access_token=xyz1&showOnlyUserAPIs=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "access_token",
											"value": "xyz1"
										},
										{
											"key": "showOnlyUserAPIs",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n        \"model_id\": \"40b354f3-0efa-4bbd-aaef-786039764373\",\n        \"meta\": {\n            \"model\": \"api\",\n            \"action\": \"find\"\n        },\n        \"data\": {\n            \"id\": \"40b354f3-0efa-4bbd-aaef-786039764373\",\n            \"name\": \"API 2\",\n            \"summary\": \"This is a summary\",\n            \"description\": \"This is a description\",\n            \"createdBy\": {\n            \t\"id\": \"U2\",\n            \t\"name\": \"U2\",\n            \t\"username\": \"U2\",\n            \t\"email\": \"\",\n            \t\"profilePicUrl\": \"https://thispersondoesnotexist.com/image\"\n            },\n            \"createdAt\": \"2020-11-26T04:48:47.000Z\",\n            \"updatedAt\": \"2020-11-26T04:48:47.000Z\"\n        }\n    }\n]"
						},
						{
							"id": "da338b17-1df3-46a2-b070-0c2998cc9de4",
							"name": "Get all APIs (w/ createdBy populated)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"type": "text",
										"value": "{{accessToken}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis?populate=createdBy",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "populate",
											"value": "createdBy"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"model_id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n        \"meta\": {\n            \"model\": \"api\",\n            \"action\": \"find\"\n        },\n        \"data\": {\n            \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n            \"name\": \"Sync API\",\n            \"summary\": \"This is a summary\",\n            \"description\": \"This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.\",\n            \"createdBy\": {\n            \t\"id\": \"5665\",\n            \t\"name\": \"Kartik Jain\",\n            \t\"username\": \"kartik.jain\",\n            \t\"email\": \"kartik@getpostman.com\",\n            \t\"profilePicUrl\": \"https://thispersondoesnotexist.com/image\"\n            },\n            \"createdAt\": \"2019-02-12 19:34:49\",\n            \"updatedAt\": \"2019-02-12 19:34:49\"\n        }\n    },\n    {\n        \"model_id\": \"abc12345-6ee3-4a56-8210-225f774edade\",\n        \"meta\": {\n            \"model\": \"api\",\n            \"action\": \"find\"\n        },\n        \"data\": {\n            \"id\": \"abc12345-6ee3-4a56-8210-225f774edade\",\n            \"name\": \"Mock API\",\n            \"summary\": \"This is a summary\",\n            \"description\": \"This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.\",\n            \"createdBy\": {\n            \t\"id\": \"6104\",\n            \t\"name\": \"SUjay Venaik\",\n            \t\"username\": \"supa.striker\",\n            \t\"email\": \"sujay@getpostman.com\",\n            \t\"profilePicUrl\": \"https://thispersondoesnotexist.com/image\"\n            },\n            \"createdAt\": \"2019-02-12 19:34:49\",\n            \"updatedAt\": \"2019-02-12 19:34:49\"\n        }\n    }\n]"
						},
						{
							"id": "9b9a2e7f-a2ef-43e2-ab2d-f091f28aa6f2",
							"name": "Get all APIs (for a workspace)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"type": "text",
										"value": "{{accessToken}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n\t{\n\t\t\"model_id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\t\"meta\": {\n\t\t\t\"model\": \"api\",\n\t\t\t\"action\": \"find\"\n\t\t},\n\t\t\"data\": {\n\t\t\t\"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\t\t\"name\": \"Sync API\",\n\t\t\t\"summary\": \"This is a summary\",\n\t\t\t\"description\": \"This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.\",\n\t\t\t\"createdBy\": \"5665\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"versions\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"392355ae-5f06-47b7-a5b6-854b8be41bd5\",\n\t\t\t\t\t\"name\": \"0.1\",\n\t\t\t\t\t\"createdBy\": \"5665\",\n\t\t\t\t\t\"updatedBy\": \"5665\",\n\t\t\t\t\t\"createdAt\": \"2018-12-22 12:34:56\",\n\t\t\t\t\t\"updatedAt\": \"2018-12-22 12:34:56\"\n\t\t\t\t}\t\n\t\t\t]\n\t\t}\n\t},\n\t{\n\t\t\"model_id\": \"abc12345-6ee3-4a56-8210-225f774edade\",\n\t\t\"meta\": {\n\t\t\t\"model\": \"api\",\n\t\t\t\"action\": \"find\"\n\t\t},\n\t\t\"data\": {\n\t\t\t\"id\": \"abc12345-6ee3-4a56-8210-225f774edade\",\n\t\t\t\"name\": \"Mock API\",\n\t\t\t\"summary\": \"This is a summary\",\n\t\t\t\"description\": \"This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.\",\n\t\t\t\"createdBy\": \"5665\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"versions\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"392355ae-1234-5678-9012-854b8be41bd5\",\n\t\t\t\t\t\"name\": \"0.3\",\n\t\t\t\t\t\"createdBy\": \"5665\",\n\t\t\t\t\t\"updatedBy\": \"5665\",\n\t\t\t\t\t\"createdAt\": \"2018-12-22 12:34:56\",\n\t\t\t\t\t\"updatedAt\": \"2018-12-22 12:34:56\"\n\t\t\t\t}\t\n\t\t\t]\n\t\t}\n\t}\n]"
						},
						{
							"id": "2bbf80ca-6547-4c0a-99c8-c36c16a74ba0",
							"name": "Get all APIs for a relation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"type": "text",
										"value": "{{accessToken}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis?relationType={{relationType}}&relationId={{relationId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "relationType",
											"value": "{{relationType}}"
										},
										{
											"key": "relationId",
											"value": "{{relationId}}"
										}
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Bulk fetch APIs",
					"id": "79bcf402-71de-4187-a54b-d4addf07d76d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Access-Token",
								"value": "{{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apis\": [\"api1\", \"api2\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/apis/many",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"many"
							]
						},
						"description": "This endpoint returns an API."
					},
					"response": [
						{
							"id": "a0bc9046-d84f-4bbf-8c0e-261bfb989ab3",
							"name": "Bulk fetch APIs",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apis\": [\"5be1c737-5c21-4306-8359-dde1c6bce28e\", \"b55e3cf1-83df-4347-95de-ca3d25a37c3a\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/many",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"many"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"5be1c737-5c21-4306-8359-dde1c6bce28e\": {\n            \"createdAt\": \"2022-04-20T23:01:08.000Z\",\n            \"updatedAt\": \"2022-07-13T11:37:08.000Z\",\n            \"id\": \"5be1c737-5c21-4306-8359-dde1c6bce28e\",\n            \"name\": \"com.addressBook\",\n            \"summary\": null,\n            \"description\": null,\n            \"createdBy\": \"55850\",\n            \"updatedBy\": \"55850\",\n            \"isMigrated\": true,\n            \"versions\": [\n                {\n                    \"id\": \"34aa33f8-d9fe-474a-a6f5-bb464e96a433\",\n                    \"name\": \"v1\",\n                    \"summary\": null\n                },\n                {\n                    \"id\": \"3bda0da2-ce55-4221-8ed0-5bb39d42fe76\",\n                    \"name\": \"v1\",\n                    \"summary\": null\n                },\n                {\n                    \"id\": \"5c7e5da5-974e-4a1f-8ed9-a4faaecc0e01\",\n                    \"name\": \"v1\",\n                    \"summary\": \"Updated summary\"\n                },\n                {\n                    \"id\": \"c8e1db63-6a41-4ef1-9983-ce4190556a9f\",\n                    \"name\": \"v1\",\n                    \"summary\": null\n                },\n                {\n                    \"id\": \"e0660ab6-d579-4db6-9a9d-8522ae70138b\",\n                    \"name\": \"Test\",\n                    \"summary\": null\n                },\n                {\n                    \"id\": \"e066e7ba-97ad-4daf-8ce0-eeda30f254e3\",\n                    \"name\": \"draft\",\n                    \"summary\": null\n                }\n            ]\n        },\n        \"b55e3cf1-83df-4347-95de-ca3d25a37c3a\": {\n            \"createdAt\": \"2022-04-07T06:09:08.000Z\",\n            \"updatedAt\": \"2022-04-07T06:09:08.000Z\",\n            \"id\": \"b55e3cf1-83df-4347-95de-ca3d25a37c3a\",\n            \"name\": \"Swagger Petstore\",\n            \"summary\": null,\n            \"description\": null,\n            \"createdBy\": \"55850\",\n            \"updatedBy\": \"55850\",\n            \"isMigrated\": false,\n            \"versions\": [\n                {\n                    \"id\": \"06144b5a-d6c2-47e3-9d03-f09273f645a7\",\n                    \"name\": \"draft\",\n                    \"summary\": null\n                }\n            ]\n        }\n    }\n}"
						},
						{
							"id": "5ac04e7a-a891-4ce1-9107-ad2f393c05d1",
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apis\": [\"api1\", \"api2\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/many",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"many"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Aug 2022 04:51:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"authenticationError\",\n        \"message\": \"You are not authenticated by the server.\"\n    }\n}"
						},
						{
							"id": "e1e707e7-f2c8-4092-a56b-186076b16562",
							"name": "Invalid API id",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apis\": [\"api1\", \"api2\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/many",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"many"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 03 Aug 2022 04:52:29 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "126"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The specified parameter is in an invalid format\",\n        \"details\": {\n            \"param\": \"apis\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get all Versions for an API",
					"id": "76ee97e1-978b-4843-a408-f7452efe5213",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Access-Token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions"
							]
						}
					},
					"response": [
						{
							"id": "40449e10-71c3-42b1-86d8-f29305bb9203",
							"name": "Get all Versions for an API",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"getApiVersions\"\n\t},\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"024660a6-c837-46ca-91d8-7e8dd7c669de\",\n\t\t\t\"name\": \"0.1\",\n\t\t\t\"summary\": \"Summary\",\n\t\t\t\"description\": \"Description\",\n\t\t\t\"createdBy\": \"5665\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"schema\": [\"7980b6df-4dbb-493a-bce8-1d201e1173f9\"]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"00932d3b-20f1-454f-a77e-38b4023163ea\",\n\t\t\t\"name\": \"0.2\",\n\t\t\t\"summary\": \"Summary\",\n\t\t\t\"description\": \"Description\",\n\t\t\t\"createdBy\": \"5665\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"schema\": [\"2f4bbaa1-40a1-4ca6-90aa-b5ac6f587bc5\"]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"c4dbe69a-3059-418d-9c3c-3d52288f2eb5\",\n\t\t\t\"name\": \"1.0\",\n\t\t\t\"summary\": \"Summary\",\n\t\t\t\"description\": \"Description\",\n\t\t\t\"createdBy\": \"5665\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"schema\": []\n\t\t}\n\t]\n}"
						},
						{
							"id": "0aaaff93-27c5-4a02-a885-0ec847ae84db",
							"name": "Get all Versions and relations for an API",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions?populate=relations",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions"
									],
									"query": [
										{
											"key": "populate",
											"value": "relations"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"getApiVersions\"\n\t},\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"024660a6-c837-46ca-91d8-7e8dd7c669de\",\n\t\t\t\"name\": \"0.1\",\n\t\t\t\"summary\": \"Summary\",\n\t\t\t\"description\": \"Description\",\n\t\t\t\"createdBy\": \"5665\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\",\n            \"relations\": {\n                 \"test\": [\n                    \"0f12792a-7d86-4f84-834a-548a0a682f7b\"\n                ],\n                \"schema\": [\n                    \"ce43de27-3189-485b-85db-67670d295066\"\n                ]\n            },\n\t\t\t\"schema\": [\"ce43de27-3189-485b-85db-67670d295066\"]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"00932d3b-20f1-454f-a77e-38b4023163ea\",\n\t\t\t\"name\": \"0.2\",\n\t\t\t\"summary\": \"Summary\",\n\t\t\t\"description\": \"Description\",\n\t\t\t\"createdBy\": \"5665\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"schema\": [\"2f4bbaa1-40a1-4ca6-90aa-b5ac6f587bc5\"]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"c4dbe69a-3059-418d-9c3c-3d52288f2eb5\",\n\t\t\t\"name\": \"1.0\",\n\t\t\t\"summary\": \"Summary\",\n\t\t\t\"description\": \"Description\",\n\t\t\t\"createdBy\": \"5665\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"schema\": []\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get team for an API",
					"id": "5477573d-f350-4a8b-a0d5-00e8a68e904b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/team",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"team"
							]
						},
						"description": "This returns the id of the team the API is part of"
					},
					"response": [
						{
							"id": "5f4dc63a-7fdf-4c5f-8060-64978e0772ff",
							"name": "Success: API belongs to a team",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/ff23a129-4725-4355-b265-fe3edaf70769/team",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"ff23a129-4725-4355-b265-fe3edaf70769",
										"team"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"ff23a129-4725-4355-b265-fe3edaf70769\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"getteam\"\n\t},\n\t\"data\": {\n\t\t\"team\": \"123\"\n\t}\n}"
						},
						{
							"id": "1d0886db-a704-473f-985b-4c8b0d2521be",
							"name": "Success: API does not belong to a team",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/ff23a129-4725-4355-b265-fe3edaf70769/team",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"ff23a129-4725-4355-b265-fe3edaf70769",
										"team"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"ff23a129-4725-4355-b265-fe3edaf70769\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"getteam\"\n\t},\n\t\"data\": {\n\t\t\"team\": null\n\t}\n}"
						},
						{
							"id": "b1006a58-695c-4dd2-95c4-45de85589059",
							"name": "404 API not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/ff23a129-4725-4355-b265-fe3edaf70769/team",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"ff23a129-4725-4355-b265-fe3edaf70769",
										"team"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"We could not find the API you are looking for\",\n    \"details\": {\n      \"model\": \"api\",\n      \"model_id\": \"ff23a129-4725-4355-b265-fe3edaf70769\",\n      \"owner\": \"U1\"\n    }\n  }\n}"
						},
						{
							"id": "1742b451-9053-4ce7-9753-e3d39de4958b",
							"name": "403 No View permission on API",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/ff23a129-4725-4355-b265-fe3edaf70769/team",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"ff23a129-4725-4355-b265-fe3edaf70769",
										"team"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"forbiddenError\",\n    \"message\": \"You are not permitted to perform the action.\",\n    \"details\": {\n      \"model\": \"api\",\n      \"model_id\": \"ff23a129-4725-4355-b265-fe3edaf70769\",\n      \"owner\": \"U1\",\n      \"message\": \"You do not have access to perform this operation.\"\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Update Roles of an API",
					"id": "82ea9200-5247-4fd4-83ee-584ce974b754",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"roles\": [\n        {\n            \"entityType\": \"team\",\n            \"entityId\": \"T1\",\n            \"roles\": {\n                \"API_VIEWER\": {\n                    \"objects\": [\n                        {\n                            \"objectType\": \"api\",\n                            \"objectId\": \"8a0b58ae-1535-4178-95e5-5aa2eb50a2d3\"\n                        }\n                    ]\n                }\n            }\n        },\n         {\n            \"entityType\": \"user\",\n            \"entityId\": \"U2\",\n            \"roles\": {\n                \"API_EDITOR\": {\n                    \"objects\": [\n                        {\n                            \"objectType\": \"api\",\n                            \"objectId\": \"8a0b58ae-1535-4178-95e5-5aa2eb50a2d3\"\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/roles",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"roles"
							]
						}
					},
					"response": [
						{
							"id": "136f25c8-f085-48f3-a71b-64fe1b188e9c",
							"name": "Success: Update Roles of an API",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"roles\": [\n        {\n            \"entityType\": \"team\",\n            \"entityId\": \"T1\",\n            \"roles\": {\n                \"API_VIEWER\": {\n                    \"objects\": [\n                        {\n                            \"objectType\": \"api\",\n                            \"objectId\": \"8a0b58ae-1535-4178-95e5-5aa2eb50a2d3\"\n                        }\n                    ]\n                }\n            }\n        },\n         {\n            \"entityType\": \"user\",\n            \"entityId\": \"U2\",\n            \"roles\": {\n                \"API_EDITOR\": {\n                    \"objects\": [\n                        {\n                            \"objectType\": \"api\",\n                            \"objectId\": \"8a0b58ae-1535-4178-95e5-5aa2eb50a2d3\"\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/roles",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"roles"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"8a0b58ae-1535-4178-95e5-5aa2eb50a2d3\", \n\t\"data\": {},\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"updateroles\"\n\t}\n}"
						}
					]
				},
				{
					"name": "Delete an API",
					"id": "e0120238-4f07-4a3f-a5a2-017e426f466d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "creatus_est",
									"type": "string"
								},
								{
									"key": "username",
									"value": "sic_mundus",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "X-Access-Token",
								"value": "{{accessToken}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/apis/ef98d466-6dd1-4238-8f62-6575ea102d02",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"ef98d466-6dd1-4238-8f62-6575ea102d02"
							]
						},
						"description": "This endpoint deletes an API."
					},
					"response": [
						{
							"id": "586f7607-d35c-4ebb-860e-b30dcb2c09b3",
							"name": "Success: Delete an API",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Access-Token",
										"type": "text",
										"value": "{{accessToken}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis/392355ae-5f06-47b7-a5b6-854b8be41bd5",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"392355ae-5f06-47b7-a5b6-854b8be41bd5"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"392355ae-5f06-47b7-a5b6-854b8be41bd5\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"destroy\"\n\t},\n\t\"data\": {\n\t\t\"id\": \"392355ae-5f06-47b7-a5b6-854b8be41bd5\"\n\t}\n}"
						}
					]
				},
				{
					"name": "Api linked to a collection",
					"id": "53f5377f-8242-44d7-94a1-3e4b54f1a3d5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/collections/{{collectionUID}}/api?populate[]=apiversion&filter=latest",
							"host": [
								"{{url}}"
							],
							"path": [
								"collections",
								"{{collectionUID}}",
								"api"
							],
							"query": [
								{
									"key": "populate[]",
									"value": "apiversion"
								},
								{
									"key": "filter",
									"value": "latest"
								}
							]
						}
					},
					"response": [
						{
							"id": "73524698-bafa-4e89-b0f5-563981c34c4c",
							"name": "Api linked to a collection (no api)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/collections/{{collectionUID}}/api",
									"host": [
										"{{url}}"
									],
									"path": [
										"collections",
										"{{collectionUID}}",
										"api"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"{{collectionId}}\",\n\t\"meta\": {\n\t\t\"model\": \"collection\",\n\t\t\"action\": \"getApis\"\n\t},\n\t\"data\": {\n\t\t\"api\": null\n\t}\n}"
						},
						{
							"id": "db92d1a7-74c7-4971-8800-a9f1a4a7c481",
							"name": "Api linked to a collection",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/collections/{{collectionUID}}/api",
									"host": [
										"{{url}}"
									],
									"path": [
										"collections",
										"{{collectionUID}}",
										"api"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{collectionId}}\",\n    \"meta\": {\n        \"model\": \"collection\",\n        \"action\": \"getApis\"\n    },\n    \"data\": {\n        \"api\": {\n        \t\"id\": \"{{apiId}}\",\n        \t\"name\": \"{{apiName}}\",\n        \t\"createdAt\": \"{{createdAt}}\",\n        \t\"updatedAt\": \"{{updatedAt}}\"\n        }\n    }\n}"
						},
						{
							"id": "20f4b25e-95eb-4915-8880-66540836cc5c",
							"name": "Api linked to a collection with versions",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/collections/{{collectionUID}}/api?populate[]=apiversion&filter=latest",
									"host": [
										"{{url}}"
									],
									"path": [
										"collections",
										"{{collectionUID}}",
										"api"
									],
									"query": [
										{
											"key": "populate[]",
											"value": "apiversion"
										},
										{
											"key": "filter",
											"value": "latest"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{collectionId}}\",\n    \"meta\": {\n        \"model\": \"collection\",\n        \"action\": \"getApis\"\n    },\n    \"data\": {\n        \"api\": {\n            \"id\": \"{{apiId}}\",\n            \"name\": \"{{apiName}}\",\n            \"createdAt\": \"{{createdAt}}\",\n            \"updatedAt\": \"{{updatedAt}}\",\n            \"versions\": [\n            \t{\n            \t\t\"name\": \"Version1\",\n            \t\t\"id\": \"{{apiVersionName}}\"\n            \t}\t\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Import API",
					"id": "e2e17405-465d-4110-9bfe-5dcc345da902",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-access-token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Sync Service API\",\n\t\"summary\": \"This is supposed to be a short summary.\",\n\t\"description\": \"This is supposed to handle markdown *descriptions*.\",\n\t\"versions\": [\n\t\t{\n\t\t\t\"name\": \"1.0\",\n\t\t\t\"schemas\": [\n\t\t\t\t{\n\t\t\t\t\t\"schema\": \"{{schema}}\",\n\t\t\t\t\t\"type\": \"openapi3\",\n\t\t\t\t\t\"checksum\": \"\",\n\t\t\t\t\t\"language\": \"json\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"relations\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"documentation\",\n\t\t\t\t\t\"model\": \"collection\",\n\t\t\t\t\t\"modelId\": \"5665-12345678-1234-1234-1234-123456789012\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{url}}/apis/import?workspace={{workspaceId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"import"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}"
								}
							]
						},
						"description": "This endpoint will import an API and will send `API.create`, `Workspce.Update` and `API.addedToWorkspace` realtime events."
					},
					"response": [
						{
							"id": "e5e85c2e-aee3-43cd-98dc-dfaa940ad767",
							"name": "Import API (w/o relations)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Sync Service API\",\n\t\"summary\": \"This is supposed to be a short summary.\",\n\t\"description\": \"This is supposed to handle markdown *descriptions*.\",\n\t\"versions\": [\n\t\t{\n\t\t\t\"name\": \"1.0\",\n\t\t\t\"schemas\": [\n\t\t\t\t{\n\t\t\t\t\t\"schema\": \"{{schema}}\",\n\t\t\t\t\t\"type\": \"openapi\",\n\t\t\t\t\t\"checksum\": \"\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"relations\": []\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{url}}/apis/import",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"import"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"action\": \"import\",\n        \"model\": \"api\"\n    },\n    \"data\": {\n        \"name\": \"Sync Service API\",\n        \"id\": \"3b7e2a87-6e34-4b7a-a756-dad56425dbee\",\n        \"summary\": \"This is supposed to be a short summary.\",\n        \"description\": \"This is supposed to handle markdown *descriptions*.\",\n        \"createdAt\": \"2019-07-21T16:31:15.110Z\",\n        \"updatedAt\": \"2019-07-21T16:31:15.110Z\",\n        \"createdBy\": \"55850\",\n        \"updatedBy\": \"55850\",\n        \"versions\": [\n            {\n                \"id\": \"3b7e2a87-6e34-4b7a-a756-dad56425dbdf\",\n                \"name\": \"1.0\",\n                \"schemas\": [\n                    \"3b7e2a87-6e34-4b7a-a756-dad56425dbfd\"\n                ]\n            }\n        ]\n    } \n}"
						},
						{
							"id": "1b7438d3-c493-4b9f-a1d2-17616a304f8d",
							"name": "Import API (with schema and relations)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Sync Service API\",\n\t\"summary\": \"This is supposed to be a short summary.\",\n\t\"description\": \"This is supposed to handle markdown *descriptions*.\",\n\t\"versions\": [\n\t\t{\n\t\t\t\"name\": \"1.0\",\n\t\t\t\"schemas\": [\n\t\t\t\t{\n\t\t\t\t\t\"schema\": \"{{schema}}\",\n\t\t\t\t\t\"type\": \"openapi\",\n\t\t\t\t\t\"checksum\": \"\",\n\t\t\t\t\t\"language\": \"yaml\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"relations\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"documentation\",\n\t\t\t\t\t\"model\": \"collection\",\n\t\t\t\t\t\"modelId\": \"5665-12345678-1234-1234-1234-123456789012\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{url}}/apis/import?workspace={{workspace}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"import"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspace}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"action\": \"import\",\n        \"model\": \"api\"\n    },\n    \"data\": {\n        \"name\": \"Sync Service API\",\n        \"id\": \"3b7e2a87-6e34-4b7a-a756-dad56425dbee\",\n        \"summary\": \"This is supposed to be a short summary.\",\n        \"description\": \"This is supposed to handle markdown *descriptions*.\",\n        \"createdAt\": \"2019-07-21T16:31:15.110Z\",\n        \"updatedAt\": \"2019-07-21T16:31:15.110Z\",\n        \"createdBy\": \"55850\",\n        \"updatedBy\": \"55850\",\n        \"versions\": [\n            {\n                \"id\": \"3b7e2a87-6e34-4b7a-a756-dad56425dbdf\",\n                \"name\": \"1.0\",\n                \"schemas\": [\n                    \"3b7e2a87-6e34-4b7a-a756-dad56425dbfd\"\n                ]\n            }\n        ]\n    } \n}"
						},
						{
							"id": "17771ab5-efc8-48b3-905c-5de5f9410e08",
							"name": "Import API (w/o schemas and relations)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Sync Service API\",\n\t\"summary\": \"This is supposed to be a short summary.\",\n\t\"description\": \"This is supposed to handle markdown *descriptions*.\",\n\t\"versions\": [\n\t\t{\n\t\t\t\"name\": \"1.0\",\n\t\t\t\"schemas\": [],\n\t\t\t\"relations\": []\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{url}}/apis/import?workspace={{workspace}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"import"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspace}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"action\": \"import\",\n        \"model\": \"api\"\n    },\n    \"data\": {\n        \"name\": \"Sync Service API\",\n        \"id\": \"3b7e2a87-6e34-4b7a-a756-dad56425dbee\",\n        \"summary\": \"This is supposed to be a short summary.\",\n        \"description\": \"This is supposed to handle markdown *descriptions*.\",\n        \"createdAt\": \"2019-07-21T16:31:15.110Z\",\n        \"updatedAt\": \"2019-07-21T16:31:15.110Z\",\n        \"createdBy\": \"55850\",\n        \"updatedBy\": \"55850\",\n        \"versions\": [\n            {\n                \"id\": \"3b7e2a87-6e34-4b7a-a756-dad56425dbdf\",\n                \"name\": \"1.0\",\n                \"schemas\": [],\n                \"api\": \"3b7e2a87-6e34-4b7a-a756-dad56425dbee\"\n            }\n        ]\n    } \n}"
						},
						{
							"id": "e2fdc12d-7820-4d4c-b8ac-0d1807a08121",
							"name": "Import API (with schema and relations and default version)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Sync Service API\",\n\t\"summary\": \"This is supposed to be a short summary.\",\n\t\"description\": \"This is supposed to handle markdown *descriptions*.\",\n\t\"versions\": [\n\t\t{\n\t\t\t\"schemas\": [\n\t\t\t\t{\n\t\t\t\t\t\"schema\": \"{{schema}}\",\n\t\t\t\t\t\"type\": \"openapi\",\n\t\t\t\t\t\"checksum\": \"\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"relations\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"documentation\",\n\t\t\t\t\t\"model\": \"collection\",\n\t\t\t\t\t\"modelId\": \"5665-12345678-1234-1234-1234-123456789012\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{url}}/apis/import?workspace={{workspace}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"import"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspace}}"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"action\": \"import\",\n        \"model\": \"api\"\n    },\n    \"data\": {\n        \"name\": \"Sync Service API\",\n        \"id\": \"3b7e2a87-6e34-4b7a-a756-dad56425dbee\",\n        \"summary\": \"This is supposed to be a short summary.\",\n        \"description\": \"This is supposed to handle markdown *descriptions*.\",\n        \"createdAt\": \"2019-07-21T16:31:15.110Z\",\n        \"updatedAt\": \"2019-07-21T16:31:15.110Z\",\n        \"createdBy\": \"55850\",\n        \"updatedBy\": \"55850\",\n        \"versions\": [\n            {\n                \"id\": \"3b7e2a87-6e34-4b7a-a756-dad56425dbdf\",\n                \"name\": \"Draft\",\n                \"schemas\": [\n                    \"3b7e2a87-6e34-4b7a-a756-dad56425dbfd\"\n                ]\n            }\n        ]\n    }\n}"
						},
						{
							"id": "80cd0a82-5bc8-46ad-96a1-14c9d9b2a4f3",
							"name": "Import API (w/o schemas)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Sync Service API\",\n\t\"summary\": \"This is supposed to be a short summary.\",\n\t\"description\": \"This is supposed to handle markdown *descriptions*.\",\n\t\"versions\": [\n\t\t{\n\t\t\t\"name\": \"1.0\",\n\t\t\t\"schemas\": [],\n\t\t\t\"relations\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"documentation\",\n\t\t\t\t\t\"model\": \"collection\",\n\t\t\t\t\t\"modelId\": \"5665-12345678-1234-1234-1234-123456789012\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{url}}/apis/import?workspace={{workspace}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"import"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspace}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"action\": \"import\",\n        \"model\": \"api\"\n    },\n    \"data\": {\n        \"name\": \"Sync Service API\",\n        \"id\": \"3b7e2a87-6e34-4b7a-a756-dad56425dbee\",\n        \"summary\": \"This is supposed to be a short summary.\",\n        \"description\": \"This is supposed to handle markdown *descriptions*.\",\n        \"createdAt\": \"2019-07-21T16:31:15.110Z\",\n        \"updatedAt\": \"2019-07-21T16:31:15.110Z\",\n        \"createdBy\": \"55850\",\n        \"updatedBy\": \"55850\",\n        \"versions\": [\n            {\n                \"id\": \"3b7e2a87-6e34-4b7a-a756-dad56425dbdf\",\n                \"name\": \"1.0\",\n                \"schemas\": []\n            }\n        ]\n    } \n}"
						},
						{
							"id": "d9ddbc2f-599a-4738-ad9c-c8199771b59f",
							"name": "Import API (w/o version)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Sync Service API\",\n\t\"summary\": \"This is supposed to be a short summary.\",\n\t\"description\": \"This is supposed to handle markdown *descriptions*.\",\n\t\"versions\": []\n}"
								},
								"url": {
									"raw": "{{url}}/apis/import?workspace={{workspace}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"import"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspace}}"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"action\": \"import\",\n        \"model\": \"api\"\n    },\n    \"data\": {\n        \"name\": \"Sync Service API\",\n        \"id\": \"3b7e2a87-6e34-4b7a-a756-dad56425dbee\",\n        \"summary\": \"This is supposed to be a short summary.\",\n        \"description\": \"This is supposed to handle markdown *descriptions*.\",\n        \"createdAt\": \"2019-07-21T16:31:15.110Z\",\n        \"updatedAt\": \"2019-07-21T16:31:15.110Z\",\n        \"createdBy\": \"55850\",\n        \"updatedBy\": \"55850\",\n        \"versions\": [{\n        \t\"name\": \"Draft\",\n        \t\"id\": \"3b7e2a87-6e34-4b7a-a756-dad56425dbef\",\n        \t\"api\": \"3b7e2a87-6e34-4b7a-a756-dad56425dbee\"\n        }]\n    }\n}"
						}
					]
				},
				{
					"name": "Export an API",
					"id": "5162ed5c-28bb-42a8-affd-ac6ab6a02929",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Access-Token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/export",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"export"
							]
						},
						"description": "This endpoint returns an API with the provided id."
					},
					"response": [
						{
							"id": "272f421f-0a01-4ca2-8519-dfe8bebd478c",
							"name": "Export an API",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"type": "text",
										"value": "{{accessToken}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/export",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"export"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 13 May 2020 19:51:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=5df9946c14a4c978"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=7da6f5c0a50a3501"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "10"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "9"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1589399522"
								},
								{
									"key": "ETag",
									"value": "W/\"28dda-c5UbREckCc/V28gQmlWXgA\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"export\"\n    },\n    \"data\": {\n        \"api\": {\n            \"createdBy\": \"7732157\",\n            \"updatedBy\": \"7732157\",\n            \"id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n            \"name\": \"Sync Pen test\",\n            \"summary\": \"This is supposed to be a short summary.\",\n            \"description\": \"This is supposed to handle markdown *descriptions*.\",\n            \"createdAt\": \"2020-05-13T18:49:31.000Z\",\n            \"updatedAt\": \"2020-05-13T19:01:31.000Z\",\n            \"versions\": [\n                {\n                    \"id\": \"559da235-7d58-460a-ac17-7431e6304c94\",\n                    \"name\": \"1.0\",\n                    \"schemas\": [\n                        {\n                            \"type\": \"openapi3\",\n                            \"language\": \"yaml\",\n                            \"schema\": \"openapi: 3.0.0\\ninfo:\\n  title: SimpleKart E-commerce API\\n  version: 1.0.0\\n  contact:\\n    name: Postman Team\\n    email: simplekart@postman.com\\n  description: API for an imaginary E-Commerce store to demonstrate API Builder capabilities in Postman\\nservers:\\n  - url: 'https://api.simplekart.com'\\npaths:\\n  '/items/{itemId}':\\n    parameters:\\n      - schema:\\n          type: integer\\n          example: '1657'\\n          default: '1657'\\n          maximum: 20000\\n          minimum: 0\\n          exclusiveMinimum: false\\n        name: itemId\\n        in: path\\n        description: Id of the item to pull details of\\n        required: true\\n    get:\\n      summary: 'Get item details from the database '\\n      tags:\\n        - item\\n      responses:\\n        '200':\\n          description: OK - Successfully obtained order details\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/item'\\n              examples:\\n                example-1:\\n                  value:\\n                    itemId: 1657\\n                    name: Smart WiFi Router\\n                    price: 2096\\n                    description: 'Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH'\\n        '400':\\n          description: Bad Request - Invalid item ID supplied\\n          content:\\n            application/json:\\n                schema:\\n                    $ref: '#/components/schemas/badRequest'\\n                examples:\\n                    example-1:\\n                        value:\\n                            error:\\n                                message: 'Provided Id is invalid'\\n        '404':\\n          description: Not Found - Item not found\\n          content:\\n            application/json:\\n                schema:\\n                    $ref: '#/components/schemas/notFound'\\n                examples:\\n                    example-1:\\n                        value:\\n                            error:\\n                                message: 'The item you are looking for, does not exist'\\n      operationId: get-items-itemId\\n      description: Obtain item details from item database\\n      parameters: []\\n  '/orders/{orderId}':\\n    parameters:\\n      - schema:\\n          type: integer\\n          default: '674'\\n          maximum: 2000\\n          minimum: 1\\n        name: orderId\\n        in: path\\n        required: true\\n    get:\\n      summary: Get order details from database\\n      tags:\\n        - order\\n      responses:\\n        '200':\\n          description: OK - Successfully obtained order details\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/order'\\n              examples:\\n                example-1:\\n                  value:\\n                    orderId: 674\\n                    items:\\n                      - itemId: 1657\\n                        name: Smart WiFi Router\\n                        price: 2096\\n                        description: 'Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH'\\n                    arrivalDate: '2020-3-04T13:07:45.962Z'\\n                    orderDate: '2020-03-06T19:27:26.733Z'\\n                    orderTotal: 2096\\n                    address: '95 Tarkiln Hill St.Laurel, MD 20707'\\n                example-2:\\n                  value:\\n                    orderId: 656\\n                    items:\\n                      - itemId: 16247\\n                        name: 'Postman Merch'\\n                        price: 15\\n                        description: 'Official T-shirt for the Postman community.'\\n                    arrivalDate: '2020-3-04T13:07:45.962Z'\\n                    orderDate: '2020-03-06T19:27:26.733Z'\\n                    orderTotal: 15\\n                    address: 'SimpleKart HQ, 221B Baker street'\\n        '400':\\n          description: Bad Request - Invalid order ID supplied\\n          content:\\n            application/json:\\n                schema:\\n                    $ref: '#/components/schemas/badRequest'\\n                examples:\\n                    example-1:\\n                        value:\\n                            error:\\n                                message: 'Provided Id is invalid'\\n        '404':\\n          description: Not Found - Order not found\\n          content:\\n            application/json:\\n                schema:\\n                    $ref: '#/components/schemas/notFound'\\n                examples:\\n                    example-1:\\n                        value:\\n                            error:\\n                                message: 'The order you are looking for, does not exist'\\n      operationId: get-orders-orderId\\n      description: Obtain item details from the database\\n  /orders:\\n    get:\\n      summary: 'Get orders from the database '\\n      tags:\\n        - orders\\n      responses:\\n        '200':\\n          description: OK - Successful pull of orders\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/orders'\\n              examples:\\n                example-1:\\n                  value:\\n                    - orderId: 674\\n                      items:\\n                        - itemId: 1657\\n                          name: Smart WiFi Router\\n                          price: 2096\\n                          description: 'Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH'\\n                      arrivalDate: '2020-03-03T13:07:45.962Z'\\n                      orderDate: '2020-03-01T19:27:26.733Z'\\n                      orderTotal: 2096\\n                      address: '95 Tarkiln Hill St.Laurel, MD 20707'\\n                    - orderId: 675\\n                      items:\\n                        - itemId: 1658\\n                          name: VR Gaming Headset\\n                          price: 79990\\n                          description: \\\"VR Gaming Headset puts you at the center of virtual reality's most pulse-pounding, PC-powered gameplay. See the action unfold all around you through our sharpest lenses and next-generation optics. Lose yourself in the experience with a comfortable, improved design that lets you start playing faster and keep playing longer. Insight tracking gives you the power to move throughout your playspace in any direction. No external sensors. No complicated setup. Just hands-on action and interaction with our updated Oculus Touch controllers right out of the box. Step into the game and the future of PC VR.\\\"\\n                      arrivalDate: '2020-03-03T15:00:56.787Z'\\n                      orderDate: '2020-03-02T21:25:22.096Z'\\n                      orderTotal: 79990\\n                      address: '7405 Arcadia St.Rockville, MD 20850'\\n                    - orderId: 676\\n                      items:\\n                        - itemId: 1665\\n                          name: Smart Watch\\n                          price: 1805\\n                          description: 'Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data.'\\n                      arrivalDate: '2020-03-05T17:30:15.156Z'\\n                      orderDate: '2020-03-03T01:10:27.512Z'\\n                      orderTotal: 1805\\n                      address: '9791 Lawrence Dr.Marlton, NJ 08053r'\\n                    - orderId: 677\\n                      items:\\n                        - itemId: 1659\\n                          name: 'Classic Loop Top Shaker Bottle, 20-Ounce'\\n                          price: 578\\n                          description: 'Easy to maintain proper nutrition and hydration on-the-go.The wide mouth makes it easy to add scoops of powdered mixes, meal ingredients, and liquids, and embossed markings show both ounces and milliliters for easy measuring anywhere (note that markings on the 20-ounce capacity shaker cup only go up to 12 ounces). Bottle contents and liquids are securely contained thanks to a tightly threaded screw-on lid that creates a leakproof seal, and a flip cap that snaps securely shut for shaking and transportation.'\\n                      arrivalDate: '2020-03-03T18:16:24.911Z'\\n                      orderDate: '2020-03-01T06:09:23.007Z'\\n                      orderTotal: 578\\n                      address: '822 Clay St.Tampa, FL 33604'\\n                    - orderId: 678\\n                      items:\\n                        - itemId: 1663\\n                          name: Hair Dryer\\n                          price: 1400\\n                          description: 'Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%.'\\n                      arrivalDate: '2020-03-04T12:09:07.955Z'\\n                      orderDate: '2020-03-02T21:50:44.173Z'\\n                      orderTotal: 1400\\n                      address: '7444 SW. State Ave.Philadelphia, PA 19111'\\n                    - orderId: 679\\n                      items:\\n                        - itemId: 1660\\n                          name: 4-Port USB 2.0 Hub\\n                          price: 505\\n                          description: 'Easily add up to 4 devices with the USB 2.0 Hub. Particularly great for recent notebooks that provide a limited number of USB ports. Achieve full 480 Mbps on each port, or daisy-chain multiple hubs to a maximum of 127 devices.Fully backwards compatible with the USB 1.1 products.'\\n                      arrivalDate: '2020-03-04T11:29:56.99Z'\\n                      orderDate: '2020-03-03T00:51:26.19Z'\\n                      orderTotal: 505\\n                      address: '307 Purple Finch Ave.New Lenox, IL 60451'\\n                    - orderId: 680\\n                      items:\\n                        - itemId: 1661\\n                          name: 'Wipes Flushable Wet Wipes Dispenser, Mint Chill, 48 Count (Pack of 3)'\\n                          price: 938\\n                          description: 'For a superior clean that’s fresh, gentle, and effective, choose Wipes with the CleaningRipples Texture. Wipes are 100 percent flushable, remove odor causing bacteria and offer a large, dual layer wipe to clean better than when using dry toilet paper alone.'\\n                      arrivalDate: '2020-03-04T02:06:58.886Z'\\n                      orderDate: '2020-03-02T04:33:52.652Z'\\n                      orderTotal: 938\\n                      address: '946 Holly StreetHamilton, OH 45011'\\n                    - orderId: 681\\n                      items:\\n                        - itemId: 1663\\n                          name: Hair Dryer\\n                          price: 1400\\n                          description: 'Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%.'\\n                      arrivalDate: '2020-03-04T17:26:07.706Z'\\n                      orderDate: '2020-03-02T04:17:23.689Z'\\n                      orderTotal: 1400\\n                      address: '8924 East Birchwood St.Hamburg, NY 14075'\\n                    - orderId: 682\\n                      items:\\n                        - itemId: 1665\\n                          name: Smart Watch\\n                          price: 1805\\n                          description: 'Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data.'\\n                      arrivalDate: '2020-03-05T14:07:01.688Z'\\n                      orderDate: '2020-03-03T04:58:18.504Z'\\n                      orderTotal: 1805\\n                      address: '10 Wilson LaneBay City, MI 48706'\\n                    - orderId: 683\\n                      items:\\n                        - itemId: 1666\\n                          name: 'Learning Thermostat, 3rd Gen, Smart Thermostat'\\n                          price: 15746\\n                          description: 'Learning Thermostat is a smart thermostat that learns what temperatures you like, turns itself down when you’re away and connects to your phone. It has a big, sharp display. And it’s proven to help save energy. In independent studies, the Thermostat saved an average of 10% to 12% on heating bills and 15% on cooling bills.'\\n                      arrivalDate: '2020-03-05T10:43:23.713Z'\\n                      orderDate: '2020-03-03T08:34:21.21Z'\\n                      orderTotal: 15746\\n                      address: 'm81 West Shirley Dr.Greenfield, IN 46140'\\n                    - orderId: 656\\n                      items:\\n                        - itemId: 16247\\n                          name: 'Postman Merch'\\n                          price: 15\\n                          description: 'Official T-shirt for the Postman community.'\\n                      arrivalDate: '2020-3-04T13:07:45.962Z'\\n                      orderDate: '2020-03-06T19:27:26.733Z'\\n                      orderTotal: 15\\n                      address: 'SimpleKart HQ, 221B Baker street'\\n      operationId: get-orders\\n      description: Obtain order details from orders database\\n      parameters:\\n        - schema:\\n            type: integer\\n            minimum: 1\\n            maximum: 15\\n            default: '10'\\n          in: query\\n          name: list\\n          description: Number of orders to show\\n    post:\\n      summary: Post order details to the database\\n      tags:\\n        - orders\\n      responses:\\n        '201':\\n          description: OK - Order created\\n          content:\\n            application/json:\\n              schema:\\n                $ref: '#/components/schemas/order'\\n              examples:\\n                example-1:\\n                  value:\\n                    orderId: 674\\n                    items:\\n                      - itemId: 1657\\n                        name: Smart WiFi Router\\n                        price: 2096\\n                        description: 'Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH'\\n                    arrivalDate: '2020-3-04T13:07:45.962Z'\\n                    orderDate: '2020-03-06T19:27:26.733Z'\\n                    orderTotal: 2096\\n                    address: '95 Tarkiln Hill St.Laurel, MD 20707'\\n      operationId: post-orders\\n      requestBody:\\n        content:\\n          application/json:\\n            schema:\\n              type: object\\n              properties:\\n                item:\\n                  $ref: '#/components/schemas/item'\\n                address:\\n                  type: string\\n              required:\\n                - address\\n            examples:\\n              example-1:\\n                value:\\n                  items:\\n                    - itemId: 1657\\n                      name: Smart WiFi Router\\n                      price: 2096\\n                      description: 'Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH'\\n                  address: '95 Tarkiln Hill St.Laurel, MD 20707'\\n        description: Body example\\n      description: Post item order to orders database\\n  /items:\\n    get:\\n      summary: Get items from the database\\n      tags: []\\n      responses:\\n        '200':\\n          description: OK - Successful pull of items\\n          content:\\n            application/json:\\n              schema:\\n                type: array\\n                uniqueItems: false\\n                maxItems: 15\\n                minItems: 4\\n                items:\\n                  $ref: '#/components/schemas/items'\\n              examples:\\n                example-1:\\n                  value:\\n                    - itemId: 1657\\n                      name: Smart WiFi Router\\n                      price: 2096\\n                      description: 'Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH'\\n                    - itemId: 1658\\n                      name: VR Gaming Headset\\n                      price: 79990\\n                      description: \\\"VR Gaming Headset puts you at the center of virtual reality's most pulse-pounding, PC-powered gameplay. See the action unfold all around you through our sharpest lenses and next-generation optics. Lose yourself in the experience with a comfortable, improved design that lets you start playing faster and keep playing longer. Insight tracking gives you the power to move throughout your playspace in any direction. No external sensors. No complicated setup. Just hands-on action and interaction with our updated Oculus Touch controllers right out of the box. Step into the game and the future of PC VR.\\\"\\n                    - itemId: 1659\\n                      name: 'Classic Loop Top Shaker Bottle, 20-Ounce'\\n                      price: 578\\n                      description: 'Easy to maintain proper nutrition and hydration on-the-go.The wide mouth makes it easy to add scoops of powdered mixes, meal ingredients, and liquids, and embossed markings show both ounces and milliliters for easy measuring anywhere (note that markings on the 20-ounce capacity shaker cup only go up to 12 ounces). Bottle contents and liquids are securely contained thanks to a tightly threaded screw-on lid that creates a leakproof seal, and a flip cap that snaps securely shut for shaking and transportation.'\\n                    - itemId: 1660\\n                      name: 4-Port USB 2.0 Hub\\n                      price: 505\\n                      description: 'Easily add up to 4 devices with the USB 2.0 Hub. Particularly great for recent notebooks that provide a limited number of USB ports. Achieve full 480 Mbps on each port, or daisy-chain multiple hubs to a maximum of 127 devices.Fully backwards compatible with the USB 1.1 products.'\\n                    - itemId: 1661\\n                      name: 'Wipes Flushable Wet Wipes Dispenser, Mint Chill, 48 Count (Pack of 3)'\\n                      price: 938\\n                      description: 'For a superior clean that’s fresh, gentle, and effective, choose Wipes with the CleaningRipples Texture. Wipes are 100 percent flushable, remove odor causing bacteria and offer a large, dual layer wipe to clean better than when using dry toilet paper alone.'\\n                    - itemId: 1662\\n                      name: Cordless Vacuum Cleaner\\n                      price: 41893\\n                      description: 'Twice the suction of any cord-free vacuum. Cord-free cleaning, made easier. Intelligently optimizes suction and run time, to deep clean everywhere. With fade-free battery power and a battery-saving trigger. And real-time reporting on the LCD screen to give you control of your clean. The Dynamic Load Sensor (DLS) system automatically changes the motor speed between carpets and hard floors. For deep cleaning across floor types.'\\n                    - itemId: 1663\\n                      name: Hair Dryer\\n                      price: 1400\\n                      description: 'Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%.'\\n                    - itemId: 1664\\n                      name: Business Z27n G2 27 inch LED LCD Monitor\\n                      price: 24485\\n                      description: 'Be a productive powerhouse with the sleek QHD HP Z27n G2 27-inch Display. This virtually seamless display is factory-tested for reliability and longevity with integrated color calibration, uninterrupted multi-screen tiling, and expansive device connections, including USB-C™. Multi-screen productivity with no disruptions Streamline multi-tasking on multiple displays with a 3-sided micro-edge bezel, and daisy chain up to 2 displays per workstation with DisplayPort™.'\\n                    - itemId: 1665\\n                      name: Smart Watch\\n                      price: 1805\\n                      description: 'Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data.'\\n                    - itemId: 1666\\n                      name: 'Learning Thermostat, 3rd Gen, Smart Thermostat'\\n                      price: 15746\\n                      description: 'Learning Thermostat is a smart thermostat that learns what temperatures you like, turns itself down when you’re away and connects to your phone. It has a big, sharp display. And it’s proven to help save energy. In independent studies, the Thermostat saved an average of 10% to 12% on heating bills and 15% on cooling bills.'\\n                    - itemId: 16247\\n                      name: Postman Merch\\n                      price: 15\\n                      description: 'Official T-shirt for the Postman community.'\\n      operationId: get-items\\n      description: Pull a list of items from item database\\n      parameters:\\n        - schema:\\n            type: integer\\n            default: '10'\\n            maximum: 15\\n            minimum: 4\\n          in: query\\n          name: list\\n          description: Number of items to be displayed\\ncomponents:\\n  schemas:\\n    item:\\n      title: item\\n      type: object\\n      description: Model containing item information\\n      properties:\\n        itemId:\\n          type: integer\\n          example: '1657'\\n          minimum: 0\\n          maximum: 20000\\n        name:\\n          type: string\\n          example: Smart WiFi Router\\n        price:\\n          type: integer\\n          example: '2096'\\n          minimum: 10\\n          maximum: 100000\\n        description:\\n          type: string\\n          example: 'Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH'\\n          minLength: 1\\n      required:\\n        - itemId\\n    order:\\n      title: order\\n      type: object\\n      properties:\\n        address:\\n          type: string\\n        orderTotal:\\n          type: integer\\n          maximum: 100000\\n          minimum: 1\\n          example: '5000'\\n        orderDate:\\n          type: string\\n          format: date-time\\n        arrivalDate:\\n          type: string\\n          format: date-time\\n        items:\\n          $ref: '#/components/schemas/items'\\n        orderId:\\n          type: integer\\n          maximum: 20000\\n          minimum: 1\\n          example: '1151'\\n      required:\\n        - address\\n        - items\\n    badRequest:\\n        title: Bad Request\\n        type: object\\n        properties:\\n            error:\\n                type: object\\n                properties:\\n                    message:\\n                        type: string\\n    notFound:\\n        title: Not Found\\n        type: object\\n        properties:\\n            error:\\n                type: object\\n                properties:\\n                    message:\\n                        type: string\\n    items:\\n      type: array\\n      title: items\\n      example: '6'\\n      maxItems: 15\\n      minItems: 1\\n      items:\\n        $ref: '#/components/schemas/item'\\n    orders:\\n      type: array\\n      title: orders\\n      maxItems: 15\\n      minItems: 1\\n      items:\\n        $ref: '#/components/schemas/order'\\n  securitySchemes:\\n    api-key:\\n      name: '12345789012345678901234567890'\\n      type: apiKey\\n      in: query\"\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"id\": \"7732157-f27041a1-1e05-4f63-a81d-31107364e640\",\n                            \"model\": \"environment\",\n                            \"type\": \"environment\",\n                            \"modelId\": \"7732157-f27041a1-1e05-4f63-a81d-31107364e640\"\n                        },\n                        {\n                            \"id\": \"7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d\",\n                            \"model\": \"environment\",\n                            \"type\": \"environment\",\n                            \"modelId\": \"7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d\"\n                        },\n                        {\n                            \"id\": \"7732157-f2924ed2-5406-4a73-bb80-39a113545cb9\",\n                            \"model\": \"environment\",\n                            \"type\": \"environment\",\n                            \"modelId\": \"7732157-f2924ed2-5406-4a73-bb80-39a113545cb9\"\n                        },\n                        {\n                            \"id\": \"7681c25b-5c50-44a6-8724-fe1e71550160\",\n                            \"model\": \"mock\",\n                            \"type\": \"mock\",\n                            \"modelId\": \"7681c25b-5c50-44a6-8724-fe1e71550160\"\n                        },\n                        {\n                            \"id\": \"1ea954a7-ad6d-46c0-b8e7-552c5334c253\",\n                            \"model\": \"monitor\",\n                            \"type\": \"monitor\",\n                            \"modelId\": \"1ea954a7-ad6d-46c0-b8e7-552c5334c253\"\n                        },\n                        {\n                            \"id\": \"5b32caea-903c-472e-81a2-2cb054ede666\",\n                            \"model\": \"collection\",\n                            \"type\": \"documentation\",\n                            \"modelId\": \"7732157-7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4\"\n                        },\n                        {\n                            \"id\": \"b26bc935-7422-4f73-8d03-9bf212fb48ba\",\n                            \"model\": \"collection\",\n                            \"type\": \"testsuite\",\n                            \"modelId\": \"7732157-37350b62-41f3-428a-8bd5-fec517bb4f43\"\n                        },\n                        {\n                            \"id\": \"35c6bdbd-d602-4b37-9c87-1640fc8025c8\",\n                            \"model\": \"collection\",\n                            \"type\": \"integrationtest\",\n                            \"modelId\": \"7732157-6537c169-8d02-413f-94f3-4dda79355a90\"\n                        },\n                        {\n                            \"id\": \"bb69b435-a90a-44fe-aa49-f580eeb1be88\",\n                            \"model\": \"collection\",\n                            \"type\": \"contracttest\",\n                            \"modelId\": \"7732157-38f1a479-3175-40c6-8b76-9b151f04d7ac\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"items\": {\n            \"mocks\": {\n                \"7681c25b-5c50-44a6-8724-fe1e71550160\": {\n                    \"collection\": \"7732157-7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4\",\n                    \"environment\": null,\n                    \"description\": \"Sample description\",\n                    \"name\": \"SimpleKart Mock Service\"\n                }\n            },\n            \"monitors\": {\n                \"1ea954a7-ad6d-46c0-b8e7-552c5334c253\": {\n                    \"collection\": \"7732157-38f1a479-3175-40c6-8b76-9b151f04d7ac\",\n                    \"environment\": \"7732157-f27041a1-1e05-4f63-a81d-31107364e640\",\n                    \"name\": \"SimpleKart Monitor\",\n                    \"schedule\": {\n                        \"cronPattern\": \"0 0 1 * * MON\",\n                        \"timeZone\": \"Asia/Calcutta\"\n                    },\n                    \"options\": {\n                        \"strictSSL\": true,\n                        \"followRedirects\": true,\n                        \"requestTimeout\": null,\n                        \"requestDelay\": 0\n                    }\n                }\n            },\n            \"collections\": {\n                \"7732157-38f1a479-3175-40c6-8b76-9b151f04d7ac\": {\n                    \"owner\": \"7732157\",\n                    \"lastUpdatedBy\": \"7732157\",\n                    \"lastRevision\": 14716072053,\n                    \"team\": null,\n                    \"id\": \"38f1a479-3175-40c6-8b76-9b151f04d7ac\",\n                    \"name\": \"SimpleKart Contract Tests\",\n                    \"description\": \"API for an imaginary E-Commerce store to demonstrate API Builder capabilities in Postman\\n\\nContact Support:\\n Name: Postman Team\\n Email: simplekart@postman.com\",\n                    \"variables\": null,\n                    \"auth\": null,\n                    \"events\": [\n                        {\n                            \"listen\": \"prerequest\",\n                            \"script\": {\n                                \"id\": \"288cb8e2-bdd3-4ebe-ae54-9ad70607c761\",\n                                \"type\": \"text/javascript\",\n                                \"exec\": [\n                                    \"\"\n                                ]\n                            }\n                        },\n                        {\n                            \"listen\": \"test\",\n                            \"script\": {\n                                \"id\": \"f38022f0-1f12-421b-b7f9-5b25661ccaa3\",\n                                \"type\": \"text/javascript\",\n                                \"exec\": [\n                                    \"\"\n                                ]\n                            }\n                        }\n                    ],\n                    \"remote_id\": \"0\",\n                    \"remoteLink\": null,\n                    \"folders_order\": [\n                        \"146734c9-fbae-4c43-940e-05f8ce6a01b6\",\n                        \"ad77cb69-ab87-49d9-830f-14671f354bf2\"\n                    ],\n                    \"order\": [],\n                    \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\",\n                    \"folders\": [\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716072001,\n                            \"collection\": \"7732157#38f1a479-3175-40c6-8b76-9b151f04d7ac\",\n                            \"folder\": null,\n                            \"id\": \"146734c9-fbae-4c43-940e-05f8ce6a01b6\",\n                            \"name\": \"items\",\n                            \"description\": null,\n                            \"variables\": null,\n                            \"auth\": null,\n                            \"events\": null,\n                            \"order\": [\n                                \"9ae5b1ca-b85a-4e93-9e76-4b4df2eedfa4\",\n                                \"df252024-ef9d-4948-bf67-0bb4e43ad22b\"\n                            ],\n                            \"folders_order\": [],\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716072003,\n                            \"collection\": \"7732157#38f1a479-3175-40c6-8b76-9b151f04d7ac\",\n                            \"folder\": null,\n                            \"id\": \"ad77cb69-ab87-49d9-830f-14671f354bf2\",\n                            \"name\": \"orders\",\n                            \"description\": null,\n                            \"variables\": null,\n                            \"auth\": null,\n                            \"events\": null,\n                            \"order\": [\n                                \"f37d2885-a4ff-41ff-9518-9561ed2e6800\",\n                                \"d9ce2cae-7f38-431e-b6fd-26a5886a53d0\",\n                                \"746b69e4-241d-4691-afd4-fb406ba787f1\"\n                            ],\n                            \"folders_order\": [],\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                        }\n                    ],\n                    \"requests\": [\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071713,\n                            \"folder\": \"ad77cb69-ab87-49d9-830f-14671f354bf2\",\n                            \"collection\": \"7732157#38f1a479-3175-40c6-8b76-9b151f04d7ac\",\n                            \"id\": \"746b69e4-241d-4691-afd4-fb406ba787f1\",\n                            \"name\": \"Get order details from database\",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"478fec09-2223-4e4e-9b98-afbab9dfa6ec\",\n                                        \"exec\": [\n                                            \"pm.test(\\\"status code should be 200\\\", function () {\",\n                                            \"    pm.response.to.have.status(200);\",\n                                            \"});\",\n                                            \"\",\n                                            \"var response=pm.response.json();\",\n                                            \"\",\n                                            \"var responseSchema={\",\n                                            \"    \\\"type\\\": \\\"object\\\",\",\n                                            \"    \\\"title\\\": \\\"Order\\\",\",\n                                            \"    \\\"description\\\": \\\"This is an Order object\\\",\",\n                                            \"    \\\"required\\\": [\",\n                                            \"        \\\"orderId\\\",\",\n                                            \"        \\\"items\\\",\",\n                                            \"        \\\"arrivalDate\\\",\",\n                                            \"        \\\"orderDate\\\",\",\n                                            \"        \\\"orderTotal\\\",\",\n                                            \"        \\\"address\\\"\",\n                                            \"    ],\",\n                                            \"    \\\"properties\\\": {\",\n                                            \"        \\\"orderId\\\": {\",\n                                            \"            \\\"type\\\": \\\"integer\\\"\",\n                                            \"        },\",\n                                            \"        \\\"items\\\": {\",\n                                            \"            \\\"type\\\": \\\"object\\\",\",\n                                            \"            \\\"title\\\": \\\"Item\\\",\",\n                                            \"            \\\"description\\\": \\\"This is an Item object\\\",\",\n                                            \"            \\\"required\\\": [\",\n                                            \"                \\\"itemId\\\",\",\n                                            \"                \\\"name\\\",\",\n                                            \"                \\\"price\\\",\",\n                                            \"                \\\"description\\\"\",\n                                            \"            ],\",\n                                            \"            \\\"properties\\\": {\",\n                                            \"                \\\"itemId\\\": {\",\n                                            \"                    \\\"type\\\": \\\"integer\\\"\",\n                                            \"                },\",\n                                            \"                \\\"name\\\": {\",\n                                            \"                    \\\"type\\\": \\\"string\\\"\",\n                                            \"                },\",\n                                            \"                \\\"price\\\": {\",\n                                            \"                    \\\"type\\\": \\\"integer\\\"\",\n                                            \"                },\",\n                                            \"                \\\"description\\\": {\",\n                                            \"                    \\\"type\\\": \\\"string\\\"\",\n                                            \"                }\",\n                                            \"            }\",\n                                            \"        },\",\n                                            \"        \\\"arrivalDate\\\": {\",\n                                            \"            \\\"type\\\": \\\"string\\\"\",\n                                            \"        },\",\n                                            \"        \\\"orderDate\\\": {\",\n                                            \"            \\\"type\\\": \\\"string\\\"\",\n                                            \"        },\",\n                                            \"        \\\"orderTotal\\\": {\",\n                                            \"            \\\"type\\\": \\\"integer\\\"\",\n                                            \"        },\",\n                                            \"        \\\"address\\\": {\",\n                                            \"            \\\"type\\\": \\\"string\\\"\",\n                                            \"        }\",\n                                            \"    }\",\n                                            \"};\",\n                                            \"\",\n                                            \"pm.test(\\\"response has valid schema\\\",function(){\",\n                                            \"    pm.expect(tv4.validate(response, responseSchema)).to.be.true;\",\n                                            \"});\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": \"Obtain item details from the database\",\n                            \"variables\": null,\n                            \"headers\": \"\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {\n                                \"orderId\": \"674\"\n                            },\n                            \"url\": \"{{baseUrl}}/orders/:orderId\",\n                            \"preRequestScript\": null,\n                            \"tests\": \"pm.test(\\\"status code should be 200\\\", function () {\\n    pm.response.to.have.status(200);\\n});\\n\\nvar response=pm.response.json();\\n\\nvar responseSchema={\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"title\\\": \\\"Order\\\",\\n    \\\"description\\\": \\\"This is an Order object\\\",\\n    \\\"required\\\": [\\n        \\\"orderId\\\",\\n        \\\"items\\\",\\n        \\\"arrivalDate\\\",\\n        \\\"orderDate\\\",\\n        \\\"orderTotal\\\",\\n        \\\"address\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"orderId\\\": {\\n            \\\"type\\\": \\\"integer\\\"\\n        },\\n        \\\"items\\\": {\\n            \\\"type\\\": \\\"object\\\",\\n            \\\"title\\\": \\\"Item\\\",\\n            \\\"description\\\": \\\"This is an Item object\\\",\\n            \\\"required\\\": [\\n                \\\"itemId\\\",\\n                \\\"name\\\",\\n                \\\"price\\\",\\n                \\\"description\\\"\\n            ],\\n            \\\"properties\\\": {\\n                \\\"itemId\\\": {\\n                    \\\"type\\\": \\\"integer\\\"\\n                },\\n                \\\"name\\\": {\\n                    \\\"type\\\": \\\"string\\\"\\n                },\\n                \\\"price\\\": {\\n                    \\\"type\\\": \\\"integer\\\"\\n                },\\n                \\\"description\\\": {\\n                    \\\"type\\\": \\\"string\\\"\\n                }\\n            }\\n        },\\n        \\\"arrivalDate\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n        },\\n        \\\"orderDate\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n        },\\n        \\\"orderTotal\\\": {\\n            \\\"type\\\": \\\"integer\\\"\\n        },\\n        \\\"address\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n        }\\n    }\\n};\\n\\npm.test(\\\"response has valid schema\\\",function(){\\n    pm.expect(tv4.validate(response, responseSchema)).to.be.true;\\n});\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [],\n                            \"headerData\": [],\n                            \"pathVariableData\": [\n                                {\n                                    \"id\": \"975eff51-f27f-4ee1-82c0-f650a79a768f\",\n                                    \"key\": \"orderId\",\n                                    \"value\": \"674\",\n                                    \"type\": \"string\",\n                                    \"description\": \"(Required) \"\n                                }\n                            ],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"responses\": []\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071723,\n                            \"folder\": \"146734c9-fbae-4c43-940e-05f8ce6a01b6\",\n                            \"collection\": \"7732157#38f1a479-3175-40c6-8b76-9b151f04d7ac\",\n                            \"id\": \"9ae5b1ca-b85a-4e93-9e76-4b4df2eedfa4\",\n                            \"name\": \"Get items from the database\",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"afde1625-fe66-45b9-b2dd-f56ea5e47238\",\n                                        \"exec\": [\n                                            \"pm.test(\\\"status code should be 200\\\", function () {\",\n                                            \"    pm.response.to.have.status(200);\",\n                                            \"});\",\n                                            \"\",\n                                            \"var response=pm.response.json();\",\n                                            \"\",\n                                            \"var responseSchema={\",\n                                            \"    \\\"type\\\": \\\"array\\\",\",\n                                            \"    \\\"title\\\": \\\"The response schema\\\",\",\n                                            \"    \\\"description\\\": \\\"Response should be an array or items.\\\",\",\n                                            \"    \\\"items\\\": {\",\n                                            \"        \\\"$id\\\": \\\"#/items\\\",\",\n                                            \"        \\\"type\\\": \\\"object\\\",\",\n                                            \"        \\\"title\\\": \\\"The Items Schema\\\",\",\n                                            \"        \\\"description\\\": \\\"This is what an item looks like\\\",\",\n                                            \"        \\\"required\\\": [\",\n                                            \"            \\\"itemId\\\",\",\n                                            \"            \\\"name\\\",\",\n                                            \"            \\\"price\\\",\",\n                                            \"            \\\"description\\\"\",\n                                            \"        ],\",\n                                            \"        \\\"properties\\\": {\",\n                                            \"            \\\"itemId\\\": {\",\n                                            \"                \\\"type\\\": \\\"integer\\\"\",\n                                            \"            },\",\n                                            \"            \\\"name\\\": {\",\n                                            \"                \\\"type\\\": \\\"string\\\"\",\n                                            \"            },\",\n                                            \"            \\\"price\\\": {\",\n                                            \"                \\\"type\\\": \\\"integer\\\"\",\n                                            \"            },\",\n                                            \"            \\\"description\\\": {\",\n                                            \"                \\\"type\\\": \\\"string\\\"\",\n                                            \"            }\",\n                                            \"        }\",\n                                            \"    }\",\n                                            \"};\",\n                                            \"\",\n                                            \"pm.test(\\\"response has valid schema\\\",function(){\",\n                                            \"    pm.expect(tv4.validate(response, responseSchema)).to.be.true;\",\n                                            \"});\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": \"Pull a list of items from item database\",\n                            \"variables\": null,\n                            \"headers\": \"\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {},\n                            \"url\": \"{{baseUrl}}/items?list=10\",\n                            \"preRequestScript\": null,\n                            \"tests\": \"pm.test(\\\"status code should be 200\\\", function () {\\n    pm.response.to.have.status(200);\\n});\\n\\nvar response=pm.response.json();\\n\\nvar responseSchema={\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"title\\\": \\\"The response schema\\\",\\n    \\\"description\\\": \\\"Response should be an array or items.\\\",\\n    \\\"items\\\": {\\n        \\\"$id\\\": \\\"#/items\\\",\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"title\\\": \\\"The Items Schema\\\",\\n        \\\"description\\\": \\\"This is what an item looks like\\\",\\n        \\\"required\\\": [\\n            \\\"itemId\\\",\\n            \\\"name\\\",\\n            \\\"price\\\",\\n            \\\"description\\\"\\n        ],\\n        \\\"properties\\\": {\\n            \\\"itemId\\\": {\\n                \\\"type\\\": \\\"integer\\\"\\n            },\\n            \\\"name\\\": {\\n                \\\"type\\\": \\\"string\\\"\\n            },\\n            \\\"price\\\": {\\n                \\\"type\\\": \\\"integer\\\"\\n            },\\n            \\\"description\\\": {\\n                \\\"type\\\": \\\"string\\\"\\n            }\\n        }\\n    }\\n};\\n\\npm.test(\\\"response has valid schema\\\",function(){\\n    pm.expect(tv4.validate(response, responseSchema)).to.be.true;\\n});\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [\n                                {\n                                    \"key\": \"list\",\n                                    \"value\": \"10\",\n                                    \"description\": \"Number of items to be displayed\"\n                                }\n                            ],\n                            \"headerData\": [],\n                            \"pathVariableData\": [],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"responses\": []\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071844,\n                            \"folder\": \"ad77cb69-ab87-49d9-830f-14671f354bf2\",\n                            \"collection\": \"7732157#38f1a479-3175-40c6-8b76-9b151f04d7ac\",\n                            \"id\": \"d9ce2cae-7f38-431e-b6fd-26a5886a53d0\",\n                            \"name\": \"Post order details to the database\",\n                            \"dataMode\": \"raw\",\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"1a1999b2-5818-4229-af40-41515ec1ff42\",\n                                        \"exec\": [\n                                            \"pm.test(\\\"status code should be 201\\\", function () {\",\n                                            \"    pm.response.to.have.status(201);\",\n                                            \"});\",\n                                            \"\",\n                                            \"var response=pm.response.json();\",\n                                            \"\",\n                                            \"var responseSchema={\",\n                                            \"    \\\"type\\\": \\\"object\\\",\",\n                                            \"    \\\"title\\\": \\\"Order\\\",\",\n                                            \"    \\\"description\\\": \\\"This is an Order object\\\",\",\n                                            \"    \\\"required\\\": [\",\n                                            \"        \\\"orderId\\\",\",\n                                            \"        \\\"items\\\",\",\n                                            \"        \\\"arrivalDate\\\",\",\n                                            \"        \\\"orderDate\\\",\",\n                                            \"        \\\"orderTotal\\\",\",\n                                            \"        \\\"address\\\"\",\n                                            \"    ],\",\n                                            \"    \\\"properties\\\": {\",\n                                            \"        \\\"orderId\\\": {\",\n                                            \"            \\\"type\\\": \\\"integer\\\"\",\n                                            \"        },\",\n                                            \"        \\\"items\\\": {\",\n                                            \"            \\\"type\\\": \\\"array\\\",\",\n                                            \"            \\\"title\\\": \\\"Item\\\",\",\n                                            \"            \\\"description\\\": \\\"This is an Item object\\\",\",\n                                            \"            \\\"required\\\": [\",\n                                            \"                \\\"itemId\\\",\",\n                                            \"                \\\"name\\\",\",\n                                            \"                \\\"price\\\",\",\n                                            \"                \\\"description\\\"\",\n                                            \"            ],\",\n                                            \"            \\\"properties\\\": {\",\n                                            \"                \\\"itemId\\\": {\",\n                                            \"                    \\\"type\\\": \\\"integer\\\"\",\n                                            \"                },\",\n                                            \"                \\\"name\\\": {\",\n                                            \"                    \\\"type\\\": \\\"string\\\"\",\n                                            \"                },\",\n                                            \"                \\\"price\\\": {\",\n                                            \"                    \\\"type\\\": \\\"integer\\\"\",\n                                            \"                },\",\n                                            \"                \\\"description\\\": {\",\n                                            \"                    \\\"type\\\": \\\"string\\\"\",\n                                            \"                }\",\n                                            \"            }\",\n                                            \"        },\",\n                                            \"        \\\"arrivalDate\\\": {\",\n                                            \"            \\\"type\\\": \\\"string\\\"\",\n                                            \"        },\",\n                                            \"        \\\"orderDate\\\": {\",\n                                            \"            \\\"type\\\": \\\"string\\\"\",\n                                            \"        },\",\n                                            \"        \\\"orderTotal\\\": {\",\n                                            \"            \\\"type\\\": \\\"integer\\\"\",\n                                            \"        },\",\n                                            \"        \\\"address\\\": {\",\n                                            \"            \\\"type\\\": \\\"string\\\"\",\n                                            \"        }\",\n                                            \"    }\",\n                                            \"};\",\n                                            \"\",\n                                            \"pm.test(\\\"response has valid schema\\\",function(){\",\n                                            \"    pm.expect(tv4.validate(response, responseSchema)).to.be.true;\",\n                                            \"});\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": \"{\\n    \\\"address\\\": \\\"<string>\\\",\\n    \\\"item\\\": {\\n        \\\"itemId\\\": 1,\\n        \\\"name\\\": \\\"<string>\\\",\\n        \\\"price\\\": 2000,\\n        \\\"description\\\": \\\"<string>\\\"\\n    }\\n}\",\n                            \"descriptionFormat\": null,\n                            \"description\": \"Post item order to orders database\",\n                            \"variables\": null,\n                            \"headers\": \"Content-Type: application/json\\n\",\n                            \"method\": \"POST\",\n                            \"pathVariables\": {},\n                            \"url\": \"https://fffc2eb4-dbcf-4c6d-bc30-c3cb2e7ecfa6.mock.pstmn.io/orders\",\n                            \"preRequestScript\": null,\n                            \"tests\": \"pm.test(\\\"status code should be 201\\\", function () {\\n    pm.response.to.have.status(201);\\n});\\n\\nvar response=pm.response.json();\\n\\nvar responseSchema={\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"title\\\": \\\"Order\\\",\\n    \\\"description\\\": \\\"This is an Order object\\\",\\n    \\\"required\\\": [\\n        \\\"orderId\\\",\\n        \\\"items\\\",\\n        \\\"arrivalDate\\\",\\n        \\\"orderDate\\\",\\n        \\\"orderTotal\\\",\\n        \\\"address\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"orderId\\\": {\\n            \\\"type\\\": \\\"integer\\\"\\n        },\\n        \\\"items\\\": {\\n            \\\"type\\\": \\\"array\\\",\\n            \\\"title\\\": \\\"Item\\\",\\n            \\\"description\\\": \\\"This is an Item object\\\",\\n            \\\"required\\\": [\\n                \\\"itemId\\\",\\n                \\\"name\\\",\\n                \\\"price\\\",\\n                \\\"description\\\"\\n            ],\\n            \\\"properties\\\": {\\n                \\\"itemId\\\": {\\n                    \\\"type\\\": \\\"integer\\\"\\n                },\\n                \\\"name\\\": {\\n                    \\\"type\\\": \\\"string\\\"\\n                },\\n                \\\"price\\\": {\\n                    \\\"type\\\": \\\"integer\\\"\\n                },\\n                \\\"description\\\": {\\n                    \\\"type\\\": \\\"string\\\"\\n                }\\n            }\\n        },\\n        \\\"arrivalDate\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n        },\\n        \\\"orderDate\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n        },\\n        \\\"orderTotal\\\": {\\n            \\\"type\\\": \\\"integer\\\"\\n        },\\n        \\\"address\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n        }\\n    }\\n};\\n\\npm.test(\\\"response has valid schema\\\",function(){\\n    pm.expect(tv4.validate(response, responseSchema)).to.be.true;\\n});\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [],\n                            \"headerData\": [\n                                {\n                                    \"key\": \"Content-Type\",\n                                    \"value\": \"application/json\"\n                                }\n                            ],\n                            \"pathVariableData\": [],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"dataOptions\": {\n                                \"raw\": {}\n                            },\n                            \"responses\": []\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071712,\n                            \"folder\": \"146734c9-fbae-4c43-940e-05f8ce6a01b6\",\n                            \"collection\": \"7732157#38f1a479-3175-40c6-8b76-9b151f04d7ac\",\n                            \"id\": \"df252024-ef9d-4948-bf67-0bb4e43ad22b\",\n                            \"name\": \"Get item details from the database \",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"e5db371a-00e7-43ac-a3b2-0ebacd564fe0\",\n                                        \"exec\": [\n                                            \"pm.test(\\\"status code should be 200\\\", function () {\",\n                                            \"    pm.response.to.have.status(200);\",\n                                            \"});\",\n                                            \"\",\n                                            \"var response=pm.response.json();\",\n                                            \"\",\n                                            \"var itemSchema={\",\n                                            \"    \\\"type\\\": \\\"object\\\",\",\n                                            \"    \\\"title\\\": \\\"Item\\\",\",\n                                            \"    \\\"description\\\": \\\"This is how an Item in SimpleKart API looks like\\\",\",\n                                            \"    \\\"required\\\": [\",\n                                            \"        \\\"itemId\\\",\",\n                                            \"        \\\"name\\\",\",\n                                            \"        \\\"price\\\",\",\n                                            \"        \\\"description\\\"\",\n                                            \"    ],\",\n                                            \"    \\\"properties\\\": {\",\n                                            \"        \\\"itemId\\\": {\",\n                                            \"            \\\"type\\\": \\\"integer\\\"\",\n                                            \"        },\",\n                                            \"        \\\"name\\\": {\",\n                                            \"            \\\"type\\\": \\\"string\\\"\",\n                                            \"        },\",\n                                            \"        \\\"price\\\": {\",\n                                            \"            \\\"type\\\": \\\"integer\\\"\",\n                                            \"        },\",\n                                            \"        \\\"description\\\": {\",\n                                            \"            \\\"type\\\": \\\"string\\\"\",\n                                            \"        }\",\n                                            \"    }\",\n                                            \"};\",\n                                            \"\",\n                                            \"pm.test(\\\"response has valid schema\\\",function(){\",\n                                            \"    pm.expect(tv4.validate(response, itemSchema)).to.be.true;\",\n                                            \"});\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": \"Obtain item details from item database\",\n                            \"variables\": null,\n                            \"headers\": \"\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {\n                                \"itemId\": \"1657\"\n                            },\n                            \"url\": \"{{baseUrl}}/items/:itemId\",\n                            \"preRequestScript\": null,\n                            \"tests\": \"pm.test(\\\"status code should be 200\\\", function () {\\n    pm.response.to.have.status(200);\\n});\\n\\nvar response=pm.response.json();\\n\\nvar itemSchema={\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"title\\\": \\\"Item\\\",\\n    \\\"description\\\": \\\"This is how an Item in SimpleKart API looks like\\\",\\n    \\\"required\\\": [\\n        \\\"itemId\\\",\\n        \\\"name\\\",\\n        \\\"price\\\",\\n        \\\"description\\\"\\n    ],\\n    \\\"properties\\\": {\\n        \\\"itemId\\\": {\\n            \\\"type\\\": \\\"integer\\\"\\n        },\\n        \\\"name\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n        },\\n        \\\"price\\\": {\\n            \\\"type\\\": \\\"integer\\\"\\n        },\\n        \\\"description\\\": {\\n            \\\"type\\\": \\\"string\\\"\\n        }\\n    }\\n};\\n\\npm.test(\\\"response has valid schema\\\",function(){\\n    pm.expect(tv4.validate(response, itemSchema)).to.be.true;\\n});\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [],\n                            \"headerData\": [],\n                            \"pathVariableData\": [\n                                {\n                                    \"id\": \"d9861e7d-29e5-421e-9ed3-17d205baad57\",\n                                    \"key\": \"itemId\",\n                                    \"value\": \"1657\",\n                                    \"type\": \"string\",\n                                    \"description\": \"(Required) Id of the item to pull details of\"\n                                }\n                            ],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"responses\": []\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071718,\n                            \"folder\": \"ad77cb69-ab87-49d9-830f-14671f354bf2\",\n                            \"collection\": \"7732157#38f1a479-3175-40c6-8b76-9b151f04d7ac\",\n                            \"id\": \"f37d2885-a4ff-41ff-9518-9561ed2e6800\",\n                            \"name\": \"Get orders from the database \",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"63bb7ae0-630e-4d86-a154-7909f72ed449\",\n                                        \"exec\": [\n                                            \"pm.test(\\\"status code should be 200\\\", function () {\",\n                                            \"    pm.response.to.have.status(200);\",\n                                            \"});\",\n                                            \"\",\n                                            \"var response=pm.response.json();\",\n                                            \"\",\n                                            \"var responseSchema={\",\n                                            \"    \\\"type\\\": \\\"array\\\",\",\n                                            \"    \\\"items\\\": {\",\n                                            \"        \\\"type\\\": \\\"object\\\",\",\n                                            \"        \\\"default\\\": {},\",\n                                            \"        \\\"required\\\": [\",\n                                            \"            \\\"orderId\\\",\",\n                                            \"            \\\"items\\\",\",\n                                            \"            \\\"arrivalDate\\\",\",\n                                            \"            \\\"orderDate\\\",\",\n                                            \"            \\\"orderTotal\\\",\",\n                                            \"            \\\"address\\\"\",\n                                            \"        ],\",\n                                            \"        \\\"properties\\\": {\",\n                                            \"            \\\"orderId\\\": {\",\n                                            \"                \\\"type\\\": \\\"integer\\\",\",\n                                            \"            },\",\n                                            \"            \\\"items\\\": {\",\n                                            \"                \\\"type\\\": \\\"array\\\",\",\n                                            \"                \\\"items\\\": {\",\n                                            \"                    \\\"type\\\": \\\"object\\\",\",\n                                            \"                    \\\"required\\\": [\",\n                                            \"                        \\\"itemId\\\",\",\n                                            \"                        \\\"name\\\",\",\n                                            \"                        \\\"price\\\",\",\n                                            \"                        \\\"description\\\"\",\n                                            \"                    ],\",\n                                            \"                    \\\"properties\\\": {\",\n                                            \"                        \\\"itemId\\\": {\",\n                                            \"                            \\\"type\\\": \\\"integer\\\",\",\n                                            \"                        },\",\n                                            \"                        \\\"name\\\": {\",\n                                            \"                            \\\"type\\\": \\\"string\\\",\",\n                                            \"                        },\",\n                                            \"                        \\\"price\\\": {\",\n                                            \"                            \\\"type\\\": \\\"integer\\\",\",\n                                            \"                        },\",\n                                            \"                        \\\"description\\\": {\",\n                                            \"                            \\\"type\\\": \\\"string\\\",\",\n                                            \"                        }\",\n                                            \"                    }\",\n                                            \"                }\",\n                                            \"            },\",\n                                            \"            \\\"arrivalDate\\\": {\",\n                                            \"                \\\"type\\\": \\\"string\\\",\",\n                                            \"            },\",\n                                            \"            \\\"orderDate\\\": {\",\n                                            \"                \\\"type\\\": \\\"string\\\",\",\n                                            \"            },\",\n                                            \"            \\\"orderTotal\\\": {\",\n                                            \"                \\\"type\\\": \\\"integer\\\",\",\n                                            \"            },\",\n                                            \"            \\\"address\\\": {\",\n                                            \"                \\\"type\\\": \\\"string\\\",\",\n                                            \"            }\",\n                                            \"        }\",\n                                            \"    }\",\n                                            \"};\",\n                                            \"\",\n                                            \"pm.test(\\\"response has valid schema\\\",function(){\",\n                                            \"    pm.expect(tv4.validate(response, responseSchema)).to.be.true;\",\n                                            \"});\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": \"Obtain order details from orders database\",\n                            \"variables\": null,\n                            \"headers\": \"\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {},\n                            \"url\": \"{{baseUrl}}/orders?list=10\",\n                            \"preRequestScript\": null,\n                            \"tests\": \"pm.test(\\\"status code should be 200\\\", function () {\\n    pm.response.to.have.status(200);\\n});\\n\\nvar response=pm.response.json();\\n\\nvar responseSchema={\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"items\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"default\\\": {},\\n        \\\"required\\\": [\\n            \\\"orderId\\\",\\n            \\\"items\\\",\\n            \\\"arrivalDate\\\",\\n            \\\"orderDate\\\",\\n            \\\"orderTotal\\\",\\n            \\\"address\\\"\\n        ],\\n        \\\"properties\\\": {\\n            \\\"orderId\\\": {\\n                \\\"type\\\": \\\"integer\\\",\\n            },\\n            \\\"items\\\": {\\n                \\\"type\\\": \\\"array\\\",\\n                \\\"items\\\": {\\n                    \\\"type\\\": \\\"object\\\",\\n                    \\\"required\\\": [\\n                        \\\"itemId\\\",\\n                        \\\"name\\\",\\n                        \\\"price\\\",\\n                        \\\"description\\\"\\n                    ],\\n                    \\\"properties\\\": {\\n                        \\\"itemId\\\": {\\n                            \\\"type\\\": \\\"integer\\\",\\n                        },\\n                        \\\"name\\\": {\\n                            \\\"type\\\": \\\"string\\\",\\n                        },\\n                        \\\"price\\\": {\\n                            \\\"type\\\": \\\"integer\\\",\\n                        },\\n                        \\\"description\\\": {\\n                            \\\"type\\\": \\\"string\\\",\\n                        }\\n                    }\\n                }\\n            },\\n            \\\"arrivalDate\\\": {\\n                \\\"type\\\": \\\"string\\\",\\n            },\\n            \\\"orderDate\\\": {\\n                \\\"type\\\": \\\"string\\\",\\n            },\\n            \\\"orderTotal\\\": {\\n                \\\"type\\\": \\\"integer\\\",\\n            },\\n            \\\"address\\\": {\\n                \\\"type\\\": \\\"string\\\",\\n            }\\n        }\\n    }\\n};\\n\\npm.test(\\\"response has valid schema\\\",function(){\\n    pm.expect(tv4.validate(response, responseSchema)).to.be.true;\\n});\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [\n                                {\n                                    \"key\": \"list\",\n                                    \"value\": \"10\",\n                                    \"description\": \"Number of orders to show\"\n                                }\n                            ],\n                            \"headerData\": [],\n                            \"pathVariableData\": [],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"responses\": []\n                        }\n                    ]\n                },\n                \"7732157-6537c169-8d02-413f-94f3-4dda79355a90\": {\n                    \"owner\": \"7732157\",\n                    \"lastUpdatedBy\": \"7732157\",\n                    \"lastRevision\": 14716072087,\n                    \"team\": null,\n                    \"id\": \"6537c169-8d02-413f-94f3-4dda79355a90\",\n                    \"name\": \"SimpleKart Integration Tests\",\n                    \"description\": \"API for an imaginary E-Commerce store to demonstrate API Builder capabilities in Postman\\n\\nContact Support:\\n Name: Postman Team\\n Email: simplekart@postman.com\",\n                    \"variables\": [\n                        {\n                            \"id\": \"7e7b3fcd-b268-40ee-b136-f4c19b246c9a\",\n                            \"key\": \"baseUrl\",\n                            \"value\": \"https://fffc2eb4-dbcf-4c6d-bc30-c3cb2e7ecfa6.mock.pstmn.io\",\n                            \"type\": \"string\",\n                            \"enabled\": true\n                        },\n                        {\n                            \"id\": \"e54148f5-04c3-4d45-9af1-3d5b5440c95d\",\n                            \"key\": \"lib\",\n                            \"value\": \"var it = pm.test;\\nvar expect = pm.expect;\",\n                            \"type\": \"string\",\n                            \"enabled\": true\n                        }\n                    ],\n                    \"auth\": null,\n                    \"events\": [\n                        {\n                            \"listen\": \"prerequest\",\n                            \"script\": {\n                                \"id\": \"de750dfb-435f-4e66-b35c-a560e35a8b89\",\n                                \"type\": \"text/javascript\",\n                                \"exec\": [\n                                    \"\"\n                                ]\n                            }\n                        },\n                        {\n                            \"listen\": \"test\",\n                            \"script\": {\n                                \"id\": \"d113b650-c849-478b-9418-e80a4556860a\",\n                                \"type\": \"text/javascript\",\n                                \"exec\": [\n                                    \"var it = pm.test;\",\n                                    \"var expect = pm.expect;\"\n                                ]\n                            }\n                        }\n                    ],\n                    \"remote_id\": \"0\",\n                    \"remoteLink\": null,\n                    \"folders_order\": [\n                        \"40f5b319-a933-43bd-b191-57a913fc1079\",\n                        \"e77c8b4e-7f2d-46d9-b352-2e189aa73269\",\n                        \"04b872d9-135f-4274-a18f-3439c3a63318\"\n                    ],\n                    \"order\": [],\n                    \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\",\n                    \"folders\": [\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716072065,\n                            \"collection\": \"7732157#6537c169-8d02-413f-94f3-4dda79355a90\",\n                            \"folder\": null,\n                            \"id\": \"04b872d9-135f-4274-a18f-3439c3a63318\",\n                            \"name\": \"Check items and its details\",\n                            \"description\": null,\n                            \"variables\": null,\n                            \"auth\": null,\n                            \"events\": null,\n                            \"order\": [\n                                \"9a1aec9e-04ff-4956-8a26-466b33e879e6\",\n                                \"18cf6e01-80cc-4f04-953f-b1df22e9f64e\"\n                            ],\n                            \"folders_order\": [],\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716072055,\n                            \"collection\": \"7732157#6537c169-8d02-413f-94f3-4dda79355a90\",\n                            \"folder\": null,\n                            \"id\": \"40f5b319-a933-43bd-b191-57a913fc1079\",\n                            \"name\": \"Create new order and fetch it's items\",\n                            \"description\": null,\n                            \"variables\": null,\n                            \"auth\": null,\n                            \"events\": null,\n                            \"order\": [\n                                \"a7a92db7-5657-4a7b-b525-fcd1f27139ee\",\n                                \"439edcda-c456-4ca8-86b4-b0dc37c08ed1\",\n                                \"1d57922e-0986-4416-ae52-792a42043f93\"\n                            ],\n                            \"folders_order\": [],\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716072056,\n                            \"collection\": \"7732157#6537c169-8d02-413f-94f3-4dda79355a90\",\n                            \"folder\": null,\n                            \"id\": \"e77c8b4e-7f2d-46d9-b352-2e189aa73269\",\n                            \"name\": \"Fetch order details given an order id\",\n                            \"description\": null,\n                            \"variables\": null,\n                            \"auth\": null,\n                            \"events\": null,\n                            \"order\": [\n                                \"f256019f-c62e-44f8-b440-1c8de665c050\"\n                            ],\n                            \"folders_order\": [],\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                        }\n                    ],\n                    \"requests\": [\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071953,\n                            \"folder\": \"04b872d9-135f-4274-a18f-3439c3a63318\",\n                            \"collection\": \"7732157#6537c169-8d02-413f-94f3-4dda79355a90\",\n                            \"id\": \"18cf6e01-80cc-4f04-953f-b1df22e9f64e\",\n                            \"name\": \"Fetch postman merch\",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": null,\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"0bbab959-ead2-45d9-a055-5bbc0fb4947d\",\n                                        \"exec\": [\n                                            \"const body = pm.response.json();\",\n                                            \"\",\n                                            \"eval(pm.variables.get(\\\"lib\\\"));\",\n                                            \"\",\n                                            \"// Views\",\n                                            \"const template = `\",\n                                            \"    <style>\",\n                                            \"        body {\",\n                                            \"            color: #fff;\",\n                                            \"        }\",\n                                            \"    </style>\",\n                                            \"    <table>\",\n                                            \"        <tr>\",\n                                            \"            <th style=\\\"padding-left: 10px; width: 10%;\\\">Id</th>\",\n                                            \"            <th style=\\\"width: 15%;\\\">Name</th>\",\n                                            \"            <th style=\\\"width: 40%\\\">Description</th>\",\n                                            \"            <th style=\\\"padding-right: 10px;\\\">Price</th>\",\n                                            \"        </tr>\",\n                                            \"\",\n                                            \"        <tr>\",\n                                            \"            <td style=\\\"padding-left: 10px;\\\">{{itemId}}</td>\",\n                                            \"            <td>{{name}}</td>\",\n                                            \"            <td>{{description}}</td>\",\n                                            \"            <td style=\\\"padding-right: 10px;\\\">£ {{price}}</td>\",\n                                            \"        </tr>\",\n                                            \"    </table>\",\n                                            \"`;\",\n                                            \"\",\n                                            \"pm.visualizer.set(template, {...body});\",\n                                            \"\",\n                                            \"\",\n                                            \"// Tests\",\n                                            \"\",\n                                            \"it(\\\"Should have 200 OK status code\\\", function () {\",\n                                            \"    pm.response.to.have.status(200);\",\n                                            \"});\",\n                                            \"\",\n                                            \"it('Order should have the correct item', function () {\",\n                                            \"    expect(body.name).to.be.ok;\",\n                                            \"    expect(body.description).to.be.ok;\",\n                                            \"    expect(body.itemId).to.be.ok;\",\n                                            \"    expect(body.price).to.be.ok;\",\n                                            \"});\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": null,\n                            \"variables\": null,\n                            \"headers\": \"\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {\n                                \"itemId\": \"16247\"\n                            },\n                            \"url\": \"{{baseUrl}}/items/:itemId\",\n                            \"preRequestScript\": null,\n                            \"tests\": \"const body = pm.response.json();\\n\\neval(pm.variables.get(\\\"lib\\\"));\\n\\n// Views\\nconst template = `\\n    <style>\\n        body {\\n            color: #fff;\\n        }\\n    </style>\\n    <table>\\n        <tr>\\n            <th style=\\\"padding-left: 10px; width: 10%;\\\">Id</th>\\n            <th style=\\\"width: 15%;\\\">Name</th>\\n            <th style=\\\"width: 40%\\\">Description</th>\\n            <th style=\\\"padding-right: 10px;\\\">Price</th>\\n        </tr>\\n\\n        <tr>\\n            <td style=\\\"padding-left: 10px;\\\">{{itemId}}</td>\\n            <td>{{name}}</td>\\n            <td>{{description}}</td>\\n            <td style=\\\"padding-right: 10px;\\\">£ {{price}}</td>\\n        </tr>\\n    </table>\\n`;\\n\\npm.visualizer.set(template, {...body});\\n\\n\\n// Tests\\n\\nit(\\\"Should have 200 OK status code\\\", function () {\\n    pm.response.to.have.status(200);\\n});\\n\\nit('Order should have the correct item', function () {\\n    expect(body.name).to.be.ok;\\n    expect(body.description).to.be.ok;\\n    expect(body.itemId).to.be.ok;\\n    expect(body.price).to.be.ok;\\n});\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [],\n                            \"headerData\": [],\n                            \"pathVariableData\": [\n                                {\n                                    \"id\": \"16b9657b-e433-4201-a934-d5d8502f2d54\",\n                                    \"key\": \"itemId\",\n                                    \"value\": \"16247\",\n                                    \"type\": \"string\"\n                                }\n                            ],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"responses\": []\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071942,\n                            \"folder\": \"40f5b319-a933-43bd-b191-57a913fc1079\",\n                            \"collection\": \"7732157#6537c169-8d02-413f-94f3-4dda79355a90\",\n                            \"id\": \"1d57922e-0986-4416-ae52-792a42043f93\",\n                            \"name\": \"Get all orders\",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"ec5becca-b443-409a-b443-4cee143b9a56\",\n                                        \"exec\": [\n                                            \"const body = pm.response.json();\",\n                                            \"\",\n                                            \"eval(pm.variables.get(\\\"lib\\\"));\",\n                                            \"\",\n                                            \"// Views\",\n                                            \"const template = `\",\n                                            \"    <style>\",\n                                            \"        body {\",\n                                            \"            color: #fff;\",\n                                            \"        }\",\n                                            \"    </style>\",\n                                            \"    <table>\",\n                                            \"        <tr>\",\n                                            \"            <th style=\\\"padding-left: 10px;\\\">Order ID</th>\",\n                                            \"            <th>Items</th>\",\n                                            \"            <th>Ordered At</th>\",\n                                            \"            <th>Address</th>\",\n                                            \"            <th style=\\\"padding-right: 10px;\\\">Total Amount</th>\",\n                                            \"        </tr>\",\n                                            \"\",\n                                            \"        {{#each orders}}\",\n                                            \"            <tr>\",\n                                            \"                <td style=\\\"padding-left: 10px;\\\">{{orderId}}</td>\",\n                                            \"                <td>{{items}}</td>\",\n                                            \"                <td>{{orderDate}}</td>\",\n                                            \"                <td>{{address}}</td>\",\n                                            \"                <td style=\\\"padding-right: 10px;\\\">£ {{orderTotal}}</td>\",\n                                            \"            </tr>\",\n                                            \"        {{/each}}\",\n                                            \"        \",\n                                            \"        <tr>\",\n                                            \"            <td colSpan=4 style=\\\"text-align: right\\\">\",\n                                            \"                <b>Total</b>\",\n                                            \"            </td>\",\n                                            \"            <td>£ {{total}}</td>\",\n                                            \"        </tr>\",\n                                            \"    </table>\",\n                                            \"`;\",\n                                            \"\",\n                                            \"pm.visualizer.set(template, {\",\n                                            \"    orders: body.map((order) => {\",\n                                            \"        return {...order, items: order.items.length};\",\n                                            \"    }),\",\n                                            \"    total: body.reduce((acc, order) => acc + order.orderTotal, 0)\",\n                                            \"});\",\n                                            \"\",\n                                            \"\",\n                                            \"// Tests\",\n                                            \"\",\n                                            \"it(\\\"Should have 200 OK status code\\\", function () {\",\n                                            \"    pm.response.to.have.status(200);\",\n                                            \"});\",\n                                            \"\",\n                                            \"it('Orders should have the new order', function () {\",\n                                            \"    expect(body.length).to.be.ok;\",\n                                            \"    \",\n                                            \"    let orderFound = false;\",\n                                            \"    \",\n                                            \"    body.forEach((order) => {\",\n                                            \"        orderFound = orderFound || order.orderId === pm.environment.get('orderId');\",\n                                            \"        \",\n                                            \"        expect(order.orderId).to.be.ok;\",\n                                            \"        expect(order.items.length).to.be.ok;\",\n                                            \"        expect(order.orderTotal).to.be.ok;\",\n                                            \"        expect(order.arrivalDate).to.be.ok;\",\n                                            \"        expect(order.orderDate).to.be.ok;\",\n                                            \"    });\",\n                                            \"    \",\n                                            \"    expect(orderFound).to.eql(true);\",\n                                            \"});\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": \"Obtain order details from orders database\",\n                            \"variables\": null,\n                            \"headers\": \"\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {},\n                            \"url\": \"{{baseUrl}}/orders?list=10\",\n                            \"preRequestScript\": null,\n                            \"tests\": \"const body = pm.response.json();\\n\\neval(pm.variables.get(\\\"lib\\\"));\\n\\n// Views\\nconst template = `\\n    <style>\\n        body {\\n            color: #fff;\\n        }\\n    </style>\\n    <table>\\n        <tr>\\n            <th style=\\\"padding-left: 10px;\\\">Order ID</th>\\n            <th>Items</th>\\n            <th>Ordered At</th>\\n            <th>Address</th>\\n            <th style=\\\"padding-right: 10px;\\\">Total Amount</th>\\n        </tr>\\n\\n        {{#each orders}}\\n            <tr>\\n                <td style=\\\"padding-left: 10px;\\\">{{orderId}}</td>\\n                <td>{{items}}</td>\\n                <td>{{orderDate}}</td>\\n                <td>{{address}}</td>\\n                <td style=\\\"padding-right: 10px;\\\">£ {{orderTotal}}</td>\\n            </tr>\\n        {{/each}}\\n        \\n        <tr>\\n            <td colSpan=4 style=\\\"text-align: right\\\">\\n                <b>Total</b>\\n            </td>\\n            <td>£ {{total}}</td>\\n        </tr>\\n    </table>\\n`;\\n\\npm.visualizer.set(template, {\\n    orders: body.map((order) => {\\n        return {...order, items: order.items.length};\\n    }),\\n    total: body.reduce((acc, order) => acc + order.orderTotal, 0)\\n});\\n\\n\\n// Tests\\n\\nit(\\\"Should have 200 OK status code\\\", function () {\\n    pm.response.to.have.status(200);\\n});\\n\\nit('Orders should have the new order', function () {\\n    expect(body.length).to.be.ok;\\n    \\n    let orderFound = false;\\n    \\n    body.forEach((order) => {\\n        orderFound = orderFound || order.orderId === pm.environment.get('orderId');\\n        \\n        expect(order.orderId).to.be.ok;\\n        expect(order.items.length).to.be.ok;\\n        expect(order.orderTotal).to.be.ok;\\n        expect(order.arrivalDate).to.be.ok;\\n        expect(order.orderDate).to.be.ok;\\n    });\\n    \\n    expect(orderFound).to.eql(true);\\n});\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [\n                                {\n                                    \"key\": \"list\",\n                                    \"value\": \"10\",\n                                    \"description\": \"Number of orders to show\"\n                                }\n                            ],\n                            \"headerData\": [],\n                            \"pathVariableData\": [],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"responses\": []\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071947,\n                            \"folder\": \"40f5b319-a933-43bd-b191-57a913fc1079\",\n                            \"collection\": \"7732157#6537c169-8d02-413f-94f3-4dda79355a90\",\n                            \"id\": \"439edcda-c456-4ca8-86b4-b0dc37c08ed1\",\n                            \"name\": \"Fetch order details\",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": null,\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"432bb7df-08aa-43d3-8bf8-e7afcf7d5291\",\n                                        \"exec\": [\n                                            \"const body = pm.response.json();\",\n                                            \"\",\n                                            \"eval(pm.variables.get(\\\"lib\\\"));\",\n                                            \"\",\n                                            \"// Views\",\n                                            \"const template = `\",\n                                            \"    <style>\",\n                                            \"        body {\",\n                                            \"            color: #fff;\",\n                                            \"        }\",\n                                            \"    </style>\",\n                                            \"    <h5>Order: {{id}}</h5>\",\n                                            \"    <p>\",\n                                            \"        <b>Address:</b> {{address}}</br>\",\n                                            \"        Delivery By: {{arrivalDate}}\",\n                                            \"    </p>\",\n                                            \"    <hr />\",\n                                            \"    <table>\",\n                                            \"        <tr>\",\n                                            \"            <th style=\\\"padding-left: 10px;\\\">Name</th>\",\n                                            \"            <th>Description</th>\",\n                                            \"            <th style=\\\"padding-right: 10px;\\\">Price</th>\",\n                                            \"        </tr>\",\n                                            \"\",\n                                            \"        {{#each items}}\",\n                                            \"            <tr>\",\n                                            \"                <td style=\\\"padding-left: 10px;\\\">{{name}}</td>\",\n                                            \"                <td>{{description}}</td>\",\n                                            \"                <td style=\\\"padding-right: 10px;\\\">£ {{price}}</td>\",\n                                            \"            </tr>\",\n                                            \"        {{/each}}\",\n                                            \"        \",\n                                            \"        <tr>\",\n                                            \"            <td colSpan=2 style=\\\"text-align: right\\\">\",\n                                            \"                <b>Total</b>\",\n                                            \"            </td>\",\n                                            \"            <td>£ {{total}}</td>\",\n                                            \"        </tr>\",\n                                            \"    </table>\",\n                                            \"`;\",\n                                            \"\",\n                                            \"pm.visualizer.set(template, {\",\n                                            \"    items: body.items,\",\n                                            \"    id: body.orderId,\",\n                                            \"    address: body.address,\",\n                                            \"    total: body.orderTotal,\",\n                                            \"    arrivalDate: body.arrivalDate\",\n                                            \"});\",\n                                            \"\",\n                                            \"\",\n                                            \"// Tests\",\n                                            \"\",\n                                            \"it(\\\"Should have 200 OK status code\\\", function () {\",\n                                            \"    pm.response.to.have.status(200);\",\n                                            \"});\",\n                                            \"\",\n                                            \"it('Order should have the correct item', function () {\",\n                                            \"    expect(body.orderId).to.be.ok;\",\n                                            \"    expect(body.items.length).to.eql(1);\",\n                                            \"    \",\n                                            \"    expect(body.arrivalDate).to.be.ok;\",\n                                            \"    expect(body.orderDate).to.be.ok;\",\n                                            \"    expect(body.orderTotal).to.eql(15);\",\n                                            \"    expect(body.address).to.eql('SimpleKart HQ, 221B Baker street');\",\n                                            \"});\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": null,\n                            \"variables\": null,\n                            \"headers\": \"\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {\n                                \"orderId\": \"{{orderId}}\"\n                            },\n                            \"url\": \"{{baseUrl}}/orders/:orderId\",\n                            \"preRequestScript\": null,\n                            \"tests\": \"const body = pm.response.json();\\n\\neval(pm.variables.get(\\\"lib\\\"));\\n\\n// Views\\nconst template = `\\n    <style>\\n        body {\\n            color: #fff;\\n        }\\n    </style>\\n    <h5>Order: {{id}}</h5>\\n    <p>\\n        <b>Address:</b> {{address}}</br>\\n        Delivery By: {{arrivalDate}}\\n    </p>\\n    <hr />\\n    <table>\\n        <tr>\\n            <th style=\\\"padding-left: 10px;\\\">Name</th>\\n            <th>Description</th>\\n            <th style=\\\"padding-right: 10px;\\\">Price</th>\\n        </tr>\\n\\n        {{#each items}}\\n            <tr>\\n                <td style=\\\"padding-left: 10px;\\\">{{name}}</td>\\n                <td>{{description}}</td>\\n                <td style=\\\"padding-right: 10px;\\\">£ {{price}}</td>\\n            </tr>\\n        {{/each}}\\n        \\n        <tr>\\n            <td colSpan=2 style=\\\"text-align: right\\\">\\n                <b>Total</b>\\n            </td>\\n            <td>£ {{total}}</td>\\n        </tr>\\n    </table>\\n`;\\n\\npm.visualizer.set(template, {\\n    items: body.items,\\n    id: body.orderId,\\n    address: body.address,\\n    total: body.orderTotal,\\n    arrivalDate: body.arrivalDate\\n});\\n\\n\\n// Tests\\n\\nit(\\\"Should have 200 OK status code\\\", function () {\\n    pm.response.to.have.status(200);\\n});\\n\\nit('Order should have the correct item', function () {\\n    expect(body.orderId).to.be.ok;\\n    expect(body.items.length).to.eql(1);\\n    \\n    expect(body.arrivalDate).to.be.ok;\\n    expect(body.orderDate).to.be.ok;\\n    expect(body.orderTotal).to.eql(15);\\n    expect(body.address).to.eql('SimpleKart HQ, 221B Baker street');\\n});\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [],\n                            \"headerData\": [],\n                            \"pathVariableData\": [\n                                {\n                                    \"id\": \"b53c14f2-5910-4e3f-9682-0d8ec447ae98\",\n                                    \"key\": \"orderId\",\n                                    \"value\": \"{{orderId}}\",\n                                    \"type\": \"string\"\n                                }\n                            ],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"responses\": []\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071945,\n                            \"folder\": \"04b872d9-135f-4274-a18f-3439c3a63318\",\n                            \"collection\": \"7732157#6537c169-8d02-413f-94f3-4dda79355a90\",\n                            \"id\": \"9a1aec9e-04ff-4956-8a26-466b33e879e6\",\n                            \"name\": \"Fetch all items\",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": null,\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"0bbab959-ead2-45d9-a055-5bbc0fb4947d\",\n                                        \"exec\": [\n                                            \"const body = pm.response.json();\",\n                                            \"\",\n                                            \"eval(pm.variables.get(\\\"lib\\\"));\",\n                                            \"\",\n                                            \"// Views\",\n                                            \"const template = `\",\n                                            \"    <style>\",\n                                            \"        body {\",\n                                            \"            color: #fff;\",\n                                            \"        }\",\n                                            \"    </style>\",\n                                            \"    <table>\",\n                                            \"        <tr>\",\n                                            \"            <th style=\\\"padding-left: 10px; width: 25%;\\\">Name</th>\",\n                                            \"            <th style=\\\"width: 50%\\\">Description</th>\",\n                                            \"            <th style=\\\"padding-right: 10px;\\\">Price</th>\",\n                                            \"        </tr>\",\n                                            \"\",\n                                            \"        {{#each items}}\",\n                                            \"            <tr>\",\n                                            \"                <td style=\\\"padding-left: 10px;\\\">{{name}}</td>\",\n                                            \"                <td>{{description}}</td>\",\n                                            \"                <td style=\\\"padding-right: 10px;\\\">£ {{price}}</td>\",\n                                            \"            </tr>\",\n                                            \"        {{/each}}\",\n                                            \"    </table>\",\n                                            \"`;\",\n                                            \"\",\n                                            \"pm.visualizer.set(template, {\",\n                                            \"    items: body\",\n                                            \"});\",\n                                            \"\",\n                                            \"\",\n                                            \"// Tests\",\n                                            \"\",\n                                            \"it(\\\"Should have 200 OK status code\\\", function () {\",\n                                            \"    pm.response.to.have.status(200);\",\n                                            \"});\",\n                                            \"\",\n                                            \"it('Order should have the correct item', function () {\",\n                                            \"    expect(body.length).to.be.ok;\",\n                                            \"    \",\n                                            \"    body.forEach((item) => {\",\n                                            \"        expect(item.name).to.be.ok;\",\n                                            \"        expect(item.description).to.be.ok;\",\n                                            \"        expect(item.itemId).to.be.ok;\",\n                                            \"        expect(item.price).to.be.ok;\",\n                                            \"    });\",\n                                            \"});\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": null,\n                            \"variables\": null,\n                            \"headers\": \"\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {},\n                            \"url\": \"{{baseUrl}}/items?list=10\",\n                            \"preRequestScript\": null,\n                            \"tests\": \"const body = pm.response.json();\\n\\neval(pm.variables.get(\\\"lib\\\"));\\n\\n// Views\\nconst template = `\\n    <style>\\n        body {\\n            color: #fff;\\n        }\\n    </style>\\n    <table>\\n        <tr>\\n            <th style=\\\"padding-left: 10px; width: 25%;\\\">Name</th>\\n            <th style=\\\"width: 50%\\\">Description</th>\\n            <th style=\\\"padding-right: 10px;\\\">Price</th>\\n        </tr>\\n\\n        {{#each items}}\\n            <tr>\\n                <td style=\\\"padding-left: 10px;\\\">{{name}}</td>\\n                <td>{{description}}</td>\\n                <td style=\\\"padding-right: 10px;\\\">£ {{price}}</td>\\n            </tr>\\n        {{/each}}\\n    </table>\\n`;\\n\\npm.visualizer.set(template, {\\n    items: body\\n});\\n\\n\\n// Tests\\n\\nit(\\\"Should have 200 OK status code\\\", function () {\\n    pm.response.to.have.status(200);\\n});\\n\\nit('Order should have the correct item', function () {\\n    expect(body.length).to.be.ok;\\n    \\n    body.forEach((item) => {\\n        expect(item.name).to.be.ok;\\n        expect(item.description).to.be.ok;\\n        expect(item.itemId).to.be.ok;\\n        expect(item.price).to.be.ok;\\n    });\\n});\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [\n                                {\n                                    \"key\": \"list\",\n                                    \"value\": \"10\"\n                                }\n                            ],\n                            \"headerData\": [],\n                            \"pathVariableData\": [],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"responses\": []\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071983,\n                            \"folder\": \"40f5b319-a933-43bd-b191-57a913fc1079\",\n                            \"collection\": \"7732157#6537c169-8d02-413f-94f3-4dda79355a90\",\n                            \"id\": \"a7a92db7-5657-4a7b-b525-fcd1f27139ee\",\n                            \"name\": \"Create an order\",\n                            \"dataMode\": \"raw\",\n                            \"data\": null,\n                            \"auth\": null,\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"4b9f2b9f-4e5b-45cc-90a8-e3a6adc43b69\",\n                                        \"exec\": [\n                                            \"const body = pm.response.json();\",\n                                            \"\",\n                                            \"eval(pm.variables.get(\\\"lib\\\"));\",\n                                            \"\",\n                                            \"// Views\",\n                                            \"const template = `\",\n                                            \"    <style>\",\n                                            \"        body {\",\n                                            \"            color: #fff;\",\n                                            \"        }\",\n                                            \"    </style>\",\n                                            \"    <h5>Order: {{id}}</h5>\",\n                                            \"    <p>\",\n                                            \"        <b>Address:</b> {{address}}</br>\",\n                                            \"        Delivery By: {{arrivalDate}}\",\n                                            \"    </p>\",\n                                            \"    <hr />\",\n                                            \"    <table>\",\n                                            \"        <tr>\",\n                                            \"            <th style=\\\"padding-left: 10px;\\\">Name</th>\",\n                                            \"            <th>Description</th>\",\n                                            \"            <th style=\\\"padding-right: 10px;\\\">Price</th>\",\n                                            \"        </tr>\",\n                                            \"\",\n                                            \"        {{#each items}}\",\n                                            \"            <tr>\",\n                                            \"                <td style=\\\"padding-left: 10px;\\\">{{name}}</td>\",\n                                            \"                <td>{{description}}</td>\",\n                                            \"                <td style=\\\"padding-right: 10px;\\\">£ {{price}}</td>\",\n                                            \"            </tr>\",\n                                            \"        {{/each}}\",\n                                            \"        \",\n                                            \"        <tr>\",\n                                            \"            <td colSpan=2 style=\\\"text-align: right\\\">\",\n                                            \"                <b>Total</b>\",\n                                            \"            </td>\",\n                                            \"            <td>£ {{total}}</td>\",\n                                            \"        </tr>\",\n                                            \"    </table>\",\n                                            \"`;\",\n                                            \"\",\n                                            \"pm.visualizer.set(template, {\",\n                                            \"    items: body.items,\",\n                                            \"    id: body.orderId,\",\n                                            \"    address: body.address,\",\n                                            \"    total: body.orderTotal,\",\n                                            \"    arrivalDate: body.arrivalDate\",\n                                            \"});\",\n                                            \"\",\n                                            \"\",\n                                            \"// Tests\",\n                                            \"\",\n                                            \"it(\\\"Should have 200 OK status code\\\", function () {\",\n                                            \"    pm.response.to.have.status(201);\",\n                                            \"});\",\n                                            \"\",\n                                            \"it('Order should have the correct item', function () {\",\n                                            \"    expect(body.orderId).to.be.ok;\",\n                                            \"    expect(body.items.length).to.eql(1);\",\n                                            \"    \",\n                                            \"    expect(body.arrivalDate).to.be.ok;\",\n                                            \"    expect(body.orderDate).to.be.ok;\",\n                                            \"    expect(body.orderTotal).to.eql(15);\",\n                                            \"    expect(body.address).to.eql('SimpleKart HQ, 221B Baker street');\",\n                                            \"});\",\n                                            \"\",\n                                            \"pm.environment.set('orderId', body.orderId);\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": \"{\\n    \\\"address\\\": \\\"SimpleKart HQ, 221B Baker street\\\",\\n    \\\"items\\\": [\\n        {\\n            \\\"itemId\\\": 16247,\\n            \\\"name\\\": \\\"Postman Merch\\\",\\n            \\\"price\\\": 15,\\n            \\\"description\\\": \\\"Official T-shirt for the Postman community.\\\"\\n        }\\n    ]\\n}\",\n                            \"descriptionFormat\": null,\n                            \"description\": null,\n                            \"variables\": null,\n                            \"headers\": \"x-mock-match-request-body: true\\nContent-Type: application/json\\n\",\n                            \"method\": \"POST\",\n                            \"pathVariables\": {},\n                            \"url\": \"{{baseUrl}}/orders\",\n                            \"preRequestScript\": null,\n                            \"tests\": \"const body = pm.response.json();\\n\\neval(pm.variables.get(\\\"lib\\\"));\\n\\n// Views\\nconst template = `\\n    <style>\\n        body {\\n            color: #fff;\\n        }\\n    </style>\\n    <h5>Order: {{id}}</h5>\\n    <p>\\n        <b>Address:</b> {{address}}</br>\\n        Delivery By: {{arrivalDate}}\\n    </p>\\n    <hr />\\n    <table>\\n        <tr>\\n            <th style=\\\"padding-left: 10px;\\\">Name</th>\\n            <th>Description</th>\\n            <th style=\\\"padding-right: 10px;\\\">Price</th>\\n        </tr>\\n\\n        {{#each items}}\\n            <tr>\\n                <td style=\\\"padding-left: 10px;\\\">{{name}}</td>\\n                <td>{{description}}</td>\\n                <td style=\\\"padding-right: 10px;\\\">£ {{price}}</td>\\n            </tr>\\n        {{/each}}\\n        \\n        <tr>\\n            <td colSpan=2 style=\\\"text-align: right\\\">\\n                <b>Total</b>\\n            </td>\\n            <td>£ {{total}}</td>\\n        </tr>\\n    </table>\\n`;\\n\\npm.visualizer.set(template, {\\n    items: body.items,\\n    id: body.orderId,\\n    address: body.address,\\n    total: body.orderTotal,\\n    arrivalDate: body.arrivalDate\\n});\\n\\n\\n// Tests\\n\\nit(\\\"Should have 200 OK status code\\\", function () {\\n    pm.response.to.have.status(201);\\n});\\n\\nit('Order should have the correct item', function () {\\n    expect(body.orderId).to.be.ok;\\n    expect(body.items.length).to.eql(1);\\n    \\n    expect(body.arrivalDate).to.be.ok;\\n    expect(body.orderDate).to.be.ok;\\n    expect(body.orderTotal).to.eql(15);\\n    expect(body.address).to.eql('SimpleKart HQ, 221B Baker street');\\n});\\n\\npm.environment.set('orderId', body.orderId);\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [],\n                            \"headerData\": [\n                                {\n                                    \"key\": \"x-mock-match-request-body\",\n                                    \"value\": \"true\",\n                                    \"type\": \"text\"\n                                },\n                                {\n                                    \"key\": \"Content-Type\",\n                                    \"value\": \"application/json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"pathVariableData\": [],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"dataOptions\": {\n                                \"raw\": {\n                                    \"language\": \"json\"\n                                }\n                            },\n                            \"responses\": []\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071940,\n                            \"folder\": \"e77c8b4e-7f2d-46d9-b352-2e189aa73269\",\n                            \"collection\": \"7732157#6537c169-8d02-413f-94f3-4dda79355a90\",\n                            \"id\": \"f256019f-c62e-44f8-b440-1c8de665c050\",\n                            \"name\": \"Fetch order details\",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": null,\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"432bb7df-08aa-43d3-8bf8-e7afcf7d5291\",\n                                        \"exec\": [\n                                            \"const body = pm.response.json();\",\n                                            \"\",\n                                            \"eval(pm.variables.get(\\\"lib\\\"));\",\n                                            \"\",\n                                            \"// Views\",\n                                            \"const template = `\",\n                                            \"    <style>\",\n                                            \"        body {\",\n                                            \"            color: #fff;\",\n                                            \"        }\",\n                                            \"    </style>\",\n                                            \"    <h5>Order: {{id}}</h5>\",\n                                            \"    <p>\",\n                                            \"        <b>Address:</b> {{address}}</br>\",\n                                            \"        Delivery By: {{arrivalDate}}\",\n                                            \"    </p>\",\n                                            \"    <hr />\",\n                                            \"    <table>\",\n                                            \"        <tr>\",\n                                            \"            <th style=\\\"padding-left: 10px;\\\">Name</th>\",\n                                            \"            <th>Description</th>\",\n                                            \"            <th style=\\\"padding-right: 10px;\\\">Price</th>\",\n                                            \"        </tr>\",\n                                            \"\",\n                                            \"        {{#each items}}\",\n                                            \"            <tr>\",\n                                            \"                <td style=\\\"padding-left: 10px;\\\">{{name}}</td>\",\n                                            \"                <td>{{description}}</td>\",\n                                            \"                <td style=\\\"padding-right: 10px;\\\">£ {{price}}</td>\",\n                                            \"            </tr>\",\n                                            \"        {{/each}}\",\n                                            \"        \",\n                                            \"        <tr>\",\n                                            \"            <td colSpan=2 style=\\\"text-align: right\\\">\",\n                                            \"                <b>Total</b>\",\n                                            \"            </td>\",\n                                            \"            <td>£ {{total}}</td>\",\n                                            \"        </tr>\",\n                                            \"    </table>\",\n                                            \"`;\",\n                                            \"\",\n                                            \"pm.visualizer.set(template, {\",\n                                            \"    items: body.items,\",\n                                            \"    id: body.orderId,\",\n                                            \"    address: body.address,\",\n                                            \"    total: body.orderTotal,\",\n                                            \"    arrivalDate: body.arrivalDate\",\n                                            \"});\",\n                                            \"\",\n                                            \"\",\n                                            \"// Tests\",\n                                            \"\",\n                                            \"it(\\\"Should have 200 OK status code\\\", function () {\",\n                                            \"    pm.response.to.have.status(200);\",\n                                            \"});\",\n                                            \"\",\n                                            \"it('Order should have the correct item', function () {\",\n                                            \"    expect(body.orderId).to.be.ok;\",\n                                            \"    expect(body.items.length).to.eql(1);\",\n                                            \"    \",\n                                            \"    expect(body.arrivalDate).to.be.ok;\",\n                                            \"    expect(body.orderDate).to.be.ok;\",\n                                            \"    expect(body.orderTotal).to.eql(15);\",\n                                            \"    expect(body.address).to.eql('SimpleKart HQ, 221B Baker street');\",\n                                            \"});\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": null,\n                            \"variables\": null,\n                            \"headers\": \"\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {\n                                \"orderId\": \"{{orderId}}\"\n                            },\n                            \"url\": \"{{baseUrl}}/orders/:orderId\",\n                            \"preRequestScript\": null,\n                            \"tests\": \"const body = pm.response.json();\\n\\neval(pm.variables.get(\\\"lib\\\"));\\n\\n// Views\\nconst template = `\\n    <style>\\n        body {\\n            color: #fff;\\n        }\\n    </style>\\n    <h5>Order: {{id}}</h5>\\n    <p>\\n        <b>Address:</b> {{address}}</br>\\n        Delivery By: {{arrivalDate}}\\n    </p>\\n    <hr />\\n    <table>\\n        <tr>\\n            <th style=\\\"padding-left: 10px;\\\">Name</th>\\n            <th>Description</th>\\n            <th style=\\\"padding-right: 10px;\\\">Price</th>\\n        </tr>\\n\\n        {{#each items}}\\n            <tr>\\n                <td style=\\\"padding-left: 10px;\\\">{{name}}</td>\\n                <td>{{description}}</td>\\n                <td style=\\\"padding-right: 10px;\\\">£ {{price}}</td>\\n            </tr>\\n        {{/each}}\\n        \\n        <tr>\\n            <td colSpan=2 style=\\\"text-align: right\\\">\\n                <b>Total</b>\\n            </td>\\n            <td>£ {{total}}</td>\\n        </tr>\\n    </table>\\n`;\\n\\npm.visualizer.set(template, {\\n    items: body.items,\\n    id: body.orderId,\\n    address: body.address,\\n    total: body.orderTotal,\\n    arrivalDate: body.arrivalDate\\n});\\n\\n\\n// Tests\\n\\nit(\\\"Should have 200 OK status code\\\", function () {\\n    pm.response.to.have.status(200);\\n});\\n\\nit('Order should have the correct item', function () {\\n    expect(body.orderId).to.be.ok;\\n    expect(body.items.length).to.eql(1);\\n    \\n    expect(body.arrivalDate).to.be.ok;\\n    expect(body.orderDate).to.be.ok;\\n    expect(body.orderTotal).to.eql(15);\\n    expect(body.address).to.eql('SimpleKart HQ, 221B Baker street');\\n});\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [],\n                            \"headerData\": [],\n                            \"pathVariableData\": [\n                                {\n                                    \"id\": \"b503569e-d002-438c-b691-6e8484615ece\",\n                                    \"key\": \"orderId\",\n                                    \"value\": \"{{orderId}}\",\n                                    \"type\": \"string\"\n                                }\n                            ],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"responses\": []\n                        }\n                    ]\n                },\n                \"7732157-7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4\": {\n                    \"owner\": \"7732157\",\n                    \"lastUpdatedBy\": \"7732157\",\n                    \"lastRevision\": 14717260655,\n                    \"team\": null,\n                    \"id\": \"7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4\",\n                    \"name\": \"SimpleKart 2\",\n                    \"description\": \"The SimpleKart REST API demonstrates the API Builder capabilities in Postman using an imaginary E-Commerce. It provides endpoints for retrieving items or orders and their details from a database as well as adding order details to a database.\\n\\n> This API is built on top of a mock server, this means the data is static and can't be edited.\\n\\n# Getting Started\\n\\nMake sure that you have the `Prod` environment selected in Postman ([learn more about environments](https://learning.postman.com/docs/postman/variables-and-environments/variables/#environments-in-postman)) and you will be able to start sending request to the SimpleKart API.\\n\\n# Contact Support\\n\\n- Name: Postman Team\\n- Email: simplekart@postman.com\",\n                    \"variables\": [\n                        {\n                            \"id\": \"0ee689b9-a186-4c49-8ae9-609f37a69bc3\",\n                            \"key\": \"baseUrl\",\n                            \"value\": \"https://api.simplekart.com\",\n                            \"type\": \"string\",\n                            \"enabled\": true\n                        }\n                    ],\n                    \"auth\": null,\n                    \"events\": [\n                        {\n                            \"listen\": \"prerequest\",\n                            \"script\": {\n                                \"id\": \"638918cb-5678-4ca5-ad70-56d23af6d445\",\n                                \"type\": \"text/javascript\",\n                                \"exec\": [\n                                    \"\"\n                                ]\n                            }\n                        },\n                        {\n                            \"listen\": \"test\",\n                            \"script\": {\n                                \"id\": \"9511970b-85b6-49d8-ac12-f0ba4b4bd6e4\",\n                                \"type\": \"text/javascript\",\n                                \"exec\": [\n                                    \"\"\n                                ]\n                            }\n                        }\n                    ],\n                    \"remote_id\": \"0\",\n                    \"remoteLink\": null,\n                    \"folders_order\": [\n                        \"9d1cb5bc-ad57-4975-aae9-297c4743ed68\",\n                        \"706cf457-8a17-4b91-a606-7875d9561e90\"\n                    ],\n                    \"order\": [],\n                    \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                    \"updatedAt\": \"2020-05-13T19:40:28.000Z\",\n                    \"folders\": [\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716072039,\n                            \"collection\": \"7732157#7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4\",\n                            \"folder\": null,\n                            \"id\": \"706cf457-8a17-4b91-a606-7875d9561e90\",\n                            \"name\": \"Orders\",\n                            \"description\": \"You can retrieve a list of orders or the details of a single order from the `orders` database.\",\n                            \"variables\": null,\n                            \"auth\": null,\n                            \"events\": null,\n                            \"order\": [\n                                \"083f01b8-b62e-41a6-9099-ee194c631464\",\n                                \"3d30ff57-0a41-42a5-80f1-9f6930725f7c\",\n                                \"e92d2df6-d482-40a5-b8b5-ba8ca0ee2b20\"\n                            ],\n                            \"folders_order\": [],\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716072037,\n                            \"collection\": \"7732157#7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4\",\n                            \"folder\": null,\n                            \"id\": \"9d1cb5bc-ad57-4975-aae9-297c4743ed68\",\n                            \"name\": \"Items\",\n                            \"description\": \"You can retrieve a list of items or the details of a single item from the `items` database.\",\n                            \"variables\": null,\n                            \"auth\": null,\n                            \"events\": null,\n                            \"order\": [\n                                \"6316706f-cdbd-4a92-81d8-e89412f7a3e8\",\n                                \"b2904734-bdfb-405d-b595-e80bcf89d336\"\n                            ],\n                            \"folders_order\": [],\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                        }\n                    ],\n                    \"requests\": [\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071738,\n                            \"folder\": \"706cf457-8a17-4b91-a606-7875d9561e90\",\n                            \"collection\": \"7732157#7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4\",\n                            \"id\": \"083f01b8-b62e-41a6-9099-ee194c631464\",\n                            \"name\": \"Get orders from the database \",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": null,\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": \"## Get a list of orders\\n\\nYou can use the `/orders` endpoint to retrieve a list of orders, you can indicate how many orders to show by changing the value of the `list` parameter in the query, e.g. to display only 3 orders you can use\\n`{{baseUrl}}/orders?list=3`.\",\n                            \"variables\": null,\n                            \"headers\": \"\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {},\n                            \"url\": \"{{baseUrl}}/orders?list=10\",\n                            \"preRequestScript\": null,\n                            \"tests\": null,\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [\n                                {\n                                    \"key\": \"list\",\n                                    \"value\": \"10\",\n                                    \"description\": \"Number of orders to show\"\n                                }\n                            ],\n                            \"headerData\": [],\n                            \"pathVariableData\": [],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"responses\": [\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071862,\n                                    \"request\": \"083f01b8-b62e-41a6-9099-ee194c631464\",\n                                    \"id\": \"8ee2ffa2-13d6-48fd-a775-3effda723ac0\",\n                                    \"name\": \"OK - Successful pull of orders\",\n                                    \"status\": \"OK\",\n                                    \"responseCode\": {\n                                        \"code\": 200,\n                                        \"name\": \"OK\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"[\\n  {\\n    \\\"orderId\\\": 674,\\n    \\\"items\\\": [\\n      {\\n        \\\"itemId\\\": 1657,\\n        \\\"name\\\": \\\"Smart WiFi Router\\\",\\n        \\\"price\\\": 2096,\\n        \\\"description\\\": \\\"Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH\\\"\\n      }\\n    ],\\n    \\\"arrivalDate\\\": \\\"2020-03-03T13:07:45.962Z\\\",\\n    \\\"orderDate\\\": \\\"2020-03-01T19:27:26.733Z\\\",\\n    \\\"orderTotal\\\": 2096,\\n    \\\"address\\\": \\\"95 Tarkiln Hill St.Laurel, MD 20707\\\"\\n  },\\n  {\\n    \\\"orderId\\\": 675,\\n    \\\"items\\\": [\\n      {\\n        \\\"itemId\\\": 1658,\\n        \\\"name\\\": \\\"VR Gaming Headset\\\",\\n        \\\"price\\\": 79990,\\n        \\\"description\\\": \\\"VR Gaming Headset puts you at the center of virtual reality's most pulse-pounding, PC-powered gameplay. See the action unfold all around you through our sharpest lenses and next-generation optics. Lose yourself in the experience with a comfortable, improved design that lets you start playing faster and keep playing longer. Insight tracking gives you the power to move throughout your playspace in any direction. No external sensors. No complicated setup. Just hands-on action and interaction with our updated Oculus Touch controllers right out of the box. Step into the game and the future of PC VR.\\\"\\n      }\\n    ],\\n    \\\"arrivalDate\\\": \\\"2020-03-03T15:00:56.787Z\\\",\\n    \\\"orderDate\\\": \\\"2020-03-02T21:25:22.096Z\\\",\\n    \\\"orderTotal\\\": 79990,\\n    \\\"address\\\": \\\"7405 Arcadia St.Rockville, MD 20850\\\"\\n  },\\n  {\\n    \\\"orderId\\\": 676,\\n    \\\"items\\\": [\\n      {\\n        \\\"itemId\\\": 1665,\\n        \\\"name\\\": \\\"Smart Watch\\\",\\n        \\\"price\\\": 1805,\\n        \\\"description\\\": \\\"Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data.\\\"\\n      }\\n    ],\\n    \\\"arrivalDate\\\": \\\"2020-03-05T17:30:15.156Z\\\",\\n    \\\"orderDate\\\": \\\"2020-03-03T01:10:27.512Z\\\",\\n    \\\"orderTotal\\\": 1805,\\n    \\\"address\\\": \\\"9791 Lawrence Dr.Marlton, NJ 08053r\\\"\\n  },\\n  {\\n    \\\"orderId\\\": 677,\\n    \\\"items\\\": [\\n      {\\n        \\\"itemId\\\": 1659,\\n        \\\"name\\\": \\\"Classic Loop Top Shaker Bottle, 20-Ounce\\\",\\n        \\\"price\\\": 578,\\n        \\\"description\\\": \\\"Easy to maintain proper nutrition and hydration on-the-go.The wide mouth makes it easy to add scoops of powdered mixes, meal ingredients, and liquids, and embossed markings show both ounces and milliliters for easy measuring anywhere (note that markings on the 20-ounce capacity shaker cup only go up to 12 ounces). Bottle contents and liquids are securely contained thanks to a tightly threaded screw-on lid that creates a leakproof seal, and a flip cap that snaps securely shut for shaking and transportation.\\\"\\n      }\\n    ],\\n    \\\"arrivalDate\\\": \\\"2020-03-03T18:16:24.911Z\\\",\\n    \\\"orderDate\\\": \\\"2020-03-01T06:09:23.007Z\\\",\\n    \\\"orderTotal\\\": 578,\\n    \\\"address\\\": \\\"822 Clay St.Tampa, FL 33604\\\"\\n  },\\n  {\\n    \\\"orderId\\\": 678,\\n    \\\"items\\\": [\\n      {\\n        \\\"itemId\\\": 1663,\\n        \\\"name\\\": \\\"Hair Dryer\\\",\\n        \\\"price\\\": 1400,\\n        \\\"description\\\": \\\"Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%.\\\"\\n      }\\n    ],\\n    \\\"arrivalDate\\\": \\\"2020-03-04T12:09:07.955Z\\\",\\n    \\\"orderDate\\\": \\\"2020-03-02T21:50:44.173Z\\\",\\n    \\\"orderTotal\\\": 1400,\\n    \\\"address\\\": \\\"7444 SW. State Ave.Philadelphia, PA 19111\\\"\\n  },\\n  {\\n    \\\"orderId\\\": 679,\\n    \\\"items\\\": [\\n      {\\n        \\\"itemId\\\": 1660,\\n        \\\"name\\\": \\\"4-Port USB 2.0 Hub\\\",\\n        \\\"price\\\": 505,\\n        \\\"description\\\": \\\"Easily add up to 4 devices with the USB 2.0 Hub. Particularly great for recent notebooks that provide a limited number of USB ports. Achieve full 480 Mbps on each port, or daisy-chain multiple hubs to a maximum of 127 devices.Fully backwards compatible with the USB 1.1 products.\\\"\\n      }\\n    ],\\n    \\\"arrivalDate\\\": \\\"2020-03-04T11:29:56.99Z\\\",\\n    \\\"orderDate\\\": \\\"2020-03-03T00:51:26.19Z\\\",\\n    \\\"orderTotal\\\": 505,\\n    \\\"address\\\": \\\"307 Purple Finch Ave.New Lenox, IL 60451\\\"\\n  },\\n  {\\n    \\\"orderId\\\": 680,\\n    \\\"items\\\": [\\n      {\\n        \\\"itemId\\\": 1661,\\n        \\\"name\\\": \\\"Wipes Flushable Wet Wipes Dispenser, Mint Chill, 48 Count (Pack of 3)\\\",\\n        \\\"price\\\": 938,\\n        \\\"description\\\": \\\"For a superior clean that’s fresh, gentle, and effective, choose Wipes with the CleaningRipples Texture. Wipes are 100 percent flushable, remove odor causing bacteria and offer a large, dual layer wipe to clean better than when using dry toilet paper alone.\\\"\\n      }\\n    ],\\n    \\\"arrivalDate\\\": \\\"2020-03-04T02:06:58.886Z\\\",\\n    \\\"orderDate\\\": \\\"2020-03-02T04:33:52.652Z\\\",\\n    \\\"orderTotal\\\": 938,\\n    \\\"address\\\": \\\"946 Holly StreetHamilton, OH 45011\\\"\\n  },\\n  {\\n    \\\"orderId\\\": 681,\\n    \\\"items\\\": [\\n      {\\n        \\\"itemId\\\": 1663,\\n        \\\"name\\\": \\\"Hair Dryer\\\",\\n        \\\"price\\\": 1400,\\n        \\\"description\\\": \\\"Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%.\\\"\\n      }\\n    ],\\n    \\\"arrivalDate\\\": \\\"2020-03-04T17:26:07.706Z\\\",\\n    \\\"orderDate\\\": \\\"2020-03-02T04:17:23.689Z\\\",\\n    \\\"orderTotal\\\": 1400,\\n    \\\"address\\\": \\\"8924 East Birchwood St.Hamburg, NY 14075\\\"\\n  },\\n  {\\n    \\\"orderId\\\": 682,\\n    \\\"items\\\": [\\n      {\\n        \\\"itemId\\\": 1665,\\n        \\\"name\\\": \\\"Smart Watch\\\",\\n        \\\"price\\\": 1805,\\n        \\\"description\\\": \\\"Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data.\\\"\\n      }\\n    ],\\n    \\\"arrivalDate\\\": \\\"2020-03-05T14:07:01.688Z\\\",\\n    \\\"orderDate\\\": \\\"2020-03-03T04:58:18.504Z\\\",\\n    \\\"orderTotal\\\": 1805,\\n    \\\"address\\\": \\\"10 Wilson LaneBay City, MI 48706\\\"\\n  },\\n  {\\n    \\\"orderId\\\": 683,\\n    \\\"items\\\": [\\n      {\\n        \\\"itemId\\\": 1666,\\n        \\\"name\\\": \\\"Learning Thermostat, 3rd Gen, Smart Thermostat\\\",\\n        \\\"price\\\": 15746,\\n        \\\"description\\\": \\\"Learning Thermostat is a smart thermostat that learns what temperatures you like, turns itself down when you’re away and connects to your phone. It has a big, sharp display. And it’s proven to help save energy. In independent studies, the Thermostat saved an average of 10% to 12% on heating bills and 15% on cooling bills.\\\"\\n      }\\n    ],\\n    \\\"arrivalDate\\\": \\\"2020-03-05T10:43:23.713Z\\\",\\n    \\\"orderDate\\\": \\\"2020-03-03T08:34:21.21Z\\\",\\n    \\\"orderTotal\\\": 15746,\\n    \\\"address\\\": \\\"m81 West Shirley Dr.Greenfield, IN 46140\\\"\\n  },\\n  {\\n    \\\"orderId\\\": 656,\\n    \\\"items\\\": [\\n      {\\n        \\\"itemId\\\": 16247,\\n        \\\"name\\\": \\\"Postman Merch\\\",\\n        \\\"price\\\": 15,\\n        \\\"description\\\": \\\"Official Merch for the Postman community.\\\"\\n      }\\n    ],\\n    \\\"arrivalDate\\\": \\\"2020-3-04T13:07:45.962Z\\\",\\n    \\\"orderDate\\\": \\\"2020-03-06T19:27:26.733Z\\\",\\n    \\\"orderTotal\\\": 15,\\n    \\\"address\\\": \\\"SimpleKart HQ, 221B Baker street\\\"\\n  }\\n]\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"008f4403-5916-4f90-ac81-803f82eb1db0\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"url\\\":\\\"{{baseUrl}}/orders?list=10\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"list\\\",\\\"value\\\":\\\"10\\\"}],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                }\n                            ]\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071860,\n                            \"folder\": \"706cf457-8a17-4b91-a606-7875d9561e90\",\n                            \"collection\": \"7732157#7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4\",\n                            \"id\": \"3d30ff57-0a41-42a5-80f1-9f6930725f7c\",\n                            \"name\": \"Post order details to the database\",\n                            \"dataMode\": \"raw\",\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": null,\n                            \"rawModeData\": \"{\\n    \\\"address\\\": \\\"<string>\\\",\\n    \\\"item\\\": {\\n        \\\"itemId\\\": 1,\\n        \\\"name\\\": \\\"<string>\\\",\\n        \\\"price\\\": 2000,\\n        \\\"description\\\": \\\"<string>\\\"\\n    }\\n}\",\n                            \"descriptionFormat\": null,\n                            \"description\": \"## Add an order to the database\\n\\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\\n\\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\\n\\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter.\",\n                            \"variables\": null,\n                            \"headers\": \"Content-Type: application/json\\n\",\n                            \"method\": \"POST\",\n                            \"pathVariables\": {},\n                            \"url\": \"{{baseUrl}}/orders\",\n                            \"preRequestScript\": null,\n                            \"tests\": null,\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [],\n                            \"headerData\": [\n                                {\n                                    \"key\": \"Content-Type\",\n                                    \"value\": \"application/json\"\n                                }\n                            ],\n                            \"pathVariableData\": [],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"dataOptions\": {\n                                \"raw\": {}\n                            },\n                            \"responses\": [\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071975,\n                                    \"request\": \"3d30ff57-0a41-42a5-80f1-9f6930725f7c\",\n                                    \"id\": \"a0382128-d86f-4aaa-9df5-9a196ffe1b6b\",\n                                    \"name\": \"Ok - Postman Merch\",\n                                    \"status\": \"Created\",\n                                    \"responseCode\": {\n                                        \"code\": 201,\n                                        \"name\": \"Created\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"description\": \"\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"{\\n    \\\"orderId\\\": 656,\\n    \\\"items\\\": [\\n        {\\n            \\\"itemId\\\": 16247,\\n            \\\"name\\\": \\\"Postman Merch\\\",\\n            \\\"price\\\": 15,\\n            \\\"description\\\": \\\"Official Merch for the Postman community.\\\"\\n        }\\n    ],\\n    \\\"arrivalDate\\\": \\\"2020-3-04T13:07:45.962Z\\\",\\n    \\\"orderDate\\\": \\\"2020-03-06T19:27:26.733Z\\\",\\n    \\\"orderTotal\\\": 15,\\n    \\\"address\\\": \\\"SimpleKart HQ, 221B Baker street\\\"\\n}\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"3f2d1a20-ae0e-4942-ab87-7f1495235f91\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":\\\"Content-Type: application/json\\\",\\\"dataMode\\\":\\\"raw\\\",\\\"url\\\":\\\"https://fffc2eb4-dbcf-4c6d-bc30-c3cb2e7ecfa6.mock.pstmn.io/orders\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"pathVariableData\\\":[],\\\"queryParams\\\":[],\\\"headerData\\\":[{\\\"key\\\":\\\"Content-Type\\\",\\\"name\\\":\\\"Content-Type\\\",\\\"value\\\":\\\"application/json\\\",\\\"type\\\":\\\"text\\\"}],\\\"data\\\":\\\"{\\\\n    \\\\\\\"address\\\\\\\": \\\\\\\"SimpleKart HQ, 221B Baker street\\\\\\\",\\\\n    \\\\\\\"items\\\\\\\": [\\\\n        {\\\\n            \\\\\\\"itemId\\\\\\\": 16247,\\\\n            \\\\\\\"name\\\\\\\": \\\\\\\"Postman Merch\\\\\\\",\\\\n            \\\\\\\"price\\\\\\\": 15,\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Official T-shirt for the Postman community.\\\\\\\"\\\\n        }\\\\n    ]\\\\n}\\\",\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                },\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071973,\n                                    \"request\": \"3d30ff57-0a41-42a5-80f1-9f6930725f7c\",\n                                    \"id\": \"ef10beb1-7b45-4c86-b038-7d343ad6c74d\",\n                                    \"name\": \"OK - Order created\",\n                                    \"status\": \"Created\",\n                                    \"responseCode\": {\n                                        \"code\": 201,\n                                        \"name\": \"Created\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"{\\n    \\\"orderId\\\": 674,\\n    \\\"items\\\": [\\n        {\\n            \\\"itemId\\\": 1657,\\n            \\\"name\\\": \\\"Smart WiFi Router\\\",\\n            \\\"price\\\": 2096,\\n            \\\"description\\\": \\\"Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH\\\"\\n        }\\n    ],\\n    \\\"arrivalDate\\\": \\\"2020-3-04T13:07:45.962Z\\\",\\n    \\\"orderDate\\\": \\\"2020-03-06T19:27:26.733Z\\\",\\n    \\\"orderTotal\\\": 2096,\\n    \\\"address\\\": \\\"95 Tarkiln Hill St.Laurel, MD 20707\\\"\\n}\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"9d259dc2-a1a3-4bfe-9f26-6adb29e02c72\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":\\\"Content-Type: application/json\\\",\\\"dataMode\\\":\\\"raw\\\",\\\"url\\\":\\\"{{baseUrl}}/orders\\\",\\\"dataOptions\\\":{\\\"raw\\\":{\\\"language\\\":\\\"json\\\"}},\\\"pathVariableData\\\":[],\\\"queryParams\\\":[],\\\"headerData\\\":[{\\\"key\\\":\\\"Content-Type\\\",\\\"name\\\":\\\"Content-Type\\\",\\\"value\\\":\\\"application/json\\\",\\\"type\\\":\\\"text\\\"}],\\\"data\\\":\\\"{\\\\n    \\\\\\\"items\\\\\\\": [\\\\n        {\\\\n            \\\\\\\"itemId\\\\\\\": 1657,\\\\n            \\\\\\\"name\\\\\\\": \\\\\\\"Smart WiFi Router\\\\\\\",\\\\n            \\\\\\\"price\\\\\\\": 2096,\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH\\\\\\\"\\\\n        }\\\\n    ],\\\\n    \\\\\\\"address\\\\\\\": \\\\\\\"95 Tarkiln Hill St.Laurel, MD 20707\\\\\\\"\\\\n}\\\",\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                }\n                            ]\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14717192996,\n                            \"folder\": \"9d1cb5bc-ad57-4975-aae9-297c4743ed68\",\n                            \"collection\": \"7732157#7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4\",\n                            \"id\": \"6316706f-cdbd-4a92-81d8-e89412f7a3e8\",\n                            \"name\": \"Get items from the database\",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": null,\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": \"# Get a list of items\\n\\nYou can use the `/items` endpoint to retrieve a list of items, you can indicate how many items to retrieve by changing the value of the `list` parameter in the query, e.g. to retrieve 3 items you can use\\n`{{baseUrl}}/items?list=3`. \",\n                            \"variables\": null,\n                            \"headers\": \"\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {},\n                            \"url\": \"{{baseUrl}}/items?list=10 \",\n                            \"preRequestScript\": null,\n                            \"tests\": null,\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [\n                                {\n                                    \"key\": \"list\",\n                                    \"value\": \"10 \",\n                                    \"equals\": true,\n                                    \"description\": \"Number of items to be displayed\",\n                                    \"enabled\": true\n                                }\n                            ],\n                            \"headerData\": [],\n                            \"pathVariableData\": [],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": false,\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T19:37:05.000Z\",\n                            \"responses\": [\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071871,\n                                    \"request\": \"6316706f-cdbd-4a92-81d8-e89412f7a3e8\",\n                                    \"id\": \"6b3b5a59-018c-4f21-a7ca-39832ef8c7aa\",\n                                    \"name\": \"OK - Successful pull of items\",\n                                    \"status\": \"OK\",\n                                    \"responseCode\": {\n                                        \"code\": 200,\n                                        \"name\": \"OK\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"[\\n    {\\n        \\\"itemId\\\": 1657,\\n        \\\"name\\\": \\\"Smart WiFi Router\\\",\\n        \\\"price\\\": 2096,\\n        \\\"description\\\": \\\"Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH\\\"\\n    },\\n    {\\n        \\\"itemId\\\": 1658,\\n        \\\"name\\\": \\\"VR Gaming Headset\\\",\\n        \\\"price\\\": 79990,\\n        \\\"description\\\": \\\"VR Gaming Headset puts you at the center of virtual reality's most pulse-pounding, PC-powered gameplay. See the action unfold all around you through our sharpest lenses and next-generation optics. Lose yourself in the experience with a comfortable, improved design that lets you start playing faster and keep playing longer. Insight tracking gives you the power to move throughout your playspace in any direction. No external sensors. No complicated setup. Just hands-on action and interaction with our updated Oculus Touch controllers right out of the box. Step into the game and the future of PC VR.\\\"\\n    },\\n    {\\n        \\\"itemId\\\": 1659,\\n        \\\"name\\\": \\\"Classic Loop Top Shaker Bottle, 20-Ounce\\\",\\n        \\\"price\\\": 578,\\n        \\\"description\\\": \\\"Easy to maintain proper nutrition and hydration on-the-go.The wide mouth makes it easy to add scoops of powdered mixes, meal ingredients, and liquids, and embossed markings show both ounces and milliliters for easy measuring anywhere (note that markings on the 20-ounce capacity shaker cup only go up to 12 ounces). Bottle contents and liquids are securely contained thanks to a tightly threaded screw-on lid that creates a leakproof seal, and a flip cap that snaps securely shut for shaking and transportation.\\\"\\n    },\\n    {\\n        \\\"itemId\\\": 1660,\\n        \\\"name\\\": \\\"4-Port USB 2.0 Hub\\\",\\n        \\\"price\\\": 505,\\n        \\\"description\\\": \\\"Easily add up to 4 devices with the USB 2.0 Hub. Particularly great for recent notebooks that provide a limited number of USB ports. Achieve full 480 Mbps on each port, or daisy-chain multiple hubs to a maximum of 127 devices.Fully backwards compatible with the USB 1.1 products.\\\"\\n    },\\n    {\\n        \\\"itemId\\\": 1661,\\n        \\\"name\\\": \\\"Wipes Flushable Wet Wipes Dispenser, Mint Chill, 48 Count (Pack of 3)\\\",\\n        \\\"price\\\": 938,\\n        \\\"description\\\": \\\"For a superior clean that’s fresh, gentle, and effective, choose Wipes with the CleaningRipples Texture. Wipes are 100 percent flushable, remove odor causing bacteria and offer a large, dual layer wipe to clean better than when using dry toilet paper alone.\\\"\\n    },\\n    {\\n        \\\"itemId\\\": 1662,\\n        \\\"name\\\": \\\"Cordless Vacuum Cleaner\\\",\\n        \\\"price\\\": 41893,\\n        \\\"description\\\": \\\"Twice the suction of any cord-free vacuum. Cord-free cleaning, made easier. Intelligently optimizes suction and run time, to deep clean everywhere. With fade-free battery power and a battery-saving trigger. And real-time reporting on the LCD screen to give you control of your clean. The Dynamic Load Sensor (DLS) system automatically changes the motor speed between carpets and hard floors. For deep cleaning across floor types.\\\"\\n    },\\n    {\\n        \\\"itemId\\\": 1663,\\n        \\\"name\\\": \\\"Hair Dryer\\\",\\n        \\\"price\\\": 1400,\\n        \\\"description\\\": \\\"Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%.\\\"\\n    },\\n    {\\n        \\\"itemId\\\": 1664,\\n        \\\"name\\\": \\\"Business Z27n G2 27 inch LED LCD Monitor\\\",\\n        \\\"price\\\": 24485,\\n        \\\"description\\\": \\\"Be a productive powerhouse with the sleek QHD HP Z27n G2 27-inch Display. This virtually seamless display is factory-tested for reliability and longevity with integrated color calibration, uninterrupted multi-screen tiling, and expansive device connections, including USB-C™. Multi-screen productivity with no disruptions Streamline multi-tasking on multiple displays with a 3-sided micro-edge bezel, and daisy chain up to 2 displays per workstation with DisplayPort™.\\\"\\n    },\\n    {\\n        \\\"itemId\\\": 1665,\\n        \\\"name\\\": \\\"Smart Watch\\\",\\n        \\\"price\\\": 1805,\\n        \\\"description\\\": \\\"Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data.\\\"\\n    },\\n    {\\n        \\\"itemId\\\": 1666,\\n        \\\"name\\\": \\\"Learning Thermostat, 3rd Gen, Smart Thermostat\\\",\\n        \\\"price\\\": 15746,\\n        \\\"description\\\": \\\"Learning Thermostat is a smart thermostat that learns what temperatures you like, turns itself down when you’re away and connects to your phone. It has a big, sharp display. And it’s proven to help save energy. In independent studies, the Thermostat saved an average of 10% to 12% on heating bills and 15% on cooling bills.\\\"\\n    },\\n    {\\n        \\\"itemId\\\": 16247,\\n        \\\"name\\\": \\\"Postman Merch\\\",\\n        \\\"price\\\": 15,\\n        \\\"description\\\": \\\"Official Merch for the Postman community.\\\"\\n    }\\n]\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"0e5a82f4-ade4-4448-91a9-42b2fc338bdc\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"url\\\":\\\"{{baseUrl}}/items?list=10\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"list\\\",\\\"value\\\":\\\"10\\\"}],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                }\n                            ]\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071747,\n                            \"folder\": \"9d1cb5bc-ad57-4975-aae9-297c4743ed68\",\n                            \"collection\": \"7732157#7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4\",\n                            \"id\": \"b2904734-bdfb-405d-b595-e80bcf89d336\",\n                            \"name\": \"Get item details from the database \",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": null,\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": \"# Get details of an item\\n\\nYou can retrieve the details of a single item that you know the id of by adding the `itemId` as a path variable, e.g. `{{baseUrl}}/items/1657`.\\n\\nAn item is represented as such:\\n```\\n{\\n  \\\"itemId\\\": 1010,\\n  \\\"name\\\": \\\"Item\\\",\\n  \\\"price\\\": 10,\\n  \\\"description\\\": \\\"Long description of the item\\\"\\n}\\n```\",\n                            \"variables\": null,\n                            \"headers\": \"\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {\n                                \"itemId\": \"\"\n                            },\n                            \"url\": \"{{baseUrl}}/items/:itemId\",\n                            \"preRequestScript\": null,\n                            \"tests\": null,\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [],\n                            \"headerData\": [],\n                            \"pathVariableData\": [\n                                {\n                                    \"id\": \"b42e19a7-ff40-4535-ba90-8e390adf2bdc\",\n                                    \"key\": \"itemId\",\n                                    \"value\": \"\",\n                                    \"type\": \"string\"\n                                }\n                            ],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"responses\": [\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071869,\n                                    \"request\": \"b2904734-bdfb-405d-b595-e80bcf89d336\",\n                                    \"id\": \"72032385-5bef-4785-b3db-a48517f85a2f\",\n                                    \"name\": \"Get item details from the database - Postman Merch\",\n                                    \"status\": \"OK\",\n                                    \"responseCode\": {\n                                        \"code\": 200,\n                                        \"name\": \"OK\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"description\": \"\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"{\\n    \\\"itemId\\\": 16247,\\n    \\\"name\\\": \\\"Postman Merch\\\",\\n    \\\"price\\\": 15,\\n    \\\"description\\\": \\\"Official T-shirt for the Postman community.\\\"\\n}\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"7a7b46dd-8746-4a2f-8226-453ea4d60c57\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{\\\"itemId\\\":\\\"16247\\\"},\\\"url\\\":\\\"https://fffc2eb4-dbcf-4c6d-bc30-c3cb2e7ecfa6.mock.pstmn.io/items/:itemId\\\",\\\"pathVariableData\\\":[{\\\"key\\\":\\\"itemId\\\",\\\"value\\\":\\\"16247\\\",\\\"description\\\":\\\"(Required) Id of the item to pull details of\\\"}],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                },\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071868,\n                                    \"request\": \"b2904734-bdfb-405d-b595-e80bcf89d336\",\n                                    \"id\": \"a1e90a07-62bd-4835-943a-8a2fa4d1db35\",\n                                    \"name\": \"OK - Successfully obtained order details\",\n                                    \"status\": \"OK\",\n                                    \"responseCode\": {\n                                        \"code\": 200,\n                                        \"name\": \"OK\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"{\\n    \\\"itemId\\\": 1657,\\n    \\\"name\\\": \\\"Smart WiFi Router\\\",\\n    \\\"price\\\": 2096,\\n    \\\"description\\\": \\\"Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH\\\"\\n}\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"62c998ec-4d48-4778-9627-033ec4506382\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{\\\"itemId\\\":\\\"\\\"},\\\"url\\\":\\\"{{baseUrl}}/items/:itemId\\\",\\\"pathVariableData\\\":[{\\\"key\\\":\\\"itemId\\\",\\\"value\\\":\\\"\\\"}],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                },\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071864,\n                                    \"request\": \"b2904734-bdfb-405d-b595-e80bcf89d336\",\n                                    \"id\": \"a4c1dd21-efbf-4c7e-b91a-f9d20a1fcf6d\",\n                                    \"name\": \"Bad Request - Invalid item ID supplied\",\n                                    \"status\": \"Bad Request\",\n                                    \"responseCode\": {\n                                        \"code\": 400,\n                                        \"name\": \"Bad Request\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"text/plain\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"{\\n\\t\\\"error\\\": {\\n\\t\\t\\\"message\\\": \\\"Provided Id is invalid\\\"\\n\\t}\\n}\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"b88eaf11-62ed-4720-960f-ea98c00e630f\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{\\\"itemId\\\":\\\"invalid_id\\\"},\\\"url\\\":\\\"{{baseUrl}}/items/:itemId\\\",\\\"pathVariableData\\\":[{\\\"key\\\":\\\"itemId\\\",\\\"value\\\":\\\"invalid_id\\\"}],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                },\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071870,\n                                    \"request\": \"b2904734-bdfb-405d-b595-e80bcf89d336\",\n                                    \"id\": \"af8c0897-bcb6-4468-a95a-a41e80a7768d\",\n                                    \"name\": \"Not Found - Item not found\",\n                                    \"status\": \"Not Found\",\n                                    \"responseCode\": {\n                                        \"code\": 404,\n                                        \"name\": \"Not Found\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"text/plain\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"{\\n\\t\\\"error\\\": {\\n\\t\\t\\\"message\\\": \\\"The item you are looking for, does not exist\\\"\\n\\t}\\n}\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"24d0608f-35f0-41af-83ba-02a33703768b\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{},\\\"url\\\":\\\"{{baseUrl}}/items/:itemId\\\",\\\"pathVariableData\\\":[{\\\"key\\\":\\\"itemId\\\"}],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                }\n                            ]\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071750,\n                            \"folder\": \"706cf457-8a17-4b91-a606-7875d9561e90\",\n                            \"collection\": \"7732157#7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4\",\n                            \"id\": \"e92d2df6-d482-40a5-b8b5-ba8ca0ee2b20\",\n                            \"name\": \"Get order details from database\",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": null,\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": \"## Get details of an order\\n\\nYou can retrieve the details of an order that you know the id by adding the order number as a path variable, e.g. `{{baseUrl}}/orders/674`.\\n\\nAn order is represented as such:\\n```json\\n{\\n  \\\"orderId\\\": 10,\\n  \\\"items\\\": [\\n    {\\n      \\\"itemId\\\": 1010,\\n      \\\"name\\\": \\\"Order name\\\",\\n      \\\"price\\\": 10,\\n      \\\"description\\\": \\\"Long description of the item\\\"\\n    }\\n  ],\\n  \\\"arrivalDate\\\": \\\"2020-03-05T14:07:01.688Z\\\",\\n  \\\"orderDate\\\": \\\"2020-03-03T04:58:18.504Z\\\",\\n  \\\"orderTotal\\\": 10,\\n  \\\"address\\\": \\\"Delivery address\\\"\\n}\\n```\",\n                            \"variables\": null,\n                            \"headers\": \"\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {\n                                \"orderId\": \"\"\n                            },\n                            \"url\": \"{{baseUrl}}/orders/:orderId\",\n                            \"preRequestScript\": null,\n                            \"tests\": null,\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [],\n                            \"headerData\": [],\n                            \"pathVariableData\": [\n                                {\n                                    \"id\": \"bbea0f51-0f5d-40a9-aa73-e7a3fee35828\",\n                                    \"key\": \"orderId\",\n                                    \"value\": \"\",\n                                    \"type\": \"string\"\n                                }\n                            ],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"responses\": [\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071874,\n                                    \"request\": \"e92d2df6-d482-40a5-b8b5-ba8ca0ee2b20\",\n                                    \"id\": \"22ea3d09-2e7c-4d6b-84f3-c70de68b3e21\",\n                                    \"name\": \"Not Found - Order not found\",\n                                    \"status\": \"Not Found\",\n                                    \"responseCode\": {\n                                        \"code\": 404,\n                                        \"name\": \"Not Found\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"text/plain\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"{\\n\\t\\\"error\\\": {\\n\\t\\t\\\"message\\\": \\\"The order you are looking for does not exist\\\"\\n\\t}\\n}\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"74da501b-22e4-48c5-976f-9efa89fa860e\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{\\\"orderId\\\":\\\"1\\\"},\\\"url\\\":\\\"{{baseUrl}}/orders/:orderId\\\",\\\"pathVariableData\\\":[{\\\"key\\\":\\\"orderId\\\",\\\"value\\\":\\\"1\\\"}],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                },\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071892,\n                                    \"request\": \"e92d2df6-d482-40a5-b8b5-ba8ca0ee2b20\",\n                                    \"id\": \"623a1b4a-70cd-4566-82f4-e6ac669daadc\",\n                                    \"name\": \"Bad Request - Invalid order ID supplied\",\n                                    \"status\": \"Bad Request\",\n                                    \"responseCode\": {\n                                        \"code\": 400,\n                                        \"name\": \"Bad Request\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"text/plain\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"{\\n\\t\\\"error\\\": {\\n\\t\\t\\\"message\\\": \\\"Invalid id is provided.\\\"\\n\\t}\\n}\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"7070cee0-a1bb-4b47-b0af-f2de06002eca\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{\\\"orderId\\\":\\\"674\\\"},\\\"url\\\":\\\"{{baseUrl}}/orders/:orderId\\\",\\\"pathVariableData\\\":[{\\\"key\\\":\\\"orderId\\\",\\\"value\\\":\\\"674\\\"}],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                },\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071891,\n                                    \"request\": \"e92d2df6-d482-40a5-b8b5-ba8ca0ee2b20\",\n                                    \"id\": \"6bef9b9d-ccdb-4daf-b79a-6d8f57e1a4b1\",\n                                    \"name\": \"OK - Successfully obtained order details\",\n                                    \"status\": \"OK\",\n                                    \"responseCode\": {\n                                        \"code\": 200,\n                                        \"name\": \"OK\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"{\\n \\\"orderId\\\": 674,\\n \\\"items\\\": {\\n  \\\"itemId\\\": 1657,\\n  \\\"name\\\": \\\"Smart WiFi Router\\\",\\n  \\\"price\\\": 2096,\\n  \\\"description\\\": \\\"Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH\\\"\\n },\\n \\\"arrivalDate\\\": \\\"2020-3-04T13:07:45.962Z\\\",\\n \\\"orderDate\\\": \\\"2020-03-06T19:27:26.733Z\\\",\\n \\\"orderTotal\\\": 2096,\\n \\\"address\\\": \\\"95 Tarkiln Hill St.Laurel, MD 20707\\\"\\n}\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"b62ccaa0-0c61-42dd-b200-8872af3b5b4a\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{\\\"orderId\\\":\\\"674\\\"},\\\"url\\\":\\\"{{baseUrl}}/orders/:orderId\\\",\\\"pathVariableData\\\":[{\\\"key\\\":\\\"orderId\\\",\\\"value\\\":\\\"674\\\"}],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                },\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071890,\n                                    \"request\": \"e92d2df6-d482-40a5-b8b5-ba8ca0ee2b20\",\n                                    \"id\": \"74cd9137-7b55-4fa0-b8f4-c554ba62ef36\",\n                                    \"name\": \"Ok - Postman Merch\",\n                                    \"status\": \"OK\",\n                                    \"responseCode\": {\n                                        \"code\": 200,\n                                        \"name\": \"OK\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\",\n                                            \"description\": \"\",\n                                            \"type\": \"text\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"{\\n    \\\"orderId\\\": 656,\\n    \\\"items\\\": [\\n        {\\n            \\\"itemId\\\": 16247,\\n            \\\"name\\\": \\\"Postman Merch\\\",\\n            \\\"price\\\": 15,\\n            \\\"description\\\": \\\"Official Merch for the Postman community.\\\"\\n        }\\n    ],\\n    \\\"arrivalDate\\\": \\\"2020-3-04T13:07:45.962Z\\\",\\n    \\\"orderDate\\\": \\\"2020-03-06T19:27:26.733Z\\\",\\n    \\\"orderTotal\\\": 15,\\n    \\\"address\\\": \\\"SimpleKart HQ, 221B Baker street\\\"\\n}\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"419f370d-bef1-4dec-8aaf-66353e49b2d3\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{\\\"orderId\\\":\\\"656\\\"},\\\"url\\\":\\\"{{baseUrl}}/orders/:orderId\\\",\\\"pathVariableData\\\":[{\\\"key\\\":\\\"orderId\\\",\\\"value\\\":\\\"656\\\"}],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                },\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071873,\n                                    \"request\": \"e92d2df6-d482-40a5-b8b5-ba8ca0ee2b20\",\n                                    \"id\": \"e84aa9c9-db4c-42d4-af3b-672e6418d14a\",\n                                    \"name\": \"403 Forbidden\",\n                                    \"status\": \"Forbidden\",\n                                    \"responseCode\": {\n                                        \"code\": 403,\n                                        \"name\": \"Forbidden\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"{\\n\\t\\\"error\\\":\\\"Forbidden\\\"\\n}\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"40e56917-e3fa-4064-9b68-cd906bf0551c\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"url\\\":\\\"{{baseUrl}}/orders/70938243034498\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"7732157-37350b62-41f3-428a-8bd5-fec517bb4f43\": {\n                    \"owner\": \"7732157\",\n                    \"lastUpdatedBy\": \"7732157\",\n                    \"lastRevision\": 14716072072,\n                    \"team\": null,\n                    \"id\": \"37350b62-41f3-428a-8bd5-fec517bb4f43\",\n                    \"name\": \"SimpleKart Security Tests\",\n                    \"description\": \"API for an imaginary E-Commerce store to demonstrate API Builder capabilities in Postman\\n\\nContact Support:\\n Name: Postman Team\\n Email: simplekart@postman.com\",\n                    \"variables\": [\n                        {\n                            \"id\": \"baseUrl\",\n                            \"key\": \"baseUrl\",\n                            \"value\": \"https://api.simplekart.com\",\n                            \"type\": \"string\",\n                            \"enabled\": true\n                        }\n                    ],\n                    \"auth\": null,\n                    \"events\": null,\n                    \"remote_id\": \"0\",\n                    \"remoteLink\": null,\n                    \"folders_order\": [\n                        \"0650fd8c-7bf4-42f7-9a73-32c7def1a66e\",\n                        \"31c8a397-c527-4abf-9bc2-d02955cd6e79\"\n                    ],\n                    \"order\": [],\n                    \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\",\n                    \"folders\": [\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716072019,\n                            \"collection\": \"7732157#37350b62-41f3-428a-8bd5-fec517bb4f43\",\n                            \"folder\": null,\n                            \"id\": \"0650fd8c-7bf4-42f7-9a73-32c7def1a66e\",\n                            \"name\": \"items\",\n                            \"description\": null,\n                            \"variables\": null,\n                            \"auth\": null,\n                            \"events\": null,\n                            \"order\": [\n                                \"9bdb5a86-aad1-4125-ac2b-ed548ed55420\",\n                                \"bbfeacec-1e78-4c38-b454-a4e7b5e6e45f\"\n                            ],\n                            \"folders_order\": [],\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716072020,\n                            \"collection\": \"7732157#37350b62-41f3-428a-8bd5-fec517bb4f43\",\n                            \"folder\": null,\n                            \"id\": \"31c8a397-c527-4abf-9bc2-d02955cd6e79\",\n                            \"name\": \"orders\",\n                            \"description\": null,\n                            \"variables\": null,\n                            \"auth\": null,\n                            \"events\": null,\n                            \"order\": [\n                                \"98be4992-416b-414c-904a-7622b801be3a\",\n                                \"df9b22bf-c5f5-42c3-b7f3-37fac04d6f40\",\n                                \"52cff28d-8d30-475e-a54c-8cd91ce36ae5\"\n                            ],\n                            \"folders_order\": [],\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                        }\n                    ],\n                    \"requests\": [\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071689,\n                            \"folder\": \"31c8a397-c527-4abf-9bc2-d02955cd6e79\",\n                            \"collection\": \"7732157#37350b62-41f3-428a-8bd5-fec517bb4f43\",\n                            \"id\": \"52cff28d-8d30-475e-a54c-8cd91ce36ae5\",\n                            \"name\": \"Get order details from database\",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"bd36543b-ff7d-4387-90f3-2bb2331e31cf\",\n                                        \"exec\": [\n                                            \"var jsonData = pm.response.json();\",\n                                            \"\",\n                                            \"/* \",\n                                            \"\",\n                                            \"    [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.\",\n                                            \"\",\n                                            \"*/\",\n                                            \"pm.test(\\\"Strict-Transport-Security header is present\\\", function () {\",\n                                            \"    pm.response.to.have.header(\\\"strict-transport-security\\\");\",\n                                            \"});\",\n                                            \"\",\n                                            \"\",\n                                            \"/*\",\n                                            \"\",\n                                            \"    [+] Check for Broken Access Control: Insecure Direct Object Reference or IDOR occurs when user input is taken and is used to retrieve an internal object such as a file without performing sufficient authorization. Here, the attacker can then make changes in the references to get access to unauthorized data.\",\n                                            \"    \",\n                                            \"*/\",\n                                            \"\",\n                                            \"pm.test(\\\"IDOR: Status code should be 403\\\", function () {\",\n                                            \"    pm.response.to.have.status(403);\",\n                                            \"});\",\n                                            \"\",\n                                            \"/* \",\n                                            \"\",\n                                            \"    [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.\",\n                                            \"\",\n                                            \"*/\",\n                                            \"if(pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\"))\",\n                                            \"{ \",\n                                            \"    let headerValue = pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\");\",\n                                            \"    if(headerValue === \\\"*\\\" || headerValue === pm.environment.get(\\\"origin\\\"))\",\n                                            \"    pm.test(\\\"Misconfigured Cross-Origin Resource Sharing\\\");\",\n                                            \"}\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                },\n                                {\n                                    \"listen\": \"prerequest\",\n                                    \"script\": {\n                                        \"id\": \"6c363bfe-7061-4bfb-85c3-5c21535ab33d\",\n                                        \"exec\": [\n                                            \"let victimOrderID = pm.environment.get(\\\"victimOrderID\\\");\",\n                                            \"pm.environment.set(\\\"orderID\\\", victimOrderID);\",\n                                            \"pm.environment.set(\\\"origin\\\", \\\"https://www.evil.com\\\");\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": \"Obtain item details from the database\",\n                            \"variables\": null,\n                            \"headers\": \"Origin: {{origin}}\\n\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {},\n                            \"url\": \"https://simplekart.postman.com/orders/{{orderID}}\",\n                            \"preRequestScript\": \"let victimOrderID = pm.environment.get(\\\"victimOrderID\\\");\\npm.environment.set(\\\"orderID\\\", victimOrderID);\\npm.environment.set(\\\"origin\\\", \\\"https://www.evil.com\\\");\",\n                            \"tests\": \"var jsonData = pm.response.json();\\n\\n/* \\n\\n    [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.\\n\\n*/\\npm.test(\\\"Strict-Transport-Security header is present\\\", function () {\\n    pm.response.to.have.header(\\\"strict-transport-security\\\");\\n});\\n\\n\\n/*\\n\\n    [+] Check for Broken Access Control: Insecure Direct Object Reference or IDOR occurs when user input is taken and is used to retrieve an internal object such as a file without performing sufficient authorization. Here, the attacker can then make changes in the references to get access to unauthorized data.\\n    \\n*/\\n\\npm.test(\\\"IDOR: Status code should be 403\\\", function () {\\n    pm.response.to.have.status(403);\\n});\\n\\n/* \\n\\n    [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.\\n\\n*/\\nif(pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\"))\\n{ \\n    let headerValue = pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\");\\n    if(headerValue === \\\"*\\\" || headerValue === pm.environment.get(\\\"origin\\\"))\\n    pm.test(\\\"Misconfigured Cross-Origin Resource Sharing\\\");\\n}\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [],\n                            \"headerData\": [\n                                {\n                                    \"key\": \"Origin\",\n                                    \"value\": \"{{origin}}\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"pathVariableData\": [],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"responses\": [\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071796,\n                                    \"request\": \"52cff28d-8d30-475e-a54c-8cd91ce36ae5\",\n                                    \"id\": \"4e7f0f52-8e29-4b7c-b1e5-eef62b155b78\",\n                                    \"name\": \"Bad Request - Invalid order ID supplied\",\n                                    \"status\": \"Bad Request\",\n                                    \"responseCode\": {\n                                        \"code\": 400,\n                                        \"name\": \"Bad Request\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"text/plain\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"\",\n                                    \"language\": \"text\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"786f711c-0479-4e58-8d77-0fe3a303de69\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{\\\"orderId\\\":\\\"674\\\"},\\\"url\\\":\\\"{{baseUrl}}/orders/:orderId\\\",\\\"pathVariableData\\\":[{\\\"key\\\":\\\"orderId\\\",\\\"value\\\":\\\"674\\\"}],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                },\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071797,\n                                    \"request\": \"52cff28d-8d30-475e-a54c-8cd91ce36ae5\",\n                                    \"id\": \"6843a173-0ab0-492b-b285-c589ef02a36e\",\n                                    \"name\": \"OK - Successfully obtained order details\",\n                                    \"status\": \"OK\",\n                                    \"responseCode\": {\n                                        \"code\": 200,\n                                        \"name\": \"OK\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"{\\n \\\"orderId\\\": 674,\\n \\\"items\\\": {\\n  \\\"itemId\\\": 1657,\\n  \\\"name\\\": \\\"Smart WiFi Router\\\",\\n  \\\"price\\\": 2096,\\n  \\\"description\\\": \\\"Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH\\\"\\n },\\n \\\"arrivalDate\\\": \\\"2020-3-04T13:07:45.962Z\\\",\\n \\\"orderDate\\\": \\\"2020-03-06T19:27:26.733Z\\\",\\n \\\"orderTotal\\\": 2096,\\n \\\"address\\\": \\\"95 Tarkiln Hill St.Laurel, MD 20707\\\"\\n}\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"960e5030-83ce-4181-a46e-434131840732\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{\\\"orderId\\\":\\\"674\\\"},\\\"url\\\":\\\"{{baseUrl}}/orders/:orderId\\\",\\\"pathVariableData\\\":[{\\\"key\\\":\\\"orderId\\\",\\\"value\\\":\\\"674\\\"}],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                },\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071799,\n                                    \"request\": \"52cff28d-8d30-475e-a54c-8cd91ce36ae5\",\n                                    \"id\": \"76844289-b370-4eba-98b1-7032b83d8e47\",\n                                    \"name\": \"403 Forbidden\",\n                                    \"status\": \"Forbidden\",\n                                    \"responseCode\": {\n                                        \"code\": 403,\n                                        \"name\": \"Forbidden\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Cache-Control\",\n                                            \"value\": \"no-cache, no-store, max-age=0, must-revalidate\"\n                                        },\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json;charset=UTF-8\"\n                                        },\n                                        {\n                                            \"key\": \"Date\",\n                                            \"value\": \"Mon, 06 Apr 2020 05:37:48 GMT\"\n                                        },\n                                        {\n                                            \"key\": \"Expires\",\n                                            \"value\": \"0\"\n                                        },\n                                        {\n                                            \"key\": \"Pragma\",\n                                            \"value\": \"no-cache\"\n                                        },\n                                        {\n                                            \"key\": \"Server\",\n                                            \"value\": \"nginx\"\n                                        },\n                                        {\n                                            \"key\": \"Strict-Transport-Security\",\n                                            \"value\": \"max-age=31536000 ; includeSubDomains\"\n                                        },\n                                        {\n                                            \"key\": \"WWW-Authenticate\",\n                                            \"value\": \"Basic realm=\\\"Realm\\\"\"\n                                        },\n                                        {\n                                            \"key\": \"X-Content-Type-Options\",\n                                            \"value\": \"nosniff\"\n                                        },\n                                        {\n                                            \"key\": \"X-Frame-Options\",\n                                            \"value\": \"DENY\"\n                                        },\n                                        {\n                                            \"key\": \"X-XSS-Protection\",\n                                            \"value\": \"1; mode=block\"\n                                        },\n                                        {\n                                            \"key\": \"Content-Length\",\n                                            \"value\": \"120\"\n                                        },\n                                        {\n                                            \"key\": \"Connection\",\n                                            \"value\": \"keep-alive\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"{\\n    \\\"status\\\": 403,\\n    \\\"error\\\": \\\"Forbidden\\\"\\n}\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"8b56ea13-1778-4a06-bc75-27317dc84d57\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"Origin: {{origin}}\\\",\\\"url\\\":\\\"https://simplekart.postman-beta.com/orders/70938243034498\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[],\\\"headerData\\\":[{\\\"key\\\":\\\"Origin\\\",\\\"value\\\":\\\"{{origin}}\\\",\\\"type\\\":\\\"text\\\"}],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                },\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071802,\n                                    \"request\": \"52cff28d-8d30-475e-a54c-8cd91ce36ae5\",\n                                    \"id\": \"818b5dde-2c7b-4d47-bbf6-9ff6e0e484e0\",\n                                    \"name\": \"Not Found - Order not found\",\n                                    \"status\": \"Not Found\",\n                                    \"responseCode\": {\n                                        \"code\": 404,\n                                        \"name\": \"Not Found\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"text/plain\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"\",\n                                    \"language\": \"text\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"aabf7c7b-aaf3-4e7b-b309-42ed33d507fc\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{},\\\"url\\\":\\\"{{baseUrl}}/orders/:orderId\\\",\\\"pathVariableData\\\":[{\\\"key\\\":\\\"orderId\\\"}],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                }\n                            ]\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071686,\n                            \"folder\": \"31c8a397-c527-4abf-9bc2-d02955cd6e79\",\n                            \"collection\": \"7732157#37350b62-41f3-428a-8bd5-fec517bb4f43\",\n                            \"id\": \"98be4992-416b-414c-904a-7622b801be3a\",\n                            \"name\": \"Get orders from the database \",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"40912505-d39f-48f5-8c21-bb910be85229\",\n                                        \"exec\": [\n                                            \"var jsonData = pm.response.json();\",\n                                            \"let responseSize = jsonData.length;\",\n                                            \"\",\n                                            \"/* \",\n                                            \"    \",\n                                            \"    [+] Check for Parameter Tampering: An attacker can manipulate parameters sent in API requests to exploit the backend processing. Conceptually, when the attacker changes the input value from x to y and the server processes it, then the service will be vulnerable to parameter tampering. \",\n                                            \"    \",\n                                            \"*/\",\n                                            \"if(responseSize === parseInt(pm.environment.get(\\\"orderListValue\\\")))\",\n                                            \"    pm.test(\\\"Unexpected number of items fetched\\\");\",\n                                            \"else\",\n                                            \"    pm.test(\\\"Expected number of items fetched\\\");\",\n                                            \"\",\n                                            \"/* \",\n                                            \"\",\n                                            \"    [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.\",\n                                            \"\",\n                                            \"*/\",\n                                            \"pm.test(\\\"Strict-Transport-Security header is present\\\", function () {\",\n                                            \"    pm.response.to.have.header(\\\"strict-transport-security\\\");\",\n                                            \"});\",\n                                            \"\",\n                                            \"/* \",\n                                            \"\",\n                                            \"    [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.\",\n                                            \"\",\n                                            \"*/\",\n                                            \"if(pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\"))\",\n                                            \"{ \",\n                                            \"    let headerValue = pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\");\",\n                                            \"    if(headerValue === \\\"*\\\" || headerValue === pm.environment.get(\\\"origin\\\"))\",\n                                            \"    pm.test(\\\"Misconfigured Cross-Origin Resource Sharing\\\");\",\n                                            \"}\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                },\n                                {\n                                    \"listen\": \"prerequest\",\n                                    \"script\": {\n                                        \"id\": \"10d904c5-7939-4976-ad39-69b60b84e0f8\",\n                                        \"exec\": [\n                                            \"pm.environment.set(\\\"origin\\\", \\\"https://www.evil.com\\\");\",\n                                            \"let evilValue = pm.environment.get(\\\"evilValue\\\");\",\n                                            \"pm.environment.set(\\\"orderListValue\\\", evilValue);\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": \"Obtain order details from orders database\",\n                            \"variables\": null,\n                            \"headers\": \"Origin: {{origin}}\\n\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {},\n                            \"url\": \"https://simplekart.postman.com/orders?list={{orderListValue}}\",\n                            \"preRequestScript\": \"pm.environment.set(\\\"origin\\\", \\\"https://www.evil.com\\\");\\nlet evilValue = pm.environment.get(\\\"evilValue\\\");\\npm.environment.set(\\\"orderListValue\\\", evilValue);\",\n                            \"tests\": \"var jsonData = pm.response.json();\\nlet responseSize = jsonData.length;\\n\\n/* \\n    \\n    [+] Check for Parameter Tampering: An attacker can manipulate parameters sent in API requests to exploit the backend processing. Conceptually, when the attacker changes the input value from x to y and the server processes it, then the service will be vulnerable to parameter tampering. \\n    \\n*/\\nif(responseSize === parseInt(pm.environment.get(\\\"orderListValue\\\")))\\n    pm.test(\\\"Unexpected number of items fetched\\\");\\nelse\\n    pm.test(\\\"Expected number of items fetched\\\");\\n\\n/* \\n\\n    [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.\\n\\n*/\\npm.test(\\\"Strict-Transport-Security header is present\\\", function () {\\n    pm.response.to.have.header(\\\"strict-transport-security\\\");\\n});\\n\\n/* \\n\\n    [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.\\n\\n*/\\nif(pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\"))\\n{ \\n    let headerValue = pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\");\\n    if(headerValue === \\\"*\\\" || headerValue === pm.environment.get(\\\"origin\\\"))\\n    pm.test(\\\"Misconfigured Cross-Origin Resource Sharing\\\");\\n}\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [\n                                {\n                                    \"key\": \"list\",\n                                    \"value\": \"{{orderListValue}}\",\n                                    \"description\": \"Number of orders to show\"\n                                }\n                            ],\n                            \"headerData\": [\n                                {\n                                    \"key\": \"Origin\",\n                                    \"value\": \"{{origin}}\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"pathVariableData\": [],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"responses\": [\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071789,\n                                    \"request\": \"98be4992-416b-414c-904a-7622b801be3a\",\n                                    \"id\": \"92c1b548-80a0-4f9e-b7a7-a46dda61c603\",\n                                    \"name\": \"OK - Successful pull of orders\",\n                                    \"status\": \"OK\",\n                                    \"responseCode\": {\n                                        \"code\": 200,\n                                        \"name\": \"OK\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"[\\n {\\n  \\\"orderId\\\": 674,\\n  \\\"items\\\": {\\n   \\\"itemId\\\": 1657,\\n   \\\"name\\\": \\\"Smart WiFi Router\\\",\\n   \\\"price\\\": 2096,\\n   \\\"description\\\": \\\"Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH\\\"\\n  },\\n  \\\"arrivalDate\\\": \\\"2020-03-03T13:07:45.962Z\\\",\\n  \\\"orderDate\\\": \\\"2020-03-01T19:27:26.733Z\\\",\\n  \\\"orderTotal\\\": 2096,\\n  \\\"address\\\": \\\"95 Tarkiln Hill St.Laurel, MD 20707\\\"\\n },\\n {\\n  \\\"orderId\\\": 675,\\n  \\\"items\\\": {\\n   \\\"itemId\\\": 1658,\\n   \\\"name\\\": \\\"VR Gaming Headset\\\",\\n   \\\"price\\\": 79990,\\n   \\\"description\\\": \\\"VR Gaming Headset puts you at the center of virtual reality's most pulse-pounding, PC-powered gameplay. See the action unfold all around you through our sharpest lenses and next-generation optics. Lose yourself in the experience with a comfortable, improved design that lets you start playing faster and keep playing longer. Insight tracking gives you the power to move throughout your playspace in any direction. No external sensors. No complicated setup. Just hands-on action and interaction with our updated Oculus Touch controllers right out of the box. Step into the game and the future of PC VR.\\\"\\n  },\\n  \\\"arrivalDate\\\": \\\"2020-03-03T15:00:56.787Z\\\",\\n  \\\"orderDate\\\": \\\"2020-03-02T21:25:22.096Z\\\",\\n  \\\"orderTotal\\\": 79990,\\n  \\\"address\\\": \\\"7405 Arcadia St.Rockville, MD 20850\\\"\\n },\\n {\\n  \\\"orderId\\\": 676,\\n  \\\"items\\\": {\\n   \\\"itemId\\\": 1665,\\n   \\\"name\\\": \\\"Smart Watch\\\",\\n   \\\"price\\\": 1805,\\n   \\\"description\\\": \\\"Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data.\\\"\\n  },\\n  \\\"arrivalDate\\\": \\\"2020-03-05T17:30:15.156Z\\\",\\n  \\\"orderDate\\\": \\\"2020-03-03T01:10:27.512Z\\\",\\n  \\\"orderTotal\\\": 1805,\\n  \\\"address\\\": \\\"9791 Lawrence Dr.Marlton, NJ 08053r\\\"\\n },\\n {\\n  \\\"orderId\\\": 677,\\n  \\\"items\\\": {\\n   \\\"itemId\\\": 1659,\\n   \\\"name\\\": \\\"Classic Loop Top Shaker Bottle, 20-Ounce\\\",\\n   \\\"price\\\": 578,\\n   \\\"description\\\": \\\"Easy to maintain proper nutrition and hydration on-the-go.The wide mouth makes it easy to add scoops of powdered mixes, meal ingredients, and liquids, and embossed markings show both ounces and milliliters for easy measuring anywhere (note that markings on the 20-ounce capacity shaker cup only go up to 12 ounces). Bottle contents and liquids are securely contained thanks to a tightly threaded screw-on lid that creates a leakproof seal, and a flip cap that snaps securely shut for shaking and transportation.\\\"\\n  },\\n  \\\"arrivalDate\\\": \\\"2020-03-03T18:16:24.911Z\\\",\\n  \\\"orderDate\\\": \\\"2020-03-01T06:09:23.007Z\\\",\\n  \\\"orderTotal\\\": 578,\\n  \\\"address\\\": \\\"822 Clay St.Tampa, FL 33604\\\"\\n },\\n {\\n  \\\"orderId\\\": 678,\\n  \\\"items\\\": {\\n   \\\"itemId\\\": 1663,\\n   \\\"name\\\": \\\"Hair Dryer\\\",\\n   \\\"price\\\": 1400,\\n   \\\"description\\\": \\\"Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%.\\\"\\n  },\\n  \\\"arrivalDate\\\": \\\"2020-03-04T12:09:07.955Z\\\",\\n  \\\"orderDate\\\": \\\"2020-03-02T21:50:44.173Z\\\",\\n  \\\"orderTotal\\\": 1400,\\n  \\\"address\\\": \\\"7444 SW. State Ave.Philadelphia, PA 19111\\\"\\n },\\n {\\n  \\\"orderId\\\": 679,\\n  \\\"items\\\": {\\n   \\\"itemId\\\": 1660,\\n   \\\"name\\\": \\\"4-Port USB 2.0 Hub\\\",\\n   \\\"price\\\": 505,\\n   \\\"description\\\": \\\"Easily add up to 4 devices with the USB 2.0 Hub. Particularly great for recent notebooks that provide a limited number of USB ports. Achieve full 480 Mbps on each port, or daisy-chain multiple hubs to a maximum of 127 devices.Fully backwards compatible with the USB 1.1 products.\\\"\\n  },\\n  \\\"arrivalDate\\\": \\\"2020-03-04T11:29:56.99Z\\\",\\n  \\\"orderDate\\\": \\\"2020-03-03T00:51:26.19Z\\\",\\n  \\\"orderTotal\\\": 505,\\n  \\\"address\\\": \\\"307 Purple Finch Ave.New Lenox, IL 60451\\\"\\n },\\n {\\n  \\\"orderId\\\": 680,\\n  \\\"items\\\": {\\n   \\\"itemId\\\": 1661,\\n   \\\"name\\\": \\\"Wipes Flushable Wet Wipes Dispenser, Mint Chill, 48 Count (Pack of 3)\\\",\\n   \\\"price\\\": 938,\\n   \\\"description\\\": \\\"For a superior clean that’s fresh, gentle, and effective, choose Wipes with the CleaningRipples Texture. Wipes are 100 percent flushable, remove odor causing bacteria and offer a large, dual layer wipe to clean better than when using dry toilet paper alone.\\\"\\n  },\\n  \\\"arrivalDate\\\": \\\"2020-03-04T02:06:58.886Z\\\",\\n  \\\"orderDate\\\": \\\"2020-03-02T04:33:52.652Z\\\",\\n  \\\"orderTotal\\\": 938,\\n  \\\"address\\\": \\\"946 Holly StreetHamilton, OH 45011\\\"\\n },\\n {\\n  \\\"orderId\\\": 681,\\n  \\\"items\\\": {\\n   \\\"itemId\\\": 1663,\\n   \\\"name\\\": \\\"Hair Dryer\\\",\\n   \\\"price\\\": 1400,\\n   \\\"description\\\": \\\"Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%.\\\"\\n  },\\n  \\\"arrivalDate\\\": \\\"2020-03-04T17:26:07.706Z\\\",\\n  \\\"orderDate\\\": \\\"2020-03-02T04:17:23.689Z\\\",\\n  \\\"orderTotal\\\": 1400,\\n  \\\"address\\\": \\\"8924 East Birchwood St.Hamburg, NY 14075\\\"\\n },\\n {\\n  \\\"orderId\\\": 682,\\n  \\\"items\\\": {\\n   \\\"itemId\\\": 1665,\\n   \\\"name\\\": \\\"Smart Watch\\\",\\n   \\\"price\\\": 1805,\\n   \\\"description\\\": \\\"Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data.\\\"\\n  },\\n  \\\"arrivalDate\\\": \\\"2020-03-05T14:07:01.688Z\\\",\\n  \\\"orderDate\\\": \\\"2020-03-03T04:58:18.504Z\\\",\\n  \\\"orderTotal\\\": 1805,\\n  \\\"address\\\": \\\"10 Wilson LaneBay City, MI 48706\\\"\\n },\\n {\\n  \\\"orderId\\\": 683,\\n  \\\"items\\\": {\\n   \\\"itemId\\\": 1666,\\n   \\\"name\\\": \\\"Learning Thermostat, 3rd Gen, Smart Thermostat\\\",\\n   \\\"price\\\": 15746,\\n   \\\"description\\\": \\\"Learning Thermostat is a smart thermostat that learns what temperatures you like, turns itself down when you’re away and connects to your phone. It has a big, sharp display. And it’s proven to help save energy. In independent studies, the Thermostat saved an average of 10% to 12% on heating bills and 15% on cooling bills.\\\"\\n  },\\n  \\\"arrivalDate\\\": \\\"2020-03-05T10:43:23.713Z\\\",\\n  \\\"orderDate\\\": \\\"2020-03-03T08:34:21.21Z\\\",\\n  \\\"orderTotal\\\": 15746,\\n  \\\"address\\\": \\\"m81 West Shirley Dr.Greenfield, IN 46140\\\"\\n }\\n]\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"741952b4-32a6-4508-a12f-d96cf65e9d18\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"url\\\":\\\"{{baseUrl}}/orders?list=10\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"list\\\",\\\"value\\\":\\\"10\\\"}],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                }\n                            ]\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071688,\n                            \"folder\": \"0650fd8c-7bf4-42f7-9a73-32c7def1a66e\",\n                            \"collection\": \"7732157#37350b62-41f3-428a-8bd5-fec517bb4f43\",\n                            \"id\": \"9bdb5a86-aad1-4125-ac2b-ed548ed55420\",\n                            \"name\": \"Get items from the database\",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"3eaa5514-92a8-4c42-9bfa-10b758f8fe3b\",\n                                        \"exec\": [\n                                            \"var jsonData = pm.response.json();      \",\n                                            \"let responseSize = jsonData.length;\",\n                                            \"console.log(responseSize);\",\n                                            \"console.log(parseInt(pm.environment.get(\\\"itemListValue\\\")))\",\n                                            \"/* \",\n                                            \"    \",\n                                            \"    [+] Check for Parameter Tampering: An attacker can manipulate parameters sent in API requests to exploit the backend processing. Conceptually, when the attacker changes the input value from x to y and the server processes it, then the service will be vulnerable to parameter tampering. \",\n                                            \"    \",\n                                            \"*/\",\n                                            \"if(responseSize === parseInt(pm.environment.get(\\\"itemListValue\\\")))\",\n                                            \"    pm.test(\\\"Unexpected number of items fetched\\\");\",\n                                            \"else\",\n                                            \"    pm.test(\\\"Expected number of items fetched\\\");\",\n                                            \"\",\n                                            \"\",\n                                            \"/* \",\n                                            \"\",\n                                            \"    [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.\",\n                                            \"\",\n                                            \"*/\",\n                                            \"pm.test(\\\"Strict-Transport-Security is present\\\", function () {\",\n                                            \"    pm.response.to.have.header(\\\"strict-transport-security\\\");\",\n                                            \"});\",\n                                            \"\",\n                                            \"\",\n                                            \"/* \",\n                                            \"\",\n                                            \"    [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.\",\n                                            \"\",\n                                            \"*/\",\n                                            \"if(pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\"))\",\n                                            \"{ \",\n                                            \"    let headerValue = pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\");\",\n                                            \"    if(headerValue === \\\"*\\\" || headerValue === pm.environment.get(\\\"origin\\\"))\",\n                                            \"    pm.test(\\\"Misconfigured Cross-Origin Resource Sharing\\\");\",\n                                            \"}\",\n                                            \"\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                },\n                                {\n                                    \"listen\": \"prerequest\",\n                                    \"script\": {\n                                        \"id\": \"7554406a-bc59-4336-ae22-daa8840273af\",\n                                        \"exec\": [\n                                            \"let evilValue = pm.environment.get(\\\"evilValue\\\");\",\n                                            \"pm.environment.set(\\\"itemListValue\\\", evilValue);\",\n                                            \"pm.environment.set(\\\"origin\\\", \\\"https://www.evil.com\\\");\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": \"Pull a list of items from item database\",\n                            \"variables\": null,\n                            \"headers\": \"Origin: {{origin}}\\n\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {},\n                            \"url\": \"https://simplekart.postman.com/items?list={{itemListValue}}\",\n                            \"preRequestScript\": \"let evilValue = pm.environment.get(\\\"evilValue\\\");\\npm.environment.set(\\\"itemListValue\\\", evilValue);\\npm.environment.set(\\\"origin\\\", \\\"https://www.evil.com\\\");\",\n                            \"tests\": \"var jsonData = pm.response.json();      \\nlet responseSize = jsonData.length;\\nconsole.log(responseSize);\\nconsole.log(parseInt(pm.environment.get(\\\"itemListValue\\\")))\\n/* \\n    \\n    [+] Check for Parameter Tampering: An attacker can manipulate parameters sent in API requests to exploit the backend processing. Conceptually, when the attacker changes the input value from x to y and the server processes it, then the service will be vulnerable to parameter tampering. \\n    \\n*/\\nif(responseSize === parseInt(pm.environment.get(\\\"itemListValue\\\")))\\n    pm.test(\\\"Unexpected number of items fetched\\\");\\nelse\\n    pm.test(\\\"Expected number of items fetched\\\");\\n\\n\\n/* \\n\\n    [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.\\n\\n*/\\npm.test(\\\"Strict-Transport-Security is present\\\", function () {\\n    pm.response.to.have.header(\\\"strict-transport-security\\\");\\n});\\n\\n\\n/* \\n\\n    [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.\\n\\n*/\\nif(pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\"))\\n{ \\n    let headerValue = pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\");\\n    if(headerValue === \\\"*\\\" || headerValue === pm.environment.get(\\\"origin\\\"))\\n    pm.test(\\\"Misconfigured Cross-Origin Resource Sharing\\\");\\n}\\n\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [\n                                {\n                                    \"key\": \"list\",\n                                    \"value\": \"{{itemListValue}}\"\n                                }\n                            ],\n                            \"headerData\": [\n                                {\n                                    \"key\": \"Origin\",\n                                    \"value\": \"{{origin}}\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"pathVariableData\": [],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"responses\": [\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071790,\n                                    \"request\": \"9bdb5a86-aad1-4125-ac2b-ed548ed55420\",\n                                    \"id\": \"5f149a94-aa98-4046-8439-8312ac18ffc6\",\n                                    \"name\": \"OK - Successful pull of items\",\n                                    \"status\": \"OK\",\n                                    \"responseCode\": {\n                                        \"code\": 200,\n                                        \"name\": \"OK\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"[\\n {\\n  \\\"itemId\\\": 1657,\\n  \\\"name\\\": \\\"Smart WiFi Router\\\",\\n  \\\"price\\\": 2096,\\n  \\\"description\\\": \\\"Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH\\\"\\n },\\n {\\n  \\\"itemId\\\": 1658,\\n  \\\"name\\\": \\\"VR Gaming Headset\\\",\\n  \\\"price\\\": 79990,\\n  \\\"description\\\": \\\"VR Gaming Headset puts you at the center of virtual reality's most pulse-pounding, PC-powered gameplay. See the action unfold all around you through our sharpest lenses and next-generation optics. Lose yourself in the experience with a comfortable, improved design that lets you start playing faster and keep playing longer. Insight tracking gives you the power to move throughout your playspace in any direction. No external sensors. No complicated setup. Just hands-on action and interaction with our updated Oculus Touch controllers right out of the box. Step into the game and the future of PC VR.\\\"\\n },\\n {\\n  \\\"itemId\\\": 1659,\\n  \\\"name\\\": \\\"Classic Loop Top Shaker Bottle, 20-Ounce\\\",\\n  \\\"price\\\": 578,\\n  \\\"description\\\": \\\"Easy to maintain proper nutrition and hydration on-the-go.The wide mouth makes it easy to add scoops of powdered mixes, meal ingredients, and liquids, and embossed markings show both ounces and milliliters for easy measuring anywhere (note that markings on the 20-ounce capacity shaker cup only go up to 12 ounces). Bottle contents and liquids are securely contained thanks to a tightly threaded screw-on lid that creates a leakproof seal, and a flip cap that snaps securely shut for shaking and transportation.\\\"\\n },\\n {\\n  \\\"itemId\\\": 1660,\\n  \\\"name\\\": \\\"4-Port USB 2.0 Hub\\\",\\n  \\\"price\\\": 505,\\n  \\\"description\\\": \\\"Easily add up to 4 devices with the USB 2.0 Hub. Particularly great for recent notebooks that provide a limited number of USB ports. Achieve full 480 Mbps on each port, or daisy-chain multiple hubs to a maximum of 127 devices.Fully backwards compatible with the USB 1.1 products.\\\"\\n },\\n {\\n  \\\"itemId\\\": 1661,\\n  \\\"name\\\": \\\"Wipes Flushable Wet Wipes Dispenser, Mint Chill, 48 Count (Pack of 3)\\\",\\n  \\\"price\\\": 938,\\n  \\\"description\\\": \\\"For a superior clean that’s fresh, gentle, and effective, choose Wipes with the CleaningRipples Texture. Wipes are 100 percent flushable, remove odor causing bacteria and offer a large, dual layer wipe to clean better than when using dry toilet paper alone.\\\"\\n },\\n {\\n  \\\"itemId\\\": 1662,\\n  \\\"name\\\": \\\"Cordless Vacuum Cleaner\\\",\\n  \\\"price\\\": 41893,\\n  \\\"description\\\": \\\"Twice the suction of any cord-free vacuum. Cord-free cleaning, made easier. Intelligently optimizes suction and run time, to deep clean everywhere. With fade-free battery power and a battery-saving trigger. And real-time reporting on the LCD screen to give you control of your clean. The Dynamic Load Sensor (DLS) system automatically changes the motor speed between carpets and hard floors. For deep cleaning across floor types.\\\"\\n },\\n {\\n  \\\"itemId\\\": 1663,\\n  \\\"name\\\": \\\"Hair Dryer\\\",\\n  \\\"price\\\": 1400,\\n  \\\"description\\\": \\\"Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%.\\\"\\n },\\n {\\n  \\\"itemId\\\": 1664,\\n  \\\"name\\\": \\\"Business Z27n G2 27 inch LED LCD Monitor\\\",\\n  \\\"price\\\": 24485,\\n  \\\"description\\\": \\\"Be a productive powerhouse with the sleek QHD HP Z27n G2 27-inch Display. This virtually seamless display is factory-tested for reliability and longevity with integrated color calibration, uninterrupted multi-screen tiling, and expansive device connections, including USB-C™. Multi-screen productivity with no disruptions Streamline multi-tasking on multiple displays with a 3-sided micro-edge bezel, and daisy chain up to 2 displays per workstation with DisplayPort™.\\\"\\n },\\n {\\n  \\\"itemId\\\": 1665,\\n  \\\"name\\\": \\\"Smart Watch\\\",\\n  \\\"price\\\": 1805,\\n  \\\"description\\\": \\\"Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data.\\\"\\n },\\n {\\n  \\\"itemId\\\": 1666,\\n  \\\"name\\\": \\\"Learning Thermostat, 3rd Gen, Smart Thermostat\\\",\\n  \\\"price\\\": 15746,\\n  \\\"description\\\": \\\"Learning Thermostat is a smart thermostat that learns what temperatures you like, turns itself down when you’re away and connects to your phone. It has a big, sharp display. And it’s proven to help save energy. In independent studies, the Thermostat saved an average of 10% to 12% on heating bills and 15% on cooling bills.\\\"\\n }\\n]\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"e8719023-0cab-4e45-b658-df1b776650b9\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"url\\\":\\\"{{baseUrl}}/items?list=10\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[{\\\"key\\\":\\\"list\\\",\\\"value\\\":\\\"10\\\"}],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                }\n                            ]\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071696,\n                            \"folder\": \"0650fd8c-7bf4-42f7-9a73-32c7def1a66e\",\n                            \"collection\": \"7732157#37350b62-41f3-428a-8bd5-fec517bb4f43\",\n                            \"id\": \"bbfeacec-1e78-4c38-b454-a4e7b5e6e45f\",\n                            \"name\": \"Get item details from the database \",\n                            \"dataMode\": null,\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"bac7bfa9-fe35-4984-a095-91c2684da75e\",\n                                        \"exec\": [\n                                            \"/* \",\n                                            \"\",\n                                            \"    [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.\",\n                                            \"\",\n                                            \"*/\",\n                                            \"pm.test(\\\"Strict-Transport-Security header is present\\\", function () {\",\n                                            \"    pm.response.to.have.header(\\\"strict-transport-security\\\");\",\n                                            \"});\",\n                                            \"\",\n                                            \"/* \",\n                                            \"\",\n                                            \"    [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.\",\n                                            \"\",\n                                            \"*/\",\n                                            \"if(pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\"))\",\n                                            \"{ \",\n                                            \"    let headerValue = pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\");\",\n                                            \"    if(headerValue === \\\"*\\\" || headerValue === pm.environment.get(\\\"origin\\\"))\",\n                                            \"    pm.test(\\\"Misconfigured Cross-Origin Resource Sharing\\\");\",\n                                            \"}\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                },\n                                {\n                                    \"listen\": \"prerequest\",\n                                    \"script\": {\n                                        \"id\": \"5260e2e0-3711-4778-960c-4b0a28da495f\",\n                                        \"exec\": [\n                                            \"pm.environment.set(\\\"origin\\\", \\\"https://www.evil.com\\\");\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": null,\n                            \"descriptionFormat\": null,\n                            \"description\": \"Obtain item details from item database\",\n                            \"variables\": null,\n                            \"headers\": \"Origin: {{origin}}\\n\",\n                            \"method\": \"GET\",\n                            \"pathVariables\": {},\n                            \"url\": \"https://simplekart.postman.com/items/1657\",\n                            \"preRequestScript\": \"pm.environment.set(\\\"origin\\\", \\\"https://www.evil.com\\\");\",\n                            \"tests\": \"/* \\n\\n    [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.\\n\\n*/\\npm.test(\\\"Strict-Transport-Security header is present\\\", function () {\\n    pm.response.to.have.header(\\\"strict-transport-security\\\");\\n});\\n\\n/* \\n\\n    [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.\\n\\n*/\\nif(pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\"))\\n{ \\n    let headerValue = pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\");\\n    if(headerValue === \\\"*\\\" || headerValue === pm.environment.get(\\\"origin\\\"))\\n    pm.test(\\\"Misconfigured Cross-Origin Resource Sharing\\\");\\n}\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [],\n                            \"headerData\": [\n                                {\n                                    \"key\": \"Origin\",\n                                    \"value\": \"{{origin}}\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"pathVariableData\": [],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:29.000Z\",\n                            \"responses\": [\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071809,\n                                    \"request\": \"bbfeacec-1e78-4c38-b454-a4e7b5e6e45f\",\n                                    \"id\": \"7d3623ea-dfa8-4f24-a367-8bffbf0a2b5f\",\n                                    \"name\": \"Not Found - Item not found\",\n                                    \"status\": \"Not Found\",\n                                    \"responseCode\": {\n                                        \"code\": 404,\n                                        \"name\": \"Not Found\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"text/plain\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"\",\n                                    \"language\": \"text\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"7b5796f8-f835-4c0a-be40-7e04c29dd25f\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{},\\\"url\\\":\\\"{{baseUrl}}/items/:itemId\\\",\\\"pathVariableData\\\":[{\\\"key\\\":\\\"itemId\\\"}],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                },\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071810,\n                                    \"request\": \"bbfeacec-1e78-4c38-b454-a4e7b5e6e45f\",\n                                    \"id\": \"c00243f7-00bb-4daf-9a06-c99ad60d9d9f\",\n                                    \"name\": \"OK - Successfully obtained order details\",\n                                    \"status\": \"OK\",\n                                    \"responseCode\": {\n                                        \"code\": 200,\n                                        \"name\": \"OK\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"{\\n    \\\"itemId\\\": 1657,\\n    \\\"name\\\": \\\"Smart WiFi Router\\\",\\n    \\\"price\\\": 2096,\\n    \\\"description\\\": \\\"Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH\\\"\\n}\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"c3c45e4e-2941-462b-b51a-cb8665fddd09\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{\\\"itemId\\\":\\\"\\\"},\\\"url\\\":\\\"{{baseUrl}}/items/:itemId\\\",\\\"pathVariableData\\\":[{\\\"key\\\":\\\"itemId\\\",\\\"value\\\":\\\"\\\"}],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                },\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071812,\n                                    \"request\": \"bbfeacec-1e78-4c38-b454-a4e7b5e6e45f\",\n                                    \"id\": \"cfa81887-fcc7-4b23-97e6-172e018c8da7\",\n                                    \"name\": \"Bad Request - Invalid item ID supplied\",\n                                    \"status\": \"Bad Request\",\n                                    \"responseCode\": {\n                                        \"code\": 400,\n                                        \"name\": \"Bad Request\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"text/plain\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"\",\n                                    \"language\": \"text\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"7005aff3-09aa-40af-a19e-6065e0e76ad9\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":\\\"\\\",\\\"pathVariables\\\":{},\\\"url\\\":\\\"{{baseUrl}}/items/:itemId\\\",\\\"pathVariableData\\\":[{\\\"key\\\":\\\"itemId\\\"}],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"dataMode\\\":null,\\\"data\\\":null,\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                }\n                            ]\n                        },\n                        {\n                            \"owner\": \"7732157\",\n                            \"lastUpdatedBy\": \"7732157\",\n                            \"lastRevision\": 14716071793,\n                            \"folder\": \"31c8a397-c527-4abf-9bc2-d02955cd6e79\",\n                            \"collection\": \"7732157#37350b62-41f3-428a-8bd5-fec517bb4f43\",\n                            \"id\": \"df9b22bf-c5f5-42c3-b7f3-37fac04d6f40\",\n                            \"name\": \"Post order details to the database\",\n                            \"dataMode\": \"raw\",\n                            \"data\": null,\n                            \"auth\": {\n                                \"type\": \"noauth\"\n                            },\n                            \"events\": [\n                                {\n                                    \"listen\": \"test\",\n                                    \"script\": {\n                                        \"id\": \"b799fedf-bba3-4f02-b76e-a9e0b01d3827\",\n                                        \"exec\": [\n                                            \"var jsonData = pm.response.json();\",\n                                            \"let responseSize = jsonData.length;\",\n                                            \"\",\n                                            \"\",\n                                            \"/* \",\n                                            \"\",\n                                            \"    [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.\",\n                                            \"\",\n                                            \"*/\",\n                                            \"pm.test(\\\"Strict-Transport-Security header is present\\\", function () {\",\n                                            \"    pm.response.to.have.header(\\\"strict-transport-security\\\");\",\n                                            \"});\",\n                                            \"\",\n                                            \"\",\n                                            \"/* \",\n                                            \"\",\n                                            \"    [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.\",\n                                            \"\",\n                                            \"*/\",\n                                            \"if(pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\"))\",\n                                            \"{ \",\n                                            \"    let headerValue = pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\");\",\n                                            \"    if(headerValue === \\\"*\\\" || headerValue === pm.environment.get(\\\"origin\\\"))\",\n                                            \"    pm.test(\\\"Misconfigured Cross-Origin Resource Sharing\\\");\",\n                                            \"}\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                },\n                                {\n                                    \"listen\": \"prerequest\",\n                                    \"script\": {\n                                        \"id\": \"0f35b1b4-c7f4-4117-bfb7-919a5e6cb50e\",\n                                        \"exec\": [\n                                            \"pm.environment.set(\\\"origin\\\", \\\"https://www.evil.com\\\");\",\n                                            \"\"\n                                        ],\n                                        \"type\": \"text/javascript\"\n                                    }\n                                }\n                            ],\n                            \"rawModeData\": \"{\\n    \\\"address\\\": \\\"<string>\\\",\\n    \\\"item\\\": {\\n        \\\"itemId\\\": 1,\\n        \\\"name\\\": \\\"<string>\\\",\\n        \\\"price\\\": 2000,\\n        \\\"description\\\": \\\"<string>\\\"\\n    }\\n}\",\n                            \"descriptionFormat\": null,\n                            \"description\": \"Post item order to orders database\",\n                            \"variables\": null,\n                            \"headers\": \"Origin: {{origin}}\\nContent-Type: application/json\\n\",\n                            \"method\": \"POST\",\n                            \"pathVariables\": {},\n                            \"url\": \"https://simplekart.postman.com/orders\",\n                            \"preRequestScript\": \"pm.environment.set(\\\"origin\\\", \\\"https://www.evil.com\\\");\\n\",\n                            \"tests\": \"var jsonData = pm.response.json();\\nlet responseSize = jsonData.length;\\n\\n\\n/* \\n\\n    [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.\\n\\n*/\\npm.test(\\\"Strict-Transport-Security header is present\\\", function () {\\n    pm.response.to.have.header(\\\"strict-transport-security\\\");\\n});\\n\\n\\n/* \\n\\n    [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.\\n\\n*/\\nif(pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\"))\\n{ \\n    let headerValue = pm.response.headers.get(\\\"Access-Control-Allow-Origin\\\");\\n    if(headerValue === \\\"*\\\" || headerValue === pm.environment.get(\\\"origin\\\"))\\n    pm.test(\\\"Misconfigured Cross-Origin Resource Sharing\\\");\\n}\",\n                            \"currentHelper\": null,\n                            \"helperAttributes\": null,\n                            \"queryParams\": [],\n                            \"headerData\": [\n                                {\n                                    \"key\": \"Origin\",\n                                    \"value\": \"{{origin}}\"\n                                },\n                                {\n                                    \"key\": \"Content-Type\",\n                                    \"value\": \"application/json\",\n                                    \"type\": \"text\"\n                                }\n                            ],\n                            \"pathVariableData\": [],\n                            \"protocolProfileBehavior\": {\n                                \"disableBodyPruning\": true\n                            },\n                            \"dataDisabled\": null,\n                            \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"updatedAt\": \"2020-05-13T18:49:30.000Z\",\n                            \"dataOptions\": {\n                                \"raw\": {}\n                            },\n                            \"responses\": [\n                                {\n                                    \"owner\": \"7732157\",\n                                    \"lastUpdatedBy\": \"7732157\",\n                                    \"lastRevision\": 14716071958,\n                                    \"request\": \"df9b22bf-c5f5-42c3-b7f3-37fac04d6f40\",\n                                    \"id\": \"d76d318f-0456-4ec3-ad47-f8e760c5a38b\",\n                                    \"name\": \"OK - Order created\",\n                                    \"status\": \"Created\",\n                                    \"responseCode\": {\n                                        \"code\": 201,\n                                        \"name\": \"Created\",\n                                        \"detail\": \"\"\n                                    },\n                                    \"time\": null,\n                                    \"headers\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\"\n                                        }\n                                    ],\n                                    \"cookies\": [],\n                                    \"mime\": \"\",\n                                    \"text\": \"{\\n \\\"orderId\\\": 674,\\n \\\"items\\\": {\\n  \\\"itemId\\\": 1657,\\n  \\\"name\\\": \\\"Smart WiFi Router\\\",\\n  \\\"price\\\": 2096,\\n  \\\"description\\\": \\\"Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH\\\"\\n },\\n \\\"arrivalDate\\\": \\\"2020-3-04T13:07:45.962Z\\\",\\n \\\"orderDate\\\": \\\"2020-03-06T19:27:26.733Z\\\",\\n \\\"orderTotal\\\": 2096,\\n \\\"address\\\": \\\"95 Tarkiln Hill St.Laurel, MD 20707\\\"\\n}\",\n                                    \"language\": \"json\",\n                                    \"rawDataType\": null,\n                                    \"requestObject\": \"{\\\"id\\\":\\\"58f7f324-43fe-48f8-ad42-b57a612b3894\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":\\\"\\\",\\\"dataMode\\\":\\\"raw\\\",\\\"url\\\":\\\"{{baseUrl}}/orders\\\",\\\"pathVariableData\\\":[],\\\"queryParams\\\":[],\\\"headerData\\\":[],\\\"data\\\":\\\"{\\\\n    \\\\\\\"items\\\\\\\": {\\\\n        \\\\\\\"itemId\\\\\\\": 1657,\\\\n        \\\\\\\"name\\\\\\\": \\\\\\\"Smart WiFi Router\\\\\\\",\\\\n        \\\\\\\"price\\\\\\\": 2096,\\\\n        \\\\\\\"description\\\\\\\": \\\\\\\"Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH\\\\\\\"\\\\n    },\\\\n    \\\\\\\"address\\\\\\\": \\\\\\\"95 Tarkiln Hill St.Laurel, MD 20707\\\\\\\"\\\\n}\\\",\\\"protocolProfileBehavior\\\":{\\\"disableBodyPruning\\\":true}}\",\n                                    \"createdAt\": \"2020-05-13T18:49:30.000Z\",\n                                    \"updatedAt\": \"2020-05-13T18:49:30.000Z\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            },\n            \"environments\": {\n                \"7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d\": {\n                    \"id\": \"f1719ffd-a4f1-4584-9be9-a73bcefe502d\",\n                    \"name\": \"SimpleKart - Security Tests\",\n                    \"values\": [\n                        {\n                            \"key\": \"itemListValue\",\n                            \"value\": \"21\",\n                            \"enabled\": true\n                        },\n                        {\n                            \"key\": \"orderListValue\",\n                            \"value\": \"21\",\n                            \"enabled\": true\n                        },\n                        {\n                            \"key\": \"victimOrderID\",\n                            \"value\": 70938243034498,\n                            \"enabled\": true\n                        },\n                        {\n                            \"key\": \"origin\",\n                            \"value\": \"https://www.evil.com\",\n                            \"enabled\": true\n                        },\n                        {\n                            \"key\": \"evilValue\",\n                            \"value\": \"21\",\n                            \"enabled\": true\n                        },\n                        {\n                            \"key\": \"orderID\",\n                            \"value\": 70938243034498,\n                            \"enabled\": true\n                        }\n                    ]\n                },\n                \"7732157-f27041a1-1e05-4f63-a81d-31107364e640\": {\n                    \"id\": \"f27041a1-1e05-4f63-a81d-31107364e640\",\n                    \"name\": \"SimpleKart - Prod\",\n                    \"values\": [\n                        {\n                            \"key\": \"baseUrl\",\n                            \"value\": \"https://simplekart.postman.com\",\n                            \"enabled\": true\n                        },\n                        {\n                            \"key\": \"itemListValue\",\n                            \"value\": null,\n                            \"enabled\": true\n                        },\n                        {\n                            \"key\": \"origin\",\n                            \"value\": \"https://www.evil.com\",\n                            \"enabled\": true\n                        },\n                        {\n                            \"key\": \"orderListValue\",\n                            \"value\": null,\n                            \"enabled\": true\n                        },\n                        {\n                            \"key\": \"fuzzValue\",\n                            \"value\": \"\\\"><script>alert(document.domain)</script>\",\n                            \"enabled\": true\n                        },\n                        {\n                            \"key\": \"orderID\",\n                            \"value\": null,\n                            \"enabled\": true\n                        }\n                    ]\n                },\n                \"7732157-f2924ed2-5406-4a73-bb80-39a113545cb9\": {\n                    \"id\": \"f2924ed2-5406-4a73-bb80-39a113545cb9\",\n                    \"name\": \"SimpleKart - Integration test\",\n                    \"values\": [\n                        {\n                            \"key\": \"{{baseUrl}}\",\n                            \"value\": \"https://fffc2eb4-dbcf-4c6d-bc30-c3cb2e7ecfa6.mock.pstmn.io\",\n                            \"enabled\": true\n                        },\n                        {\n                            \"key\": \"orderId\",\n                            \"value\": 656,\n                            \"enabled\": true\n                        }\n                    ]\n                }\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Watch an API",
					"id": "583e998e-8385-435a-8617-f15dafab0ab1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/apis/:apiId/watch",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"watch"
							],
							"variable": [
								{
									"key": "apiId",
									"value": "{{apiId}}"
								}
							]
						}
					},
					"response": [
						{
							"id": "0742eb54-6e47-4bd9-9a7d-e1c76f473020",
							"name": "Watch an API",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/watch",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"watch"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{apiId}}"
										}
									]
								}
							},
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{apiId}}\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"watch\"\n    },\n    \"data\": {\n        \"count\": {{countOfWatchers}},\n        \"isWatching\": true\n    }\n}"
						}
					]
				},
				{
					"name": "Unwatch API",
					"id": "9fcae19b-f34c-4bd3-b93b-4f20688c8422",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/apis/:apiId/unwatch",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"unwatch"
							],
							"variable": [
								{
									"key": "apiId",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"id": "7772f0fa-ff00-4ba4-aeec-cadefcd5d250",
							"name": "Unwatch an API",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/unwatch",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"unwatch"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{apiId}}"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{apiId}}\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"unwatch\"\n    },\n    \"data\": {\n        \"count\": {{countOfWatchers}},\n        \"isWatching\": false\n    }\n}"
						}
					]
				},
				{
					"name": "Watch related details",
					"id": "877c6936-5526-45a4-bbdf-3a62bf2cca18",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/apis/:id/watch",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":id",
								"watch"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{apiId}}"
								}
							]
						}
					},
					"response": [
						{
							"id": "8be6cb1f-690e-40b6-9d4e-1f76c1124053",
							"name": "Watch related details",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/:id/watch",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":id",
										"watch"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{apiId}}"
										}
									]
								}
							},
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{apiId}}\",\n    \"meta\": {\n        \"action\": \"getWatchDetails\",\n        \"model\": \"api\"\n    },\n    \"data\": {\n        \"isWatching\": true/false,\n        \"count\": 10, // Will be used later\n        \"watchers\": [] // Will be used later\n    }\n}"
						}
					]
				},
				{
					"name": "Watchers list",
					"id": "bd6e837b-4575-449b-a7d4-772b009eec85",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/apis/:apiId/watchers",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"watchers"
							],
							"variable": [
								{
									"key": "apiId",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"id": "316dd66b-5e82-48f0-a075-04c7ddea2e3a",
							"name": "Watchers list when only private user is watching",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/:apiId/watchers",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"watchers"
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										}
									]
								}
							},
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{apiId}}\",\n    \"meta\": {\n        \"action\": \"getWatchers\",\n        \"model\": \"api\"\n    },\n    \"data\": {\n       \"private\": {\n            \"count\": 7,\n            \"watchers\": [\n                {\n                    \"name\": \"Private Users\",\n                    \"profilePicUrl\": \"www.staticimage.com/1\",\n                    \"profileUrl\": null\n                }\n            ]\n        }\n    }\n}\n"
						},
						{
							"id": "4d5b8053-a86b-49ef-acb7-67039d7aaf72",
							"name": "Watchers list when all types of users are watching",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/:apiId/watchers",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"watchers"
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										}
									]
								}
							},
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{apiId}}\",\n    \"meta\": {\n        \"action\": \"getWatchers\",\n        \"model\": \"api\"\n    },\n    \"data\": {\n        \"public\": {\n            \"count\" : 1,\n            \"watchers\": [\n                {\n                    \"name\": \"Rashi Ben\",\n                    \"profilePicUrl\": \"www.test.com\",\n                    \"profileUrl\": \"www.explore.postman.com/rashiben\"\n                }\n            ]\n        },\n        \"team\": {\n            \"count\" : 1,\n            \"watchers\": [\n                {\n                    \"name\": \"Amey Telawane\",\n                    \"profilePicUrl\": \"www.test.com\",\n                    \"profileUrl\": \"https://the.postman.co/users/1234\"\n                }\n            ]\n        },\n        \"private\": {\n            \"count\": 7,\n            \"watchers\": [\n                {\n                    \"name\": \"Private Users\",\n                    \"profilePicUrl\": \"www.staticimage.com/1\",\n                    \"profileUrl\": null\n                }\n            ]\n        }\n    }\n}\n"
						},
						{
							"id": "dc57d7f6-0fbd-4005-8e79-b0125dd1769c",
							"name": "Watchers list when no private user  is present",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/:apiId/watchers",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"watchers"
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										}
									]
								}
							},
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{apiId}}\",\n    \"meta\": {\n        \"action\": \"getWatchers\",\n        \"model\": \"api\"\n    },\n    \"data\": {\n        \"public\": {\n            \"count\" : 1,\n            \"watchers\": [\n                {\n                    \"name\": \"Rashi Ben\",\n                    \"profilePicUrl\": \"www.test.com\",\n                    \"profileUrl\": \"www.explore.postman.com/rashiben\"\n                }\n            ]\n        },\n        \"team\": {\n            \"count\" : 1,\n            \"watchers\": [\n                {\n                    \"name\": \"Amey Telawane\",\n                    \"profilePicUrl\": \"www.test.com\",\n                    \"profileUrl\": \"https://the.postman.co/users/1234\"\n                }\n            ]\n        }\n    }\n}\n"
						}
					]
				},
				{
					"name": "Get API and API Version for relationId and relationType",
					"id": "e7966651-8c58-4ad9-b162-7f46508ee503",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apis?relationType={{relationType}}&relationId={{relationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apis"
							],
							"query": [
								{
									"key": "relationType",
									"value": "{{relationType}}",
									"description": "Supports all relation types - schema, mock, monitor, environment, documentation, test"
								},
								{
									"key": "relationId",
									"value": "{{relationId}}",
									"description": "ID of the entity which is a relation e.g. schemaId, mockId, monitorId, documentation, test"
								}
							]
						}
					},
					"response": [
						{
							"id": "cf7555c6-2369-48b4-b2df-d40e7405cc7b",
							"name": "Response for Schema Type",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis?relationType=schema&relationId={{schemaId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "relationType",
											"value": "schema",
											"description": "Supports non-collection relation types - schema, mock, monitor, environment"
										},
										{
											"key": "relationId",
											"value": "{{schemaId}}",
											"description": "ID of the entity which is a relation e.g. schemaId, mockId, monitorId etc"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"85129485-9433-4a72-ab4e-4117cb1e1ef0\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"id\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n        \"name\": \"some api\",\n        \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n        \"updatedAt\": \"2021-07-28T10:21:27.000Z\",\n        \"createdBy\": \"U1\",\n        \"updatedBy\": \"U1\",\n        \"apiVersion\": {\n            \"api\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n            \"id\": \"bc9d0e64-dda4-4792-85f3-95ec0cc7834e\",\n            \"name\": \"Draft\",\n            \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n            \"updatedAt\": \"2021-07-29T10:21:27.000Z\",\n            \"createdBy\": \"U1\",\n            \"updatedBy\": \"U1\"\n        }\n    }\n}"
						},
						{
							"id": "cda1d7c5-3dd4-43b9-832a-28f2d25f02f9",
							"name": "Response for Documentation Type",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis?relationType=documentation&relationId={{documentationId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "relationType",
											"value": "documentation"
										},
										{
											"key": "relationId",
											"value": "{{documentationId}}",
											"description": "ID of the documentation relation"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"85129485-9433-4a72-ab4e-4117cb1e1ef0\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"id\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n        \"name\": \"some api\",\n        \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n        \"updatedAt\": \"2021-07-28T10:21:27.000Z\",\n        \"createdBy\": \"U1\",\n        \"updatedBy\": \"U1\",\n        \"apiVersion\": {\n            \"api\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n            \"id\": \"bc9d0e64-dda4-4792-85f3-95ec0cc7834e\",\n            \"name\": \"Draft\",\n            \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n            \"updatedAt\": \"2021-07-29T10:21:27.000Z\",\n            \"createdBy\": \"U1\",\n            \"updatedBy\": \"U1\"\n        }\n    }\n}"
						},
						{
							"id": "477b0741-719a-446e-a40d-d9cdc8c02b54",
							"name": "Response for Test Type",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis?relationType=test&relationId={{testId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "relationType",
											"value": "test"
										},
										{
											"key": "relationId",
											"value": "{{testId}}",
											"description": "ID of the test relation"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"85129485-9433-4a72-ab4e-4117cb1e1ef0\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"id\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n        \"name\": \"some api\",\n        \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n        \"updatedAt\": \"2021-07-28T10:21:27.000Z\",\n        \"createdBy\": \"U1\",\n        \"updatedBy\": \"U1\",\n        \"apiVersion\": {\n            \"api\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n            \"id\": \"bc9d0e64-dda4-4792-85f3-95ec0cc7834e\",\n            \"name\": \"Draft\",\n            \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n            \"updatedAt\": \"2021-07-29T10:21:27.000Z\",\n            \"createdBy\": \"U1\",\n            \"updatedBy\": \"U1\"\n        }\n    }\n}"
						},
						{
							"id": "c5fd77e5-7018-4e71-a63e-d243f64e0b0e",
							"name": "Response for Mock relation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis?relationType=mock&relationId={{mockId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "relationType",
											"value": "mock"
										},
										{
											"key": "relationId",
											"value": "{{mockId}}",
											"description": "ID of the mock relation"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"85129485-9433-4a72-ab4e-4117cb1e1ef0\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"id\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n        \"name\": \"some api\",\n        \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n        \"updatedAt\": \"2021-07-28T10:21:27.000Z\",\n        \"createdBy\": \"U1\",\n        \"updatedBy\": \"U1\",\n        \"apiVersion\": {\n            \"api\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n            \"id\": \"bc9d0e64-dda4-4792-85f3-95ec0cc7834e\",\n            \"name\": \"Draft\",\n            \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n            \"updatedAt\": \"2021-07-29T10:21:27.000Z\",\n            \"createdBy\": \"U1\",\n            \"updatedBy\": \"U1\"\n        }\n    }\n}"
						},
						{
							"id": "05a10065-1014-4d5d-a3fc-67357a371d92",
							"name": "Response for Monitor relation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis?relationType=monitor&relationId={{monitorId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "relationType",
											"value": "monitor"
										},
										{
											"key": "relationId",
											"value": "{{monitorId}}",
											"description": "ID of the monitor relation"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"85129485-9433-4a72-ab4e-4117cb1e1ef0\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"id\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n        \"name\": \"some api\",\n        \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n        \"updatedAt\": \"2021-07-28T10:21:27.000Z\",\n        \"createdBy\": \"U1\",\n        \"updatedBy\": \"U1\",\n        \"apiVersion\": {\n            \"api\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n            \"id\": \"bc9d0e64-dda4-4792-85f3-95ec0cc7834e\",\n            \"name\": \"Draft\",\n            \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n            \"updatedAt\": \"2021-07-29T10:21:27.000Z\",\n            \"createdBy\": \"U1\",\n            \"updatedBy\": \"U1\"\n        }\n    }\n}"
						},
						{
							"id": "6caf9751-6d75-4e3f-8efa-84bb949e43f3",
							"name": "Response for Environment relation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis?relationType=environment&relationId={{environmentId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "relationType",
											"value": "environment"
										},
										{
											"key": "relationId",
											"value": "{{environmentId}}",
											"description": "ID of the environment relation"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"85129485-9433-4a72-ab4e-4117cb1e1ef0\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"id\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n        \"name\": \"some api\",\n        \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n        \"updatedAt\": \"2021-07-28T10:21:27.000Z\",\n        \"createdBy\": \"U1\",\n        \"updatedBy\": \"U1\",\n        \"apiVersion\": {\n            \"api\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n            \"id\": \"bc9d0e64-dda4-4792-85f3-95ec0cc7834e\",\n            \"name\": \"Draft\",\n            \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n            \"updatedAt\": \"2021-07-29T10:21:27.000Z\",\n            \"createdBy\": \"U1\",\n            \"updatedBy\": \"U1\"\n        }\n    }\n}"
						},
						{
							"id": "11b4a366-9ad8-4792-86ea-9b274177f764",
							"name": "No API linked to Relation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis?relationType={{relationType}}&relationId={{relationId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "relationType",
											"value": "{{relationType}}",
											"description": "Supports non-collection relation types - schema, mock, monitor, environment"
										},
										{
											"key": "relationId",
											"value": "{{relationId}}",
											"description": "ID of the entity which is a relation e.g. schemaId, mockId, monitorId etc"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"find\"\n    },\n    \"data\": null\n}"
						},
						{
							"id": "bf5a78f8-0e18-4f50-8a7c-7d9567b70bb8",
							"name": "Validation: Relation Type is not valid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis?relationType=qwhqiuuh&relationId={{relationId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "relationType",
											"value": "qwhqiuuh",
											"description": "Supports non-collection relation types - schema, mock, monitor, environment"
										},
										{
											"key": "relationId",
											"value": "{{relationId}}",
											"description": "ID of the entity which is a relation e.g. schemaId, mockId, monitorId etc"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidRelationTypeError\",\n        \"message\": \"The provided relation type is invalid.\",\n        \"details\": {\n            \"type\": \"qwhqiuuh\"\n        }\n    }\n}"
						},
						{
							"id": "6656d6ee-9d04-4d29-988c-fc237f964f81",
							"name": "Validation: Relation ID is not a valid UUID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis?relationType={{relationType}}&relationId=euthi3uh4ivh",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "relationType",
											"value": "{{relationType}}",
											"description": "Supports schema, mock, monitor, environment, documentation and other test types"
										},
										{
											"key": "relationId",
											"value": "euthi3uh4ivh",
											"description": "ID of the entity which is a relation e.g. schemaId, mockId, monitorId etc"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidUIDError\",\n        \"message\": \"The ID provided is not a valid UID.\",\n        \"details\": {\n            \"uid\": \"euthi3uh4ivh\"\n        }\n    }\n}"
						},
						{
							"id": "6a9004e0-3bd1-4215-b5f6-853b4cf4de92",
							"name": "Relation Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis?relationType=ttt&relationId=123",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis"
									],
									"query": [
										{
											"key": "relationType",
											"value": "ttt",
											"description": "Supports non-collection relation types - schema, mock, monitor, environment"
										},
										{
											"key": "relationId",
											"value": "123",
											"description": "ID of the entity which is a relation e.g. schemaId, mockId, monitorId etc"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 06 Aug 2021 10:14:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the relation you are looking for\",\n        \"details\": {\n            \"model\": \"relation\",\n            \"model_id\": \"123\",\n            \"owner\": \"610363\"\n        }\n    }\n}"
						}
					]
				}
			],
			"id": "a578bf7b-6ee4-4ea3-8b90-9054d9e6b693"
		},
		{
			"name": "API Version",
			"item": [
				{
					"name": "Socket only endpoints",
					"item": [
						{
							"name": "Subscribe to an API Version for events",
							"id": "29e848d5-ffde-40e1-90b8-88b2c7ce6e4a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/subscribe",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"subscribe"
									]
								}
							},
							"response": [
								{
									"id": "69b0ce19-30e8-44bb-ae9f-e2714223fb11",
									"name": "[Success] Subscribe to an API Version for events",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/subscribe",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"subscribe"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n\t\"meta\": {\n\t\t\"model\": \"apiversion\",\n\t\t\"action\": \"subscribe\"\n\t},\n\t\"data\": {\n\t\t\"subscription\": {\n\t\t\t\"id\": \"apis/{{apiId}}/apiversions/{{apiVersionId}}\"\n\t\t}\n\t}\n}"
								}
							]
						},
						{
							"name": "Unsubscribe to an API Version for events",
							"id": "f580c694-b2af-44b4-b0a2-2795bee78a4f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/subscribe",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"subscribe"
									]
								}
							},
							"response": [
								{
									"id": "38d18ed3-7b5d-4e00-9555-72b299ac2132",
									"name": "[Success] Unsubscribe to an API Version for events",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/subscribe",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"subscribe"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"unsubscribe\"\n    },\n    \"data\": {\n        \"subscription\": {\n            \"id\": \"apis/{{apiId}}/apiversions/{{apiVersionId}}\"\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "5c85168f-ca5d-4ed4-99c4-88f73fe057c0"
				},
				{
					"name": "Create an API Version",
					"id": "c1e1bac9-de12-44cb-bbed-71f08aff08f5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Access-Token",
								"type": "text",
								"value": "{{accessToken}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"1.0\",\n\t\"source\": {\n\t\t\"id\": \"{{apiVersionId}}\",\n\t\t\"schema\": true,\n\t\t\"relations\": {\n\t\t\t\"monitor\": true,\n\t\t\t\"mock\": true,\n\t\t\t\"documentation\": true\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions"
							]
						},
						"description": "This endpoint creates an API Version for an API.\n\nThe `name` field is a required field. If you want to copy relations from another API Version, then specify the `source` parameter.\n\n`source`:\n\n- `id` of the API Version from which the relations has to be copied from\n- `schema` should be true if it needs to be copied\n- `relations` should be an object which includes the types that need to copied"
					},
					"response": [
						{
							"id": "ea68d522-57f0-4cb0-917e-0e99306f93a2",
							"name": "Duplicate entities when creating an API version with entities copied from another version",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Access-Token",
										"type": "text",
										"value": "{{accessToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"1.0\",\n    \"summary\": \"\",\n    \"stage\": \"\",\n    \"visibility\": \"\",\n\t\"source\": {\n        \"id\": \"12345678-1234-1234-1234-123456789012\",\n        \"schema\": true,\n        \"relations\": {\n            \"documentation\": true\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"create\"\n    },\n    \"data\": {\n        \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n        \"name\": \"1.0\",\n        \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\",\n        \"createdBy\": \"5665\",\n        \"updateBy\": \"5665\",\n        \"createdAt\": \"2019-02-12 19:34:49\",\n        \"updatedAt\": \"2019-02-12 19:34:49\",\n        \"summary\": \"\",\n        \"stage\": \"\",\n        \"visibility\": \"\"\n    }\n}"
						},
						{
							"id": "d4a21d75-960d-43b8-b0b0-92caa182d434",
							"name": "Create an API Version from a release",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Access-Token",
										"type": "text",
										"value": "{{accessToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"1.0\",\n    \"summary\": \"\",\n    \"stage\": \"\",\n    \"visibility\": \"\",\n\t\"source\": {\n        \"releaseId\": \"releaseId\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions?workspace={{workspace}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspace}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"create\"\n    },\n    \"data\": {\n        \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n        \"name\": \"1.0\",\n        \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\",\n        \"createdBy\": \"5665\",\n        \"updateBy\": \"5665\",\n        \"createdAt\": \"2019-02-12 19:34:49\",\n        \"updatedAt\": \"2019-02-12 19:34:49\",\n        \"summary\": \"\",\n        \"stage\": \"\",\n        \"visibility\": \"\"\n    }\n}"
						},
						{
							"id": "966d8e4a-dca5-4bb7-a219-835f769bba55",
							"name": "Create an API Version",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Access-Token",
										"type": "text",
										"value": "{{accessToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"1.0\",\n    \"summary\": \"\", // optional\n    \"stage\": \"\", // optional, default is Planning\n    \"visibility\": \"\" //to be sent as Private from UI by default\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/2b95d07c-8379-4bd1-924f-e7e1af185284/versions",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"2b95d07c-8379-4bd1-924f-e7e1af185284",
										"versions"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"create\"\n    },\n    \"data\": {\n        \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n        \"name\": \"1.0\",\n        \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\",\n        \"createdBy\": \"5665\",\n        \"updateBy\": \"5665\",\n        \"createdAt\": \"2019-02-12 19:34:49\",\n        \"updatedAt\": \"2019-02-12 19:34:49\",\n        \"summary\": \"\",\n        \"stage\": \"\",\n        \"visibility\": \"\"\n    },\n    \"errors\": []\n}"
						},
						{
							"id": "0cd2f88d-7619-4a77-b016-77a9527a6612",
							"name": "Create an API Version, while copying from another API Version",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Access-Token",
										"type": "text",
										"value": "{{accessToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"1.0\",\n    \"summary\": \"\",\n    \"stage\": \"\",\n    \"visibility\": \"\",\n\t\"source\": {\n        \"id\": \"12345678-1234-1234-1234-123456789012\",\n        \"schema\": true,\n        \"relations\": {\n            \"monitor\": true,\n            \"mock\": true,\n            \"documentation\": true\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"create\"\n    },\n    \"data\": {\n        \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n        \"name\": \"1.0\",\n        \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\",\n        \"createdBy\": \"5665\",\n        \"updateBy\": \"5665\",\n        \"createdAt\": \"2019-02-12 19:34:49\",\n        \"updatedAt\": \"2019-02-12 19:34:49\",\n        \"summary\": \"\",\n        \"stage\": \"\",\n        \"visibility\": \"\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get an API Version",
					"id": "84827a23-a0bd-41df-a82c-49a0c4f716d0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Access-Token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersionId}}"
							]
						}
					},
					"response": [
						{
							"id": "e1221c3f-db6e-4b2e-9b14-792246b8f03c",
							"name": "Get an API Version(w/ createdBy populated)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/06e41ca3-8bea-4bc5-a726-70338b9f1940/versions/03c17f53-7e2e-427d-b55a-006b244f29ff?populate=createdBy",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"06e41ca3-8bea-4bc5-a726-70338b9f1940",
										"versions",
										"03c17f53-7e2e-427d-b55a-006b244f29ff"
									],
									"query": [
										{
											"key": "populate",
											"value": "createdBy"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\",\n        \"name\": \"0.1\",\n        \"api\": \"06e41ca3-8bea-4bc5-a726-70338b9f1940\",\n        \"createdBy\": {\n            \"id\": \"234\",\n            \"name\": \"John doe\",\n            \"username\": \"john.doe\",\n            \"email\": \"john@doe.com\",\n            \"profilePicUrl\": \"https://thispersondoesnotexist.com/\"\n        },\n        \"updatedBy\": \"5665\",\n        \"createdAt\": \"\",\n        \"updatedAt\": \"\",\n        \"summary\": \"\",\n        \"stage\": \"\",\n        \"visibility\": \"\"\n    }\n}"
						},
						{
							"id": "d095a637-852f-4932-b741-594928626298",
							"name": "Get an API Version (w/ relations populated)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/06e41ca3-8bea-4bc5-a726-70338b9f1940/versions/03c17f53-7e2e-427d-b55a-006b244f29ff?populate=relations",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"06e41ca3-8bea-4bc5-a726-70338b9f1940",
										"versions",
										"03c17f53-7e2e-427d-b55a-006b244f29ff"
									],
									"query": [
										{
											"key": "populate",
											"value": "relations"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\",\n        \"name\": \"0.1\",\n        \"api\": \"06e41ca3-8bea-4bc5-a726-70338b9f1940\",\n        \"createdBy\": \"\",\n        \"updatedBy\": \"5665\",\n        \"createdAt\": \"\",\n        \"updatedAt\": \"\",\n        \"summary\": \"\",\n        \"stage\": \"\",\n        \"visibility\": \"\",\n        \"relations\": {\n            \"schema\": [\"\"],\n            \"monitor\": [\n                \"ad7d7418-5b2f-43d6-ae78-dcf6eb5a49af\"\n            ],\n            \"mock\": [\n                \"63334d1b-a8d9-4d77-a6cd-c4b0877426dc\"\n            ],\n            \"environment\": [],\n            \"documentation\": [],\n            \"contracttest\": [\n                \"392355ae-5f06-47b7-a5b6-854b8be41bd5\"\n            ],\n            \"testsuite\": [],\n            \"integrationtest\": []\n        }\n    }\n}"
						},
						{
							"id": "37722e28-e959-4584-9af1-c775c133bb91",
							"name": "Get an API Version",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/06e41ca3-8bea-4bc5-a726-70338b9f1940/versions/03c17f53-7e2e-427d-b55a-006b244f29ff",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"06e41ca3-8bea-4bc5-a726-70338b9f1940",
										"versions",
										"03c17f53-7e2e-427d-b55a-006b244f29ff"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\",\n\t\"meta\": {\n\t\t\"model\": \"apiversion\",\n\t\t\"action\": \"find\"\n\t},\n\t\"data\": {\n\t\t\"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\",\n\t\t\"name\": \"0.1\",\n\t\t\"api\": \"06e41ca3-8bea-4bc5-a726-70338b9f1940\",\n\t\t\"schema\": [\"3484cd1e-e00d-4c39-aea4-539663afe898\"],\n\t\t\"createdBy\": \"5665\",\n\t\t\"updatedBy\": \"5665\",\n\t\t\"createdAt\": \"2019-07-21T16:31:15.000Z\",\n        \"updatedAt\": \"2019-07-21T16:31:15.000Z\",\n        \"summary\": \"\",\n        \"stage\": \"\",\n        \"visibility\": \"\"\n\t}\n}"
						}
					]
				},
				{
					"name": "[Deprecated] Add mock to API version",
					"id": "0f03d631-2e33-4e39-8923-26ebfb9ef6dd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-access-token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"collectionId\": \"{{collectionUID}}\", // Pass either of collectionId or schema object.\n\t\"schema\": {  // If both are passed then schema object will be ignored\n\t\t\"name\": \"{{toBeGeneratedCollectionName}}\",\n\t\t\"id\": \"{{schemaId}}\"\n\t},\n\t\"mock\": {\n\t\t\"name\": \"{{mockName}}\",\n\t\t...{{Other mock properties}}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/mocks?workspace={{workspaceId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersionId}}",
								"mocks"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}"
								}
							]
						}
					},
					"response": [
						{
							"id": "fd8f50f3-e95a-4303-9948-1b341bb3ab2d",
							"name": "Add mock to api version from existing collection",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"collectionId\": \"1122-4a5c117a-06ad-40fd-9414-912e058dd8e0\",\n\t\"mock\": {\n\t\t\"name\": \"{{mockName}}\"\n\t}\n}"
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/mocks",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"mocks"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{apiVersionId}}\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"addMockOrMonitor\"\n    },\n    \"data\": {\n        \"collection\": {\n            \"id\": \"4a5c117a-06ad-40fd-9414-912e058dd8e0\",\n            \"uid\": \"1122-4a5c117a-06ad-40fd-9414-912e058dd8e0\"\n        },\n        \"mock\": {\n            \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\"\n        }\n    }\n}"
						},
						{
							"id": "283b0bd9-7b24-400f-9dca-9f1cbfc317d8",
							"name": "Add mock to api version from Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"schema\": {\n\t\t\"name\": \"Mocked collection\",\n\t\t\"id\": \"1122-4a5c117a-06ad-40fd-9414-912e058dd8e0\"\n\t},\n\t\"mock\": {\n\t\t\"name\": \"New mock\",\n\t\t\"id\": \"1122-4a5c117a-06ad-40fd-9414-912e058dd8e1\"\n\t}\n}"
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/mocks",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"mocks"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{apiVersionId}}\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"addMockOrMonitor\"\n    },\n    \"data\": {\n        \"collection\": {\n            \"id\": \"4a5c117a-06ad-40fd-9414-912e058dd8e0\",\n            \"uid\": \"1122-4a5c117a-06ad-40fd-9414-912e058dd8e0\"\n        },\n        \"mock\": {\n            \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "[Deprecated] Add monitor to API version",
					"id": "84fa7fa8-aaff-4ed5-8d3b-6d2d6fbcfc26",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-access-token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"collectionId\": \"{{collectionUID}}\", // Pass either of collectionId or schema object.\n\t\"schema\": {  // If both are passed then schema object will be ignored\n\t\t\"name\": \"{{toBeGeneratedCollectionName}}\",\n\t\t\"id\": \"{{schemaId}}\"\n\t},\n\t\"monitor\": {\n\t\t\"name\": \"{{monitorName}}\",\n\t\t...{{Other monitor properties}}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/monitors?workspace={{workspaceId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersionId}}",
								"monitors"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}"
								}
							]
						}
					},
					"response": [
						{
							"id": "577a4d8f-d700-4781-86e8-80a10f959ae2",
							"name": "Add monitor to api version from existing collection",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"collectionId\": \"{{collectionId}}\",\n\t\"monitor\": {\n\t\t\"name\": \"{{monitorName}}\",\n\t\t\"options\": {\n\t\t\t\"strictSSL\": true\t\n\t\t},\n\t\t\"schedule\": {\n\t\t\t\"cronPattern\": \"0 12 * * *\",\n\t\t\t\"timeZone\": \"America/Chicago\"\n\t\t},\n\t\t\"distribution\": [\n\t\t\t{\n\t\t\t\t\"region\": \"us-east\",\n\t\t\t\t\"runCount\": 1\n\t\t\t}\t\n\t\t]\n\t}\n}"
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/monitors",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"monitors"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{apiVersionId}}\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"addMockOrMonitor\"\n    },\n    \"data\": {\n        \"collection\": {\n            \"id\": \"4a5c117a-06ad-40fd-9414-912e058dd8e0\",\n            \"uid\": \"1122-4a5c117a-06ad-40fd-9414-912e058dd8e0\"\n        },\n        \"monitor\": {\n            \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\"\n        }\n    }\n}"
						},
						{
							"id": "dffa1cf0-b509-4a9b-a129-aed30e889c2b",
							"name": "Add monitor to api version generating collection from schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"schema\": {\n\t\t\"name\": \"khaleesi\",\n\t\t\"id\": \"1122-4a5c117a-06ad-40fd-9414-912e058dd8e0\"\n\t},\n\t\"monitor\": {\n\t\t\"name\": \"little-finger\",\n\t\t\"options\": {\n\t\t\t\"strictSSL\": true\t\n\t\t},\n\t\t\"schedule\": {\n\t\t\t\"cronPattern\": \"0 12 * * *\",\n\t\t\t\"timeZone\": \"America/Chicago\"\n\t\t},\n\t\t\"distribution\": [\n\t\t\t{\n\t\t\t\t\"region\": \"us-east\",\n\t\t\t\t\"runCount\": 1\n\t\t\t}\n\t\t]\n\t}\n}"
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/monitors",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"monitors"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{apiVersionId}}\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"addMockOrMonitor\"\n    },\n    \"data\": {\n        \"collection\": {\n            \"id\": \"4a5c117a-06ad-40fd-9414-912e058dd8e0\",\n            \"uid\": \"1122-4a5c117a-06ad-40fd-9414-912e058dd8e0\"\n        },\n        \"monitor\": {\n            \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get relations in a version",
					"id": "63176b44-5e01-4831-bb56-587d7cfa8475",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Access-Token",
								"value": "{{accessToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersionId}}",
								"relations"
							]
						},
						"description": "Returns all the relation in a API version"
					},
					"response": [
						{
							"id": "8e52b174-c7e4-487c-901c-911f7a8e34b5",
							"name": "Get relations in a version (w/ type filtering)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations?type=environment",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"relations"
									],
									"query": [
										{
											"key": "type",
											"value": "environment"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"103eccbe-6a4e-4ee9-a498-169885976f87\",\n\t\"meta\": {\n\t\t\"model\": \"apiversion\",\n\t\t\"action\": \"getRelations\"\n\t},\n\t\"data\": {\n        \"environment\": {\n        \t\"5670e8c6-6ae8-4913-8051-9663b9d88774\": {\n                \"id\": \"5670e8c6-6ae8-4913-8051-9663b9d88774\",\n                \"name\": \"An environment\",\n                \"versionTag\": {\n                    \"id\": \"136d77c2-cfd8-49d3-a685-c23aab9216c5\",\n                    \"name\": \"Draft\"\n                },\n                \"updatedAt\": \"2019-07-31T08:15:15.000Z\"\n            },\n        \t\"9d1c8696-c4eb-44fe-bb44-afa52c7b0739\": {\n        \t\t\"id\": \"9d1c8696-c4eb-44fe-bb44-afa52c7b0739\",\n                \"name\": \"An environment returns\",\n                \"versionTag\": {\n                    \"id\": \"136d77c2-cfd8-49d3-a685-c23aab9216c4\",\n                    \"name\": \"Draft\"\n                },\n                \"updatedAt\": \"2019-07-31T08:15:15.000Z\"\n        \t}\n        }\n\t}\n}"
						},
						{
							"id": "7b9cd3f7-813f-40e1-b682-44ecec76d22a",
							"name": "Get relations in a version (w/ category filtering)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations?category=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"relations"
									],
									"query": [
										{
											"key": "category",
											"value": "develop"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"103eccbe-6a4e-4ee9-a498-169885976f87\",\n\t\"meta\": {\n\t\t\"model\": \"apiversion\",\n\t\t\"action\": \"getRelations\"\n\t},\n\t\"data\": {\n\t\t\"environment\": {},\n\t\t\"documentation\": {},\n        \"mock\": {\n        \t\"63334d1b-a8d9-4d77-a6cd-c4b0877426dc\": {\n        \t\t\"id\": \"63334d1b-a8d9-4d77-a6cd-c4b0877426dc\",\n        \t\t\"url\": \"https://something.mock.pstmn.io\",\n        \t\t\"versionTag\": {\n                    \"id\": \"136d77c2-cfd8-49d3-a685-c23aab9216c5\",\n                    \"name\": \"Draft\"\n                },\n        \t\t\"createdAt\": \"2019-0101 12:34:56\",\n        \t\t\"createdBy\": \"5665\",\n        \t\t\"updatedBy\": \"5665\",\n        \t\t\"validation\": {\n        \t\t\t\"status\": \"invalid\",\n        \t\t\t\"message\": \"3 errors found\"\n        \t\t}\n        \t}\n        }\n\t}\n}"
						},
						{
							"id": "32174b2c-284a-4177-aca0-b540fa35794c",
							"name": "Get relations in a version (w/ revisiontags populated)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/06e41ca3-8bea-4bc5-a726-70338b9f1940/versions/103eccbe-6a4e-4ee9-a498-169885976f87/relations?populate=versiontag",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"06e41ca3-8bea-4bc5-a726-70338b9f1940",
										"versions",
										"103eccbe-6a4e-4ee9-a498-169885976f87",
										"relations"
									],
									"query": [
										{
											"key": "populate",
											"value": "versiontag"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"103eccbe-6a4e-4ee9-a498-169885976f87\",\n\t\"meta\": {\n\t\t\"model\": \"apiversion\",\n\t\t\"action\": \"getRelations\"\n\t},\n\t\"data\": {\n        \"environment\": {},\n        \"documentation\": {},\n        \"testsuite\": {},\n        \"integrationtest\": {},\n        \"loadtest\": {},\n        \"monitor\": {\n        \t\"ad7d7418-5b2f-43d6-ae78-dcf6eb5a49af\": {\n        \t\t\"id\": \"ad7d7418-5b2f-43d6-ae78-dcf6eb5a49af\",\n        \t\t\"name\": \"A monitor\",\n        \t\t\"versionTag\": {\n        \t\t\t\"id\": \"9d1c8696-c4eb-44fe-bb44-afa52c7b0739\",\n        \t\t\t\"name\": \"0.1\",\n        \t\t\t\"indicators\": [\n        \t\t\t\t{\n        \t\t\t\t\t\"type\": \"warning\",\n        \t\t\t\t\t\"name\": \"versionMismatch\",\n        \t\t\t\t\t\"message\": {\n        \t\t\t\t\t\t\"template\": \"The provided version does not match the whatever version. {{url}}\",\n        \t\t\t\t\t\t\"variables\": {\n        \t\t\t\t\t\t\t\"url\": \"\"\n        \t\t\t\t\t\t}\n        \t\t\t\t\t}\n        \t\t\t\t}\n        \t\t\t]\n        \t\t},\n        \t\t\"createdAt\": \"2019-0101 12:34:56\",\n        \t\t\"createdBy\": \"5665\",\n        \t\t\"updatedBy\": \"5665\",\n        \t\t\"validation\": {\n        \t\t\t\"status\": \"invalid\",\n        \t\t\t\"message\": \"3 errors found\"\n        \t\t}\n        \t\t\n        \t}\n        },\n        \"mock\": {\n        \t\"63334d1b-a8d9-4d77-a6cd-c4b0877426dc\": {\n        \t\t\"id\": \"63334d1b-a8d9-4d77-a6cd-c4b0877426dc\",\n        \t\t\"url\": \"https://something.mock.pstmn.io\",\n        \t\t\"versionTag\": {\n        \t\t\t\"id\": \"28d137e9-0e87-4f2e-be4d-1311a9b31f78\",\n        \t\t\t\"name\": \"0.1\"\n        \t\t},\n        \t\t\"createdAt\": \"2019-0101 12:34:56\",\n        \t\t\"createdBy\": \"5665\",\n        \t\t\"updatedBy\": \"5665\",\n        \t\t\"validation\": {\n        \t\t\t\"status\": \"invalid\",\n        \t\t\t\"message\": \"2 errors found\"\n        \t\t}\n        \t}\n        },\n        \"contracttest\": {\n        \t\"392355ae-5f06-47b7-a5b6-854b8be41bd5\": {\n        \t\t\"id\": \"392355ae-5f06-47b7-a5b6-854b8be41bd5\",\n        \t\t\"name\": \"Some contract test\",\n        \t\t\"versionTag\": {\n        \t\t\t\"id\": \"ce1a3aa7-70da-4ebf-850b-b6e613c73ac7\",\n        \t\t\t\"name\": \"0.1\"\n        \t\t},\n        \t\t\"createdAt\": \"2019-0101 12:34:56\",\n        \t\t\"createdBy\": \"5665\",\n        \t\t\"updatedBy\": \"5665\",\n        \t\t\"validation\": {\n        \t\t\t\"status\": \"invalid\",\n        \t\t\t\"message\": \"3 errors found\"\n        \t\t}\n        \t}\n        }\n\t}\n}"
						},
						{
							"id": "3e4239bf-2503-4c5e-a43a-153f0baffacb",
							"name": "Get relations in a version (with actions)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"relations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"103eccbe-6a4e-4ee9-a498-169885976f87\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"getRelations\"\n    },\n    \"data\": {\n        \"monitor\": {\n            \"ad7d7418-5b2f-43d6-ae78-dcf6eb5a49af\": {\n                \"id\": \"ad7d7418-5b2f-43d6-ae78-dcf6eb5a49af\",\n                \"name\": \"some name\",\n                \"versiontag\": {\n                    \"id\": \"latest\",\n                    \"name\": \"CURRENT\",\n                    \"system\": true,\n                    \"indicators\": [\n                        {\n                            \"type\": \"info\",\n                            \"name\": \"versionMismatch\",\n                            \"message\": {\n                                \"template\": \"There's no version tag for this {{type}}. Add a version tag to link this {{type}} to a specific version of your API.<br/><br/>[Learn more]({{docs_link}}) about version tags.\",\n                                \"variables\": {\n                                    \"type\": \"contract test\",\n                                    \"docs_link\": \"https://go.pstmn.io/version-tags\"\n                                }\n                            }\n                        }\n                    ]\n                },\n                \"updatedAt\": \"2019-01-01 12:34:56\"\n            }\n        },\n        \"mock\": {\n            \"8958c176-2d09-4ac8-831a-c991525bac4b\": {\n                \"id\": \"8958c176-2d09-4ac8-831a-c991525bac4b\",\n                \"name\": \"ccvcv\",\n                \"url\": \"https://8958c176-2d09-4ac8-831a-c991525bac4b.mock-beta.pstmn.io\",\n                \"versionTag\": {\n                    \"id\": \"latest\",\n                    \"name\": \"CURRENT\",\n                    \"system\": true,\n                    \"indicators\": [\n                        {\n                            \"type\": \"info\",\n                            \"name\": \"versionMismatch\",\n                            \"message\": {\n                                \"template\": \"There's no version tag for this {{type}}. Add a version tag to link this {{type}} to a specific version of your API.<br/><br/>[Learn more]({{docs_link}}) about version tags.\",\n                                \"variables\": {\n                                    \"type\": \"mock\",\n                                    \"docs_link\": \"https://go.pstmn.io/version-tags\"\n                                }\n                            }\n                        }\n                    ]\n                },\n                \"updatedAt\": \"2019-08-07T07:57:33.000Z\",\n                \"actions\": {\n                    \"copyLink\": {\n                        \"type\": \"mockURL\",\n                        \"data\": \"https://d1a16119-f03c-44c9-a125-70e515a35ab8.mock.pstmn.io\"\n                    },\n                    \"edit\": {\n                        \"type\": \"openAuthenticatedURL\",\n                        \"data\": \"https://go.postman.co/mock/4451e51a-b2ac-42a3-8cbc-b040208a32ed\"\n                    }\n                }\n            }\n        },\n        \"contracttest\": {\n            \"392355ae-5f06-47b7-a5b6-854b8be41bd5\": {\n                \"id\": \"392355ae-5f06-47b7-a5b6-854b8be41bd5\",\n                \"name\": \"\",\n                \"versiontag\": {\n                    \"id\": \"latest\",\n                    \"name\": \"CURRENT\",\n                    \"system\": true,\n                    \"indicators\": [\n                        {\n                            \"type\": \"info\",\n                            \"name\": \"versionMismatch\",\n                            \"message\": {\n                                \"template\": \"There's no version tag for this {{type}}. Add a version tag to link this {{type}} to a specific version of your API.<br/><br/>[Learn more]({{docs_link}}) about version tags.\",\n                                \"variables\": {\n                                    \"type\": \"contract test\",\n                                    \"docs_link\": \"https://go.pstmn.io/version-tags\"\n                                }\n                            }\n                        }\n                    ]\n                },\n                \"createdBy\": \"5665\",\n                \"createdAt\": \"2019-01-01 12:34:56\",\n                \"updatedAt\": \"2019-01-01 12:34:56\"\n            }\n        },\n        \"documentation\": {\n            \"392355ae-5f06-47b7-a5b6-854b8be41bd5\": {\n                \"id\": \"392355ae-5f06-47b7-a5b6-854b8be41bd5\",\n                \"name\": \"\",\n                \"versiontag\": {\n                    \"id\": \"latest\",\n                    \"name\": \"CURRENT\",\n                    \"system\": true,\n                    \"indicators\": [\n                        {\n                            \"type\": \"info\",\n                            \"name\": \"versionMismatch\",\n                            \"message\": {\n                                \"template\": \"There's no version tag for this {{type}}. Add a version tag to link this {{type}} to a specific version of your API.<br/><br/>[Learn more]({{docs_link}}) about version tags.\",\n                                \"variables\": {\n                                    \"type\": \"contract test\",\n                                    \"docs_link\": \"https://go.pstmn.io/version-tags\"\n                                }\n                            }\n                        }\n                    ]\n                },\n                \"createdBy\": \"5665\",\n                \"createdAt\": \"2019-01-01 12:34:56\",\n                \"updatedAt\": \"2019-01-01 12:34:56\",\n                \"actions\": {\n       \t\t\t\t\"edit\": {\n       \t\t\t\t\t\"type\": \"collectionId\",\n       \t\t\t\t\t\"data\": \"55850-392355ae-5f06-47b7-a5b6-854b8be41bd7\"\n       \t\t\t\t}\n       \t\t\t}\n            }\n        },\n        \"integrationtest\": {\n            \"fe273bc4-09b5-4ee4-af35-c0312e59f87f\": {\n                \"id\": \"fe273bc4-09b5-4ee4-af35-c0312e59f87f\",\n                \"name\": \"C3\",\n                \"versionTag\": {\n                    \"id\": \"136d77c2-cfd8-49d3-a685-c23aab9216c5\",\n                    \"name\": \"Draft\"\n                },\n                \"updatedAt\": \"2019-07-31T08:15:15.000Z\"\n            }\n        }\n    }\n}"
						},
						{
							"id": "d894b6d4-c844-4512-a0cc-421933f05acb",
							"name": "Get relations in a version (w/ latest collection run of testsuite)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{versionId}}/relations?populate=versiontag&access_token=xyz&user_id=U1&populate=validation&populate=latestCollectionRun",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{versionId}}",
										"relations"
									],
									"query": [
										{
											"key": "populate",
											"value": "versiontag"
										},
										{
											"key": "access_token",
											"value": "xyz"
										},
										{
											"key": "user_id",
											"value": "U1"
										},
										{
											"key": "populate",
											"value": "validation"
										},
										{
											"key": "populate",
											"value": "latestCollectionRun"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"action\": \"getRelations\",\n        \"model\": \"apiversion\",\n        \"model_id\": \"b77e07f6-4226-4df6-aa65-569002c45939\"\n    },\n    \"testsuite\": {\n        \"10c67fab-caa4-416b-b622-a74642be81ea\": {\n            \"id\": \"10c67fab-caa4-416b-b622-a74642be81ea\",\n            \"modelId\": \"U1-b5c8f40a-dd21-447d-a23d-867fcb710ec6\",\n            \"links\": {\n                \"name\": {\n                    \"type\": \"openAuthenticatedURL\",\n                    \"action\": \"https://go.postman.co/collections/U1-b5c8f40a-dd21-447d-a23d-867fcb710ec6\"\n                }\n            },\n            \"name\": \"C2\",\n            \"versionTag\": {\n                \"id\": \"latest\",\n                \"name\": \"CURRENT\",\n                \"system\": true,\n                \"indicators\": [\n                    {\n                        \"type\": \"info\",\n                        \"name\": \"versionMismatch\",\n                        \"message\": {\n                            \"template\": \"There's no version tag for this {{type}}. Add a version tag to link this {{type}} to a specific version of your API.<br/><br/>[Learn more]({{docs_link}}) about version tags.\",\n                            \"variables\": {\n                                \"type\": \"test suite\",\n                                \"docs_link\": \"https://go.pstmn.io/version-tags\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"updatedAt\": \"2020-10-28T13:01:36.000Z\",\n            \"createdAt\": \"2020-10-28T13:01:36.000Z\",\n            \"latestCollectionRun\": {\n                \"id\": \"24b73f99-5840-4377-b449-16b8c07bcadf\",\n                \"failedTestCount\": 2,\n                \"passedTestCount\": 9\n            },\n            \"validation\": {\n                \"type\": \"warning\",\n                \"message\": \"Issues found\",\n                \"actions\": {\n                    \"popup\": {\n                        \"description\": \"The underlying collection is not in sync with the API schema. Review these issues to keep the collection in sync.\",\n                        \"actions\": [\n                            {\n                                \"type\": \"refresh\",\n                                \"label\": \"Validate Again\"\n                            },\n                            {\n                                \"type\": \"link\",\n                                \"label\": \"Review Issues\",\n                                \"url\": {\n                                    \"type\": \"openAuthenticatedURL\",\n                                    \"link\": \"https://go.postman.co/apis/904c5f39-dc50-432e-919e-f977ac7a2006/versions/10b198cf-f1bd-4cec-bf5b-8f6367996183/testsuite/10c67fab-caa4-416b-b622-a74642be81ea/update\"\n                                }\n                            }\n                        ]\n                    }\n                }\n            }\n        }\n    }\n}"
						},
						{
							"id": "84b0f2d2-a100-40ef-ba07-4d30645d16e7",
							"name": "Get relations in a version (w/ schema)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations?type=schema",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"relations"
									],
									"query": [
										{
											"key": "type",
											"value": "schema"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"103eccbe-6a4e-4ee9-a498-169885976f87\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"getRelations\"\n    },\n    \"data\": {\n        \"schema\": {\n            \"5670e8c6-6ae8-4913-8051-9663b9d88774\": {\n                \"id\": \"5670e8c6-6ae8-4913-8051-9663b9d88774\"\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Delete an API Version",
					"id": "84f5ec87-5985-4a9c-aafe-06268ba04539",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Access-Token",
								"type": "text",
								"value": "{{accessToken}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersionId}}"
							]
						},
						"description": "This endpoint creates an API Version for an API."
					},
					"response": [
						{
							"id": "974132d0-1b7d-4bb7-961e-6cffaa6e96ad",
							"name": "Delete an API Version",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Access-Token",
										"type": "text",
										"value": "{{accessToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/apis/06e41ca3-8bea-4bc5-a726-70338b9f1940/versions/03c17f53-7e2e-427d-b55a-006b244f29ff",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"06e41ca3-8bea-4bc5-a726-70338b9f1940",
										"versions",
										"03c17f53-7e2e-427d-b55a-006b244f29ff"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\",\n\t\"meta\": {\n\t\t\"model\": \"apiversion\",\n\t\t\"action\": \"destroy\"\n\t},\n\t\"data\": {\n\t\t\"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\"\n\t},\n\t\"revision\": 123\n}"
						}
					]
				},
				{
					"name": "Update an API Version",
					"id": "4cd72ce3-7a39-4cdf-89dd-51249b3c3e20",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-Access-Token",
								"type": "text",
								"value": "{{accessToken}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"1.0\",\n\t\"description\": \"Hidden easter egg\",\n    \"summary\": \"No Summary\"\n}"
						},
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersionId}}"
							]
						},
						"description": "This endpoint creates an API Version for an API."
					},
					"response": [
						{
							"id": "94124d45-09c7-4569-be3f-19e0215da824",
							"name": "Update an API Version",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Access-Token",
										"type": "text",
										"value": "{{accessToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"1.0\",\n    \"summary\": \"\",\n    \"stage\": \"\",\n    \"visibility\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{apiVersionId}}\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"update\"\n    },\n    \"data\": {\n        \"id\": \"{{apiVersionId}}\",\n        \"name\": \"2.0\",\n        \"createdAt\": \"2019-07-26T11:24:15.000Z\",\n        \"updatedAt\": \"2019-08-09T09:27:36.000Z\",\n        \"api\": \"{{apiId}}\",\n        \"createdBy\": \"12\",\n        \"updatedBy\": \"12\",\n        \"summary\": \"\",\n        \"stage\": \"\",\n        \"visibility\": \"\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Stages of an API Version",
					"id": "75fcf1d0-ada8-40e1-91df-69c5b8de1ec1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/apis/versions/stages",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"versions",
								"stages"
							]
						}
					},
					"response": [
						{
							"id": "23b30dee-85fa-4d81-b1b2-756df6763508",
							"name": "Get Stages of an API Version",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/versions/stages",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"versions",
										"stages"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"stages\"\n    },\n    \"data\": [\n        \"Planning\",\n        \"In Production\",\n        \"In design\",\n        \"In Review\",\n        \"In Development\",\n        \"Code Review\",\n        \"Test\",\n        \"SecurityReview\",\n        \"Deprecated\",\n        \"Alpha\",\n        \"Beta\",\n        \"Sunset\",\n        \"Retired\"\n    ]\n}"
						}
					]
				},
				{
					"name": "V10 Migration",
					"id": "137038c2-7267-480d-a958-0f62d7bbc3e8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{access_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:versionId/v10-migration",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":versionId",
								"v10-migration"
							],
							"variable": [
								{
									"key": "apiId",
									"value": "{{apiId}}"
								},
								{
									"key": "versionId",
									"value": "{{apiversionId}}"
								}
							]
						}
					},
					"response": [
						{
							"id": "650d4ea0-d965-4749-b887-745f3bbd628f",
							"name": "Successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/v10-migration",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"v10-migration"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{apiId}}"
										},
										{
											"key": "versionId",
											"value": "{{apiversionId}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"success\": true\n}"
						},
						{
							"id": "d5ae91d5-c82c-4552-b719-0412ef391174",
							"name": "Failed to migrate Git integration",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/v10-migration",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"v10-migration"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{apiId}}"
										},
										{
											"key": "versionId",
											"value": "{{apiversionId}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"message\": \"Failed to migrate the API version\",\n        \"reason\": \"API Git V1 integration is in locked state and cannot be migrated to V2\"\n    }\n}"
						},
						{
							"id": "4ca87e80-87c4-4971-aaec-1a70e4c1754d",
							"name": "V10 Migration",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{access_token}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/v10-migration",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"v10-migration"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{apiId}}"
										},
										{
											"key": "versionId",
											"value": "{{apiversionId}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"serverError\",\n        \"message\": \"Something went wrong\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get visibility values of an API Version",
					"id": "80e50ecf-b4d5-4dd9-a9e1-6a0f4aec3ee0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/apis/versions/visibility",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"versions",
								"visibility"
							]
						}
					},
					"response": [
						{
							"id": "c08376fd-c369-47f9-91a0-5e6928dfbcd5",
							"name": "Get visibility values of an API Version",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/versions/visibility",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"versions",
										"visibility"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"visibility\"\n    },\n    \"data\": [\n        \"public\",\n        \"private\"\n    ]\n}"
						}
					]
				}
			],
			"id": "fa1c97c8-888c-4fe7-b457-b85ef6a2fb66"
		},
		{
			"name": "Schema",
			"item": [
				{
					"name": "[Deprecated][Older Apps] Generate Collections from Schema",
					"id": "8ad5e46d-f53f-4415-aabd-8f891b32370d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Access-Token",
								"type": "text",
								"value": "{{accessToken}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{collectionName}}\",\n    \"relations\": [\n        {\n            \"type\": \"{{relationType1}}\"\n        },\n        {\n            \"type\": \"{{relationType2}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/schemas/:schemaId/collections?workspace={{workspaceId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":apiVersionId",
								"schemas",
								":schemaId",
								"collections"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}"
								}
							],
							"variable": [
								{
									"key": "apiId",
									"value": "{{apiId}}"
								},
								{
									"key": "apiVersionId",
									"value": "{{apiVersionId}}"
								},
								{
									"key": "schemaId",
									"value": "{{schemaId}}"
								}
							]
						},
						"description": "Generates a postman collection on the server using previously uploaded schema."
					},
					"response": [
						{
							"id": "c7fdb5ab-26cf-461a-b66d-991d90b18458",
							"name": "Success: Generate collections",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Access-Token",
										"value": "{{accessToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"My Sample Collection\",\n\t\"relations\": [\n\t\t{\n\t\t\t\"type\": \"documentation\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"testsuite\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/schemas/:schemaId/collections?workspace=W1",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"schemas",
										":schemaId",
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "W1"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "cf72594d-d37c-43ce-8281-4fd731f6a14c"
										},
										{
											"key": "apiVersionId",
											"value": "ad810c39-df60-434e-a76f-a2192cd8d81f"
										},
										{
											"key": "schemaId",
											"value": "5d810c39-df60-434e-a76f-a2192cd8d816"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"5d810c39-df60-434e-a76f-a2192cd8d816\",\n    \"meta\": {\n        \"model\": \"schema\",\n        \"action\": \"generateCollection\"\n    },\n    \"data\": {\n    \t\"collection\": {\n    \t\t\"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n        \t\"uid\": \"5852-e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\"\t\n    \t},\n    \t\"relations\": [\n    \t\t{\n    \t\t\t\"type\": \"documentation\",\n    \t\t\t\"id\": \"cf72594d-d37c-43ce-8281-a76f-a2192cd8d81f\"\n    \t\t},\n    \t\t{\n    \t\t\t\"type\": \"testsuite\",\n    \t\t\t\"id\": \"e3b3a0b7-d37c-43ce-8281-a76f-a2192cd8d816\"\n    \t\t}\n    \t]\n    }\n}"
						}
					]
				},
				{
					"name": "Fetch schema for a collection",
					"id": "8ee08df1-3aa4-40e8-82f7-b232ea76fd12",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/collections/{{collectionUID}}/schema?schemaTypes=openapi3,openapi2,raml&populate=api&populate=apiVersion&updatedAt=updatedAt",
							"host": [
								"{{url}}"
							],
							"path": [
								"collections",
								"{{collectionUID}}",
								"schema"
							],
							"query": [
								{
									"key": "schemaTypes",
									"value": "openapi3,openapi2,raml"
								},
								{
									"key": "populate",
									"value": "api"
								},
								{
									"key": "populate",
									"value": "apiVersion"
								},
								{
									"key": "updatedAt",
									"value": "updatedAt",
									"description": "The updated at of the schema version the client has If not passed then the new schema will always be sent"
								}
							]
						}
					},
					"response": [
						{
							"id": "d96be101-081d-4bda-8ae4-c7f3960e26ba",
							"name": "Fetch schema for a collection",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/collections/{{collectionUID}}/schema?schemaTypes=openapi3",
									"host": [
										"{{url}}"
									],
									"path": [
										"collections",
										"{{collectionUID}}",
										"schema"
									],
									"query": [
										{
											"key": "schemaTypes",
											"value": "openapi3"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"305475-0b0cfc23-1baf-44ef-9edc-f23d7ad21444\",\n    \"meta\": {\n        \"model\": \"collection\",\n        \"action\": \"fetchSchema\"\n    },\n    \"data\": {\n    \t\"schema\": {\n    \t\t\"id\": \"5f6a11bc-c8dd-4def-9a33-6a630f102f26\",\n\t        \"updatedAt\": \"2019-12-17T13:10:59.000Z\",\n\t        \"schema\": \"{\\\"openapi\\\":\\\"3.0\\\",\\\"swagger\\\":\\\"2.0\\\",\\\"version\\\":\\\"1.0\\\",\\\"info\\\":{\\\"title\\\":\\\"Sample API Server - JSON\\\",\\\"version\\\":\\\"v0.3.0\\\"},\\\"paths\\\":{\\\"/api/books\\\":{\\\"get\\\":{\\\"description\\\":\\\"Sends list of books\\\",\\\"produces\\\":[\\\"application/json\\\"],\\\"schemes\\\":[\\\"https\\\"],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"OK\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/books\\\"}}}}},\\\"/api/authors\\\":{\\\"get\\\":{\\\"description\\\":\\\"Send list of authors\\\",\\\"produces\\\":[\\\"application/json\\\"],\\\"schemes\\\":[\\\"https\\\"],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"OK\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/componenets/schemas/author\\\"}}}}},\\\"/api/book/:name\\\":{\\\"get\\\":{\\\"description\\\":\\\"Send a particular book name\\\",\\\"produces\\\":[\\\"application/json\\\"],\\\"schemes\\\":[\\\"https\\\"],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"OK\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/book\\\"}}}}}},\\\"components\\\":{\\\"schemas\\\":{\\\"books\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"title\\\":{\\\"type\\\":\\\"string\\\"},\\\"author\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"author\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"}}}}}}\",\n\t        \"type\": \"openapi3\",\n\t        \"language\": \"json\"\n    \t}\n    }\n}"
						},
						{
							"id": "9e987171-60a3-4989-b18e-5d0c0c952a40",
							"name": "Fetch schema for a collection (with api and api info)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/collections/{{collectionUID}}/schema?schemaTypes=openapi3,openapi2,raml&statusOnly=true|false&populate[]=api&populate[]=apiversion",
									"host": [
										"{{url}}"
									],
									"path": [
										"collections",
										"{{collectionUID}}",
										"schema"
									],
									"query": [
										{
											"key": "schemaTypes",
											"value": "openapi3,openapi2,raml"
										},
										{
											"key": "statusOnly",
											"value": "true|false",
											"description": "If true then schema content won't be sent if schema hasn't changed"
										},
										{
											"key": "populate[]",
											"value": "api"
										},
										{
											"key": "populate[]",
											"value": "apiversion"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"305475-0b0cfc23-1baf-44ef-9edc-f23d7ad21444\",\n    \"meta\": {\n        \"model\": \"collection\",\n        \"action\": \"fetchSchema\"\n    },\n    \"data\": {\n    \t\"schema\": {\n    \t\t\"id\": \"5f6a11bc-c8dd-4def-9a33-6a630f102f26\",\n\t        \"updatedAt\": \"2019-12-17T13:10:59.000Z\",\n\t        \"schema\": \"{\\\"openapi\\\":\\\"3.0\\\",\\\"swagger\\\":\\\"2.0\\\",\\\"version\\\":\\\"1.0\\\",\\\"info\\\":{\\\"title\\\":\\\"Sample API Server - JSON\\\",\\\"version\\\":\\\"v0.3.0\\\"},\\\"paths\\\":{\\\"/api/books\\\":{\\\"get\\\":{\\\"description\\\":\\\"Sends list of books\\\",\\\"produces\\\":[\\\"application/json\\\"],\\\"schemes\\\":[\\\"https\\\"],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"OK\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/books\\\"}}}}},\\\"/api/authors\\\":{\\\"get\\\":{\\\"description\\\":\\\"Send list of authors\\\",\\\"produces\\\":[\\\"application/json\\\"],\\\"schemes\\\":[\\\"https\\\"],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"OK\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/componenets/schemas/author\\\"}}}}},\\\"/api/book/:name\\\":{\\\"get\\\":{\\\"description\\\":\\\"Send a particular book name\\\",\\\"produces\\\":[\\\"application/json\\\"],\\\"schemes\\\":[\\\"https\\\"],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"OK\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/book\\\"}}}}}},\\\"components\\\":{\\\"schemas\\\":{\\\"books\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"title\\\":{\\\"type\\\":\\\"string\\\"},\\\"author\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"author\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"}}}}}}\",\n\t        \"type\": \"openapi3\",\n\t        \"language\": \"json\"\n    \t},\n        \"api\": {\n        \t\"id\": \"5f6a11bc-c8dd-4def-9a33-6a630f102f26\",\n        \t\"name\": \"My api\"\n        },\n        \"apiVersion\": {\n        \t\"id\": \"5f6a11bc-c8dd-4def-9a33-6a630f102f26\",\n        \t\"name\": \"Api Version name\"\n        }\n    }\n}"
						},
						{
							"id": "58af937e-12d6-4cc2-9661-d86ef0fd10fa",
							"name": "Fetch schema for a collection (with only api information)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/collections/{{collectionUID}}/schema?schemaTypes=openapi3,openapi2,raml&statusOnly=true|false&populate[]=api",
									"host": [
										"{{url}}"
									],
									"path": [
										"collections",
										"{{collectionUID}}",
										"schema"
									],
									"query": [
										{
											"key": "schemaTypes",
											"value": "openapi3,openapi2,raml"
										},
										{
											"key": "statusOnly",
											"value": "true|false",
											"description": "If true then schema content won't be sent if schema hasn't changed"
										},
										{
											"key": "populate[]",
											"value": "api",
											"description": "If set then will return api info as well"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"305475-0b0cfc23-1baf-44ef-9edc-f23d7ad21444\",\n    \"meta\": {\n        \"model\": \"collection\",\n        \"action\": \"fetchSchema\"\n    },\n    \"data\": {\n        \"schema\": {\n            \"id\": \"5f6a11bc-c8dd-4def-9a33-6a630f102f26\",\n            \"updatedAt\": \"2019-12-17T13:10:59.000Z\",\n            \"schema\": \"{\\\"openapi\\\":\\\"3.0\\\",\\\"swagger\\\":\\\"2.0\\\",\\\"version\\\":\\\"1.0\\\",\\\"info\\\":{\\\"title\\\":\\\"Sample API Server - JSON\\\",\\\"version\\\":\\\"v0.3.0\\\"},\\\"paths\\\":{\\\"/api/books\\\":{\\\"get\\\":{\\\"description\\\":\\\"Sends list of books\\\",\\\"produces\\\":[\\\"application/json\\\"],\\\"schemes\\\":[\\\"https\\\"],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"OK\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/books\\\"}}}}},\\\"/api/authors\\\":{\\\"get\\\":{\\\"description\\\":\\\"Send list of authors\\\",\\\"produces\\\":[\\\"application/json\\\"],\\\"schemes\\\":[\\\"https\\\"],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"OK\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/componenets/schemas/author\\\"}}}}},\\\"/api/book/:name\\\":{\\\"get\\\":{\\\"description\\\":\\\"Send a particular book name\\\",\\\"produces\\\":[\\\"application/json\\\"],\\\"schemes\\\":[\\\"https\\\"],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"OK\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/components/schemas/book\\\"}}}}}},\\\"components\\\":{\\\"schemas\\\":{\\\"books\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"title\\\":{\\\"type\\\":\\\"string\\\"},\\\"author\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"author\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"}}}}}}\",\n\t        \"type\": \"openapi3\",\n\t        \"language\": \"json\"\n        },\n        \"api\": {\n            \"id\": \"5f6a11bc-c8dd-4def-9a33-6a630f102f26\",\n            \"name\": \"My api\"\n        }\n    }\n}"
						}
					]
				}
			],
			"id": "45d4fead-68c3-479b-a47a-5eca2176ffe5",
			"description": "The checksum can be calculated using this function\n\n```\nfunction calculateChecksum (fileContent) {\n\trequire('crypto').createHash('md5').update(fileContent).digest('hex');\n}\n```",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "2ac395d0-72fe-4be5-9c49-26d656a7f722"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "48d48a8e-4482-407f-9e9d-a7f7be50a63e"
					}
				}
			]
		},
		{
			"name": "Relations & Entities",
			"item": [
				{
					"name": "Get all \"possible\" entities for a type (for an API Version)",
					"id": "7bcd1460-f387-439d-961a-772c33cd5066",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/entities/{{entityType}}?workspace={{workspaceId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersionId}}",
								"entities",
								"{{entityType}}"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}"
								}
							]
						},
						"description": "This endpoint would also require the workspace context to be passed along."
					},
					"response": [
						{
							"id": "403d4410-9367-487d-ba2d-eb0c9b562ba7",
							"name": "Get all \"possible\" entities for a type Mock (for an API Version)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/entities/mock?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"entities",
										"mock"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"fdd171e2-09f5-426d-9b3e-6c13c119e1b3\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"getEntities\"\n    },\n    \"data\": [\n        {\n            \"id\": \"c48b37ac-e7ab-4dce-abcb-e27e4b8bc790\",\n            \"name\": \"Sync Service Mock\",\n            \"url\": \"https://8958c176-2d09-4ac8-831a-c991525bac4b.mock-beta.pstmn.io\"\n        }\n    ]\n}"
						},
						{
							"id": "e482f5b7-4c6d-4500-8264-bfe04ac22090",
							"name": "Get all \"possible\" entities for an API",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/fdd171e2-09f5-426d-9b3e-6c13c119e1b3/versions/{{apiVersionId}}/entities/monitor?workspace=fdd171e2-09f5-426d-9b3e-6c13c119e1b5",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"fdd171e2-09f5-426d-9b3e-6c13c119e1b3",
										"versions",
										"{{apiVersionId}}",
										"entities",
										"monitor"
									],
									"query": [
										{
											"key": "workspace",
											"value": "fdd171e2-09f5-426d-9b3e-6c13c119e1b5"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"fdd171e2-09f5-426d-9b3e-6c13c119e1b3\",\n\t\"meta\": {\n\t\t\"model\": \"apiversion\",\n\t\t\"action\": \"getEntities\"\n\t},\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"c48b37ac-e7ab-4dce-abcb-e27e4b8bc790\",\n\t\t\t\"name\": \"Sync Service Uptime Monitor\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n\t\t\t\"name\": \"Sync Service Downtime Monitor\"\n\t\t}\t\n\t]\n}"
						},
						{
							"id": "e4adfb55-7b2b-4453-b6cc-12be4568e3ad",
							"name": "Get all \"possible\" entities for a type (for an API Version) (fork Collection)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/4d4d9c2a-8ac9-40b8-acfe-b716203a00fa/versions/7c59aaa5-794c-44d5-a170-a611822ed157/entities/documentation?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"4d4d9c2a-8ac9-40b8-acfe-b716203a00fa",
										"versions",
										"7c59aaa5-794c-44d5-a170-a611822ed157",
										"entities",
										"documentation"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"meta\": {\n    \"model\": \"apiversion\",\n    \"action\": \"getEntities\"\n  },\n  \"data\": [\n    {\n      \"id\": \"U1-4a5c117a-06ad-40fd-9414-912e058dd8e0\",\n      \"name\": \"C1\",\n      \"owner\": \"U1\",\n      \"uid\": \"U1-4a5c117a-06ad-40fd-9414-912e058dd8e0\"\n    },\n    {\n      \"id\": \"U1-63be42f0-108e-4a23-84bf-3e7a6e7edc86\",\n      \"name\": \"Collection 5\",\n      \"owner\": \"U1\",\n      \"uid\": \"U1-63be42f0-108e-4a23-84bf-3e7a6e7edc86\"\n    },\n    {\n      \"id\": \"U1-805196be-3b3b-4aa0-b63d-c6df714d2f6f\",\n      \"name\": \"C1\",\n      \"owner\": \"U1\",\n      \"uid\": \"U1-805196be-3b3b-4aa0-b63d-c6df714d2f6f\",\n      \"forkedFrom\": {\n        \"id\": \"U1-4a5c117a-06ad-40fd-9414-912e058dd8e0\",\n        \"forkName\": \"This is the fork!\",\n        \"name\": \"C1\",\n        \"createdAt\": \"2019-05-20T11:36:26.000Z\"\n      }\n    },\n    {\n      \"id\": \"U1-8587160f-5a8a-4989-8866-15c2df273780\",\n      \"name\": \"Collection 6\"\n    }\n  ]\n}"
						},
						{
							"id": "f1bad67e-ab6d-4fe0-8276-b1a6888b16d4",
							"name": "Get all \"possible\" entities of a type for an API and workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/fdd171e2-09f5-426d-9b3e-6c13c119e1b3/entities/monitor?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"fdd171e2-09f5-426d-9b3e-6c13c119e1b3",
										"entities",
										"monitor"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"fdd171e2-09f5-426d-9b3e-6c13c119e1b3\",\n\t\"meta\": {\n\t\t\"model\": \"apiversion\",\n\t\t\"action\": \"getEntities\"\n\t},\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"c48b37ac-e7ab-4dce-abcb-e27e4b8bc790\",\n\t\t\t\"name\": \"Sync Service Uptime Monitor\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n\t\t\t\"name\": \"Sync Service Downtime Monitor\"\n\t\t}\t\n\t]\n}"
						}
					]
				},
				{
					"name": "Get IDs of the linked relations in an API Version",
					"id": "d4bc4fa5-045d-4a53-a77c-472429ff2ba1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/{{entityType}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersionId}}",
								"{{entityType}}"
							]
						},
						"description": "The `relationType` can be either of `mock` or `monitor`. More will be supported later."
					},
					"response": [
						{
							"id": "b949aa10-2bda-481a-a192-c536547b1965",
							"name": "Get IDs of the linked monitors in an API Version",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/monitor",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"monitor"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"103eccbe-6a4e-4ee9-a498-169885976f87\",\n\t\"meta\": {\n\t\t\"model\": \"apiversion\",\n\t\t\"action\": \"getLinkedRelationsForType\"\n\t},\n\t\"data\": {\n\t\t\"monitor\": [\n\t\t\t{\n\t\t\t\t\"id\": \"103eccbe-6a4e-4ee9-a498-169885976f21\",\n\t\t\t\t\"name\": \"Monitor 1\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": \"103eccbe-6a4e-4ee9-a498-169885976f23\",\n\t\t\t\t\"name\": \"Monitor2\"\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "b97d9a7e-da56-4a0f-bac9-e5414f029793",
							"name": "Get IDs of the linked mocks in an API Version",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/mock",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"mock"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{apiVersionId}}\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"getLinkedRelationsForType\"\n    },\n    \"data\": {\n        \"mock\": [\n            {\n                \"id\": \"\"\n            },\n            {\n                \"id\": \"\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Delete a relation of an API Version",
					"id": "9ad3a08e-4559-49b6-9a5e-b1239d0f2b55",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-access-token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/relations/{{entityType}}/{{entityId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions{{apiVersionId}}",
								"relations",
								"{{entityType}}",
								"{{entityId}}"
							]
						},
						"description": "This endpoint will allow you to add any of the following entities to the specified API Version.\n\nApplicable Entities:\n- Contract Tests (`contracttest`)\n- Documentation (`documentation`)\n- Load Tests (`loadtest`)\n- Test Suites (`testsuite`)\n- Integration Tests (`integrationtest`)\n\nThe payload should include the type of entity you want to link, which is mentioned in brackets for the above. It should specify the `model` and the `modelId` that you want to link it as.\n\nThe `versionTag` field is optional, which means if you don't specify any, this will go ahead and link the HEAD/Current state of the collection. (Note: This behaviour can change based on what is required by product)"
					},
					"response": [
						{
							"id": "0fb595b5-8bc0-43ba-90e0-add41d46a921",
							"name": "Delete a link of an API Version",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/relations/711e9560-e47c-4b92-9579-866153a4099a",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions{{apiVersionId}}",
										"relations",
										"711e9560-e47c-4b92-9579-866153a4099a"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"711e9560-e47c-4b92-9579-866153a4099a\",\n\t\"meta\": {\n\t\t\"model\": \"documentation\",\n\t\t\"action\": \"destroy\"\n\t},\n\t\"data\": {\n\t\t\"id\": \"711e9560-e47c-4b92-9579-866153a4099a\"\n\t}\n}"
						}
					]
				},
				{
					"name": "Link a Relation with an API Version",
					"id": "8d5e68c2-214c-46a0-9d8a-2d08db9b1e18",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "// To create a single relation\n{\n\t\"type\": \"documentation\",\n\t\"model\": \"collection\",\n\t\"modelId\": \"5665-12345678-1234-1234-1234-123456789012\",\n\t\"versionTag\": null\n}\n\n// To create from schema\n{\n\t\"type\": \"<documentation|mock|monitor|testsuite|contracttest|integrationtest>\",\n\t\"schemaId\": \"<Schema id>\",\n\t\"configurations\": {\n\t\t\"converter\": {\n\t\t\t\"folderStrategy\": \"Paths\",\n\t\t\t\"collapseFolders\": true,\n\t\t\t...Other options\n\t\t},\n\t\t\"collection\": {\"name\": \"Name of collection\"},\n\t\t\"<mock|monitor>\": {\"name\": \"Name of entity\", ...other mock and monitor options}\n\t}\n}\n\n// To create mock or monitor from collection\n{\n\t\"type\": \"<mock|monitor>\",\n\t\"collectionId\": \"<collection id>\",\n\t\"configurations\": {\n\t\t\"<mock|monitor>\": {\"name\": \"Name of entity\", ...other mock and monitor options}\n\t}\n}\n\n// To link a schema\n{\n\t\"type\": \"schema\",\n    \"model\": \"schema\",\n\t\"modelId\": \"<schema id>\"\n}"
						},
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations?workspace={{workspaceId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersionId}}",
								"relations"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}",
									"description": "Required if generating relations from schema or when creating mock/monitor from a collection"
								}
							]
						},
						"description": "This endpoint will allow you to add any of the following entities to the specified API Version.\n\nThe `versionTag` field is optional, which means if you don't specify any, this will go ahead and link the HEAD/Current state of the collection. (Note: This behaviour can change based on what is required by product)"
					},
					"response": [
						{
							"id": "e731a98b-8d0f-4084-ac9d-a6929cfdc264",
							"name": "Create environment from schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"environment\",\n    \"schemaId\": \"dba326ec-b01c-450b-a163-f844a67abb33\",\n    \"configurations\": {\n        \"collection\": {\n            \"name\": \"Name of collection\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/relations?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions{{apiVersionId}}",
										"relations"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}",
											"description": "Required if generating mock and monitor from schema or collection"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n\t\"error\": {\n\t\t\"name\": \"invalidParamsError\",\n\t\t\"message\": \"The specified parameter is in an invalid format\"\n\t}\n}"
						},
						{
							"id": "d876a2be-7929-4314-8886-c82f4fa9d526",
							"name": "Create a mock from schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"type\": \"mock\",\n\t\"schemaId\": \"dba326ec-b01c-450b-a163-f844a67abb33\",\n\t\"configurations\": {\n\t\t\"coverter\": {\n\t\t\t\"folderStrategy\": \"Paths\",\n\t\t\t\"collapseFolders\": true\n\t\t},\n\t\t\"collection\": {\n\t\t\t\"name\": \"Name of collection\"\n\t\t},\n\t\t\"mock\": {\n\t\t\t\"name\": \"Name of entity\",\n\t\t\t\"private\": true\n\t\t}\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/relations?workspace=8a0b58ae-1535-4178-95e5-5aa2eb50a2d3",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions{{apiVersionId}}",
										"relations"
									],
									"query": [
										{
											"key": "workspace",
											"value": "8a0b58ae-1535-4178-95e5-5aa2eb50a2d3"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"711e9560-e47c-4b92-9579-866153a4099a\",\n\t\"meta\": {\n\t\t\"model\": \"mock\",\n\t\t\"action\": \"add\"\n\t},\n\t\"data\": {\n\t\t\"id\": \"711e9560-e47c-4b92-9579-866153a4099a\",\n\t\t\"model\": \"mock\",\n\t\t\"modelId\": \"12345678-1234-1234-1234-123456789012\",\n\t\t\"versionTag\": null\n\t}\n}"
						},
						{
							"id": "6f468e08-2dea-43e1-8483-f567c8ff3238",
							"name": "Create a mock from collection",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"mock\",\n    \"collectionId\": \"1234-dba326ec-b01c-450b-a163-f844a67abb33\",\n    \"configurations\": {\n        \"mock\": {\n            \"name\": \"Name of entity\",\n            \"schedule\": {\n                \"cron\": \"* * * * * \"\n            }\n        },\n\t\t\"coverter\": {\n\t\t\t\"folderStrategy\": \"Paths\",\n\t\t\t\"collapseFolders\": false\n\t\t}\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/relations?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions{{apiVersionId}}",
										"relations"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}",
											"description": "Required if generating mock and monitor from schema or collection"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"711e9560-e47c-4b92-9579-866153a4099a\",\n    \"meta\": {\n        \"model\": \"mock\",\n        \"action\": \"add\"\n    },\n    \"data\": {\n        \"id\": \"711e9560-e47c-4b92-9579-866153a4099a\",\n        \"model\": \"mock\",\n        \"modelId\": \"711e9560-e47c-4b92-9579-866153a4099a\",\n        \"versionTag\": null,\n        \"url\": \"https://711e9560-e47c-4b92-9579-866153a4099a.mock.pstmn.io\"\n    }\n}"
						},
						{
							"id": "a87d93f6-bc58-4a61-a9d8-717c57bc26b1",
							"name": "Create a monitor from schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"monitor\",\n    \"schemaId\": \"dba326ec-b01c-450b-a163-f844a67abb33\",\n    \"configurations\": {\n        \"collection\": {\n            \"name\": \"Name of collection\"\n        },\n        \"monitor\": {\n            \"name\": \"Name of entity\",\n            \"schedule\": {\n                \"cron\": \"* * * * * \"\n            }\n        },\n\t\t\"coverter\": {\n\t\t\t\"folderStrategy\": \"Paths\",\n\t\t\t\"collapseFolders\": true\n\t\t}\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/relations?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions{{apiVersionId}}",
										"relations"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}",
											"description": "Required if generating mock and monitor from schema or collection"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"711e9560-e47c-4b92-9579-866153a4099a\",\n    \"meta\": {\n        \"model\": \"monitor\",\n        \"action\": \"add\"\n    },\n    \"data\": {\n        \"id\": \"711e9560-e47c-4b92-9579-866153a4099a\",\n        \"model\": \"collection\",\n        \"modelId\": \"5665-12345678-1234-1234-1234-123456789012\",\n        \"versionTag\": null,\n        \"links\": {\n        \t\"dashboard\": {\n        \t\t\"type\": \"openAuthenticatedURL\",\n        \t\t\"action\": \"https://go.postman.co/monitors/711e9560-e47c-4b92-9579-866153a4099a\"\n        \t}\n        }\n    }\n}"
						},
						{
							"id": "9f538723-0308-4167-a04e-7a4ee16420fc",
							"name": "Success: Link a Collection with an API Version",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"type\": \"documentation\",\n\t\"model\": \"collection\",\n\t\"modelId\": \"5665-12345678-1234-1234-1234-123456789012\",\n\t\"versionTag\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/relations",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions{{apiVersionId}}",
										"relations"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"711e9560-e47c-4b92-9579-866153a4099a\",\n\t\"meta\": {\n\t\t\"model\": \"documentation\",\n\t\t\"action\": \"add\"\n\t},\n\t\"data\": {\n\t\t\"id\": \"711e9560-e47c-4b92-9579-866153a4099a\",\n\t\t\"model\": \"collection\",\n\t\t\"modelId\": \"5665-12345678-1234-1234-1234-123456789012\",\n\t\t\"versionTag\": null\n\t}\n}"
						},
						{
							"id": "98b97ef1-2327-40cf-9c6f-974ec53dd48d",
							"name": "Create a testsuite from schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"testsuite\",\n    \"schemaId\": \"dba326ec-b01c-450b-a163-f844a67abb33\",\n    \"configurations\": {\n        \"collection\": {\n            \"name\": \"Name of collection\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/relations?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions{{apiVersionId}}",
										"relations"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}",
											"description": "Required if generating mock and monitor from schema or collection"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"711e9560-e47c-4b92-9579-866153a4099a\",\n    \"meta\": {\n        \"model\": \"testsuite\",\n        \"action\": \"add\"\n    },\n    \"data\": {\n        \"id\": \"711e9560-e47c-4b92-9579-866153a4099a\",\n        \"model\": \"collection\",\n        \"modelId\": \"5665-12345678-1234-1234-1234-123456789012\",\n        \"versionTag\": null\n    }\n}"
						},
						{
							"id": "f85228fa-9fab-4de9-bd68-c9ecf0ae9e30",
							"name": "Success: Link an existing schema with an API Version",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"type\": \"schema\",\n    \"model\": \"schema\",\n\t\"modelId\": \"fc64d1fe-b6aa-444c-a414-3367bed54064\",\n    \"revisionId\": \"123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"relations"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"fc64d1fe-b6aa-444c-a414-3367bed54064\",\n\t\"meta\": {\n\t\t\"model\": \"schema\",\n\t\t\"action\": \"add\"\n\t},\n    \"data\": {\n        \"id\": \"fc64d1fe-b6aa-444c-a414-3367bed54064\",\n        \"model\": \"schema\",\n        \"modelId\": \"fc64d1fe-b6aa-444c-a414-3367bed54064\",\n        \"versionTag\": null\n    }\n}"
						}
					]
				},
				{
					"name": "Check link relation constraint",
					"id": "0f4c2027-323c-488a-8c6a-8110fab5924b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{accessToken}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"entityIds\": [\"C1\", \"C2\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations/{{relationType}}/constraint-checks",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersionId}}",
								"relations",
								"{{relationType}}",
								"constraint-checks"
							]
						},
						"description": "This is supposed to be used to check whether certain entities can be linked to an API Version as a relation or not.\n\nIt also returns a reason for why some(if any) of the specified entities can not be linked to the API version."
					},
					"response": [
						{
							"id": "5ef0e04d-5291-420f-b82f-7861ba45a820",
							"name": "Successful check link relation constraint",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"entityIds\": [\"C1\", \"C2\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations/{{relationType}}/check-constraints",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"relations",
										"{{relationType}}",
										"check-constraints"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"entityId\": \"C1\",\n            \"allowed\": true\n        },\n        {\n            \"entityId\": \"C2\",\n            \"allowed\": false,\n            \"reason\": {\"message\": \"This collection is already added to RBAC test API 1.0.0 version.\"}\n        }\n    ]\n}"
						},
						{
							"id": "8243a8f3-2c63-4d4e-95ff-8036b413511d",
							"name": "Invalid params error for passing invalid relation type",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"entityIds\": [\"C1\", \"C2\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations/:relationType/constraint-checks",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"relations",
										":relationType",
										"constraint-checks"
									],
									"variable": [
										{
											"key": "relationType",
											"value": "random_relation"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\":{\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The specified parameter is in an invalid format\", \n        \"details\":{\n            \"param\": \"relationType\"\n        }\n    }\n}"
						},
						{
							"id": "2e96e5d7-a35b-4ed3-9c15-72558c21ebd6",
							"name": "Invalid params error when passing invalid entityIds array",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"entityIds\": [null]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations/:relationType/constraint-checks",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"relations",
										":relationType",
										"constraint-checks"
									],
									"variable": [
										{
											"key": "relationType",
											"value": "random_relation"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\":{\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The specified parameter is in an invalid format\", \n        \"details\":{\n            \"param\": \"entityIds\"\n        }\n    }\n}"
						}
					]
				}
			],
			"id": "ba7deff4-5fa4-435b-b29c-04e050f302c6"
		},
		{
			"name": "Support endpoints",
			"item": [
				{
					"name": "List APIs accessible by an user",
					"id": "d51289ac-d33f-4547-90a7-c760ce43805e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-support-secret",
								"value": "{{supportdashSecret}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/support/user/:userId/apis",
							"host": [
								"{{url}}"
							],
							"path": [
								"support",
								"user",
								":userId",
								"apis"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}"
								}
							]
						},
						"description": "This endpoint will return all the APIs accessible by an user."
					},
					"response": [
						{
							"id": "3446fcfb-263a-4c6f-a9df-6f257f51b43a",
							"name": "List APIs accessible by an user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-support-secret",
										"value": "{{supportdashSecret}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/support/user/:userId/apis",
									"host": [
										"{{url}}"
									],
									"path": [
										"support",
										"user",
										":userId",
										"apis"
									],
									"variable": [
										{
											"key": "userId",
											"value": "5665"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n\t\"apis\": [\n\t\t{\n\t\t\t\"id\": \"387c2863-6ee3-4a56-8210-225f774edadf\",\n\t\t\t\"name\": \"Sync API\",\n\t\t\t\"summary\": \"This is a summary\",\n\t\t\t\"description\": \"description\",\n\t\t\t\"createdBy\": \"5665\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"387c2863-6ee3-4a56-8210-225f774edaee\",\n\t\t\t\"name\": \"New Sync API\",\n\t\t\t\"summary\": \"This is a summary\",\n\t\t\t\"description\": \"description\",\n\t\t\t\"createdBy\": \"5665\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"387c2863-6ee3-4a56-8210-225f774edbde\",\n\t\t\t\"name\": \"Another Sync API\",\n\t\t\t\"summary\": \"This is a summary\",\n\t\t\t\"description\": \"description\",\n\t\t\t\"createdBy\": \"5665\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\"\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "List all APIs of a team",
					"id": "63c6374c-464d-4526-9b7a-926929615117",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-support-secret",
								"value": "{{supportdashSecret}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/support/team/:teamId/apis",
							"host": [
								"{{url}}"
							],
							"path": [
								"support",
								"team",
								":teamId",
								"apis"
							],
							"variable": [
								{
									"key": "teamId",
									"value": "{{teamId}}"
								}
							]
						},
						"description": "This endpoint will return all the APIs belonging to a team."
					},
					"response": [
						{
							"id": "ee7fcc42-410f-4fc2-a72c-8393713d660b",
							"name": "List all APIs of a team",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-support-secret",
										"value": "{{supportdashSecret}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/support/team/:teamId/apis",
									"host": [
										"{{url}}"
									],
									"path": [
										"support",
										"team",
										":teamId",
										"apis"
									],
									"variable": [
										{
											"key": "teamId",
											"value": "{{teamId}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n\t\"apis\": [\n\t\t{\n\t\t\t\"id\": \"387c2863-6ee3-4a56-8210-225f774edadf\",\n\t\t\t\"name\": \"Sync API\",\n\t\t\t\"summary\": \"This is a summary\",\n\t\t\t\"description\": \"description\",\n\t\t\t\"createdBy\": \"5665\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"387c2863-6ee3-4a56-8210-225f774edaee\",\n\t\t\t\"name\": \"New Sync API\",\n\t\t\t\"summary\": \"This is a summary\",\n\t\t\t\"description\": \"description\",\n\t\t\t\"createdBy\": \"9876\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"387c2863-6ee3-4a56-8210-225f774edbde\",\n\t\t\t\"name\": \"Another Sync API\",\n\t\t\t\"summary\": \"This is a summary\",\n\t\t\t\"description\": \"description\",\n\t\t\t\"createdBy\": \"7685\",\n\t\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\t\"updatedAt\": \"2019-02-12 19:34:49\"\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Delete an API",
					"id": "abef5df4-2db0-4db5-8156-4c79c05aadab",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{basicAuthUserName}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "x-support-secret",
								"value": "{{supportdashSecret}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/support/api/:apiId",
							"host": [
								"{{url}}"
							],
							"path": [
								"support",
								"api",
								":apiId"
							],
							"variable": [
								{
									"key": "apiId",
									"value": "{{apiId}}"
								}
							]
						},
						"description": "This endpoint will enable deletion of APIs from support dashboard."
					},
					"response": []
				}
			],
			"id": "c039b657-5207-4fd7-b215-e8c9909c2a0c",
			"description": "These endpoints will be used by the support dashboard."
		},
		{
			"name": "Validation",
			"item": [
				{
					"name": "Validate a relation",
					"id": "9df59dd3-e0d1-47c0-93cb-86881b640742",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-access-token",
								"type": "text",
								"value": "{{accessToken}}"
							}
						],
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations/{{entityType}}/{{entityId}}/validate",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersionId}}",
								"relations",
								"{{entityType}}",
								"{{entityId}}",
								"validate"
							]
						},
						"description": "Calling this endpoint will trigger the collection validation flow for the linked collection of this relation."
					},
					"response": [
						{
							"id": "5d045e38-4257-4937-be85-5b4c0d6b0291",
							"name": "Validate a relation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-access-token",
										"type": "text",
										"value": "{{accessToken}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations/{{entityType}}/{{entityId}}/validate",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"relations",
										"{{entityType}}",
										"{{entityId}}",
										"validate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 13 May 2020 20:07:46 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=a392d313e6a11241"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=9c38fd4e6111b94e"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "10"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "9"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1589400476"
								},
								{
									"key": "ETag",
									"value": "W/\"27a-DtN2aJ5d96CuoEmGBiK1MQ\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"5b32caea-903c-472e-81a2-2cb054ede666\",\n    \"meta\": {\n        \"model\": \"relation\",\n        \"action\": \"validate\"\n    },\n    \"data\": {\n        \"id\": \"5b32caea-903c-472e-81a2-2cb054ede666\",\n        \"validation\": {\n            \"type\": \"warning\",\n            \"message\": \"Issues found\"\n        },\n        \"actions\": {\n            \"popup\": {\n                \"description\": \"We found a few issues when validating against the schema.\",\n                \"actions\": [\n                    {\n                        \"type\": \"refresh\",\n                        \"label\": \"Validate Again\"\n                    },\n                    {\n                        \"type\": \"link\",\n                        \"label\": \"View Issues\",\n                        \"url\": {\n                            \"type\": \"openAuthenticatedURL\",\n                            \"link\": \"https://go.postman.co/apis/8fe00285-9991-455a-a8dc-af3115d3db24/versions/559da235-7d58-460a-ac17-7431e6304c94/documentation/5b32caea-903c-472e-81a2-2cb054ede666/validation\"\n                        }\n                    }\n                ]\n            }\n        }\n    },\n    \"revision\": null\n}"
						},
						{
							"id": "3b6becc5-8f60-4f4b-8af8-dfa0b20bd7d4",
							"name": "No issues found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-access-token",
										"type": "text",
										"value": "{{accessToken}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations/{{entityType}}/{{entityId}}/validate",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"relations",
										"{{entityType}}",
										"{{entityId}}",
										"validate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 13 May 2020 20:07:46 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=a392d313e6a11241"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=9c38fd4e6111b94e"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "10"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "9"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1589400476"
								},
								{
									"key": "ETag",
									"value": "W/\"27a-DtN2aJ5d96CuoEmGBiK1MQ\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"5b32caea-903c-472e-81a2-2cb054ede666\",\n    \"meta\": {\n        \"model\": \"relation\",\n        \"action\": \"validate\"\n    },\n    \"data\": {\n        \"id\": \"R1_ID\",\n        \"actions\": {\n            \"popup\": {\n            \"actions\": [\n                {\n                \"type\": \"refresh\",\n                \"label\": \"Validate Again\"\n                }\n            ],\n            \"description\": \"Your documentation matches the schema for this API version. Hurray!\"\n            }\n        },\n        \"validation\": {\n            \"type\": \"success\",\n            \"message\": \"No issues found\"\n        }\n    },\n    \"revision\": null\n}"
						}
					]
				},
				{
					"name": "Validate all relations of an APIVersion",
					"id": "91b9bfec-db36-4913-94cc-82f0d74c8ee8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations/validate",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersionId}}",
								"relations",
								"validate"
							]
						},
						"description": "Calling this endpoint will trigger the validation flow for all the relations of an APIVersion."
					},
					"response": [
						{
							"id": "a5ce77f1-8a75-4aa8-bdb1-d2fa3fd4694b",
							"name": "Validate all relations of an APIVersion",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations/validate",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"relations",
										"validate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 13 May 2020 20:08:20 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=b1d053bf22d788f3"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=da109ce8e4247734"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "10"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "9"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1589400509"
								},
								{
									"key": "ETag",
									"value": "W/\"a7a-3Y0dKXjgLFUfEAmVhL85rw\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"model\": \"relation\",\n        \"action\": \"validateAll\"\n    },\n    \"data\": {\n        \"documentation\": {\n            \"5b32caea-903c-472e-81a2-2cb054ede666\": {\n                \"validation\": {\n                    \"type\": \"warning\",\n                    \"message\": \"Issues found\"\n                },\n                \"actions\": {\n                    \"popup\": {\n                        \"description\": \"We found a few issues when validating against the schema.\",\n                        \"actions\": [\n                            {\n                                \"type\": \"refresh\",\n                                \"label\": \"Validate Again\"\n                            },\n                            {\n                                \"type\": \"link\",\n                                \"label\": \"View Issues\",\n                                \"url\": {\n                                    \"type\": \"openAuthenticatedURL\",\n                                    \"link\": \"https://go.postman.co/apis/8fe00285-9991-455a-a8dc-af3115d3db24/versions/559da235-7d58-460a-ac17-7431e6304c94/documentation/5b32caea-903c-472e-81a2-2cb054ede666/validation\"\n                                }\n                            }\n                        ]\n                    }\n                }\n            }\n        },\n        \"testsuite\": {\n            \"b26bc935-7422-4f73-8d03-9bf212fb48ba\": {\n                \"validation\": {\n                    \"type\": \"warning\",\n                    \"message\": \"Issues found\"\n                },\n                \"actions\": {\n                    \"popup\": {\n                        \"description\": \"We found a few issues when validating against the schema.\",\n                        \"actions\": [\n                            {\n                                \"type\": \"refresh\",\n                                \"label\": \"Validate Again\"\n                            },\n                            {\n                                \"type\": \"link\",\n                                \"label\": \"View Issues\",\n                                \"url\": {\n                                    \"type\": \"openAuthenticatedURL\",\n                                    \"link\": \"https://go.postman.co/apis/8fe00285-9991-455a-a8dc-af3115d3db24/versions/559da235-7d58-460a-ac17-7431e6304c94/testsuite/b26bc935-7422-4f73-8d03-9bf212fb48ba/validation\"\n                                }\n                            }\n                        ]\n                    }\n                }\n            }\n        },\n        \"integrationtest\": {\n            \"35c6bdbd-d602-4b37-9c87-1640fc8025c8\": {\n                \"validation\": {\n                    \"type\": \"warning\",\n                    \"message\": \"Issues found\"\n                },\n                \"actions\": {\n                    \"popup\": {\n                        \"description\": \"We found a few issues when validating against the schema.\",\n                        \"actions\": [\n                            {\n                                \"type\": \"refresh\",\n                                \"label\": \"Validate Again\"\n                            },\n                            {\n                                \"type\": \"link\",\n                                \"label\": \"View Issues\",\n                                \"url\": {\n                                    \"type\": \"openAuthenticatedURL\",\n                                    \"link\": \"https://go.postman.co/apis/8fe00285-9991-455a-a8dc-af3115d3db24/versions/559da235-7d58-460a-ac17-7431e6304c94/integrationtest/35c6bdbd-d602-4b37-9c87-1640fc8025c8/validation\"\n                                }\n                            }\n                        ]\n                    }\n                }\n            }\n        },\n        \"contracttest\": {\n            \"bb69b435-a90a-44fe-aa49-f580eeb1be88\": {\n                \"validation\": {\n                    \"type\": \"refresh\",\n                    \"message\": \"Validation failed\"\n                },\n                \"actions\": {\n                    \"popup\": {\n                        \"description\": \"We hit a snag while updating. Try validating again.\",\n                        \"actions\": [\n                            {\n                                \"type\": \"refresh\",\n                                \"label\": \"Validate Again\"\n                            }\n                        ]\n                    }\n                }\n            }\n        },\n        \"monitor\": {\n            \"1ea954a7-ad6d-46c0-b8e7-552c5334c253\": {\n                \"validation\": {\n                    \"type\": \"refresh\",\n                    \"message\": \"Validation failed\"\n                },\n                \"actions\": {\n                    \"popup\": {\n                        \"description\": \"We hit a snag while updating. Try validating again.\",\n                        \"actions\": [\n                            {\n                                \"type\": \"refresh\",\n                                \"label\": \"Validate Again\"\n                            }\n                        ]\n                    }\n                }\n            }\n        },\n        \"mock\": {\n            \"7681c25b-5c50-44a6-8724-fe1e71550160\": {\n                \"validation\": {\n                    \"type\": \"warning\",\n                    \"message\": \"Issues found\"\n                },\n                \"actions\": {\n                    \"popup\": {\n                        \"description\": \"We found a few issues when validating against the schema.\",\n                        \"actions\": [\n                            {\n                                \"type\": \"refresh\",\n                                \"label\": \"Validate Again\"\n                            },\n                            {\n                                \"type\": \"link\",\n                                \"label\": \"View Issues\",\n                                \"url\": {\n                                    \"type\": \"openAuthenticatedURL\",\n                                    \"link\": \"https://go.postman.co/apis/8fe00285-9991-455a-a8dc-af3115d3db24/versions/559da235-7d58-460a-ac17-7431e6304c94/mock/7681c25b-5c50-44a6-8724-fe1e71550160/validation\"\n                                }\n                            }\n                        ]\n                    }\n                }\n            }\n        }\n    },\n    \"revision\": null\n}"
						}
					]
				},
				{
					"name": "Fetch diff data for a relation",
					"id": "a6c9d857-198c-4550-b1ea-993091748e32",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/relations/:entityType/:entityId/diff",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":apiVersionId",
								"relations",
								":entityType",
								":entityId",
								"diff"
							],
							"variable": [
								{
									"key": "apiId",
									"value": "{{apiId}}"
								},
								{
									"key": "apiVersionId",
									"value": "{{apiVersionId}}"
								},
								{
									"key": "entityType",
									"value": "{{entityType}}"
								},
								{
									"key": "entityId",
									"value": "{{entityId}}"
								}
							]
						}
					},
					"response": [
						{
							"id": "0255a294-0493-4f54-a198-b14270f79a77",
							"name": "Update validations",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"updates\": {\n        \"requests\": [{\n            \"id\": \"<RequestId> (required)\",\n            \"fieldsToBeUpdated\": \"Value\"\n        }],\n        \"responses\": [{\n            \"id\": \"<Response Id> (required)\",\n            \"fieldsToBeUpdated\": \"Value\"\n        }]\n    },\n    \"destroys\": {\n        \"requests\": [\"Array of request ids\"],\n        \"responses\": [\"Array of response ids\"]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/relations/:entityType/:entityId/diff",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"relations",
										":entityType",
										":entityId",
										"diff"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{apiId}}"
										},
										{
											"key": "apiVersionId",
											"value": "{{apiVersionId}}"
										},
										{
											"key": "entityType",
											"value": "{{entityType}}"
										},
										{
											"key": "entityId",
											"value": "{{entityId}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 12 Jun 2020 07:15:20 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=b53bd52e307bfb3c"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=3114e06b92d522d5"
								},
								{
									"key": "ETag",
									"value": "W/\"e2-HgCZW+4jqGVzHIGh0h2FDw\""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"model\": \"validation\",\n        \"action\": \"updateRelation\"\n    },\n    \"data\": {\n        \"link\": {\n            \"view_updated_collection\": {\n                \"url\": \"https://go.postman-beta.co/collections/510747-4db39d40-9688-402b-a6e3-b41d4fd7724c\"\n            }\n        }\n    },\n    \"revision\": null\n}"
						},
						{
							"id": "364c23b3-031b-41ec-b112-edb6e4350734",
							"name": "Fetch diff data for a relation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"type": "text",
										"value": "{{access_token}}"
									}
								],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/relations/:entityType/:entityId/diff",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"relations",
										":entityType",
										":entityId",
										"diff"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{apiId}}"
										},
										{
											"key": "apiVersionId",
											"value": "{{apiVersionId}}"
										},
										{
											"key": "entityType",
											"value": "{{entityType}}"
										},
										{
											"key": "entityId",
											"value": "{{entityId}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 12 Jun 2020 07:21:34 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=f95ad94ac07dc469"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=8f0446bc7d95bb9e"
								},
								{
									"key": "ETag",
									"value": "W/\"e5b-xLEvtaq3qw5pVrMQk+GkTA\""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": 47541,\n    \"meta\": {\n        \"model\": \"validation\",\n        \"action\": \"findForRelation\"\n    },\n    \"data\": {\n        \"validationMeta\": {\n            \"title\": \"Generated Collection - 2\",\n            \"description\": {\n                \"template\": \"We found issues between [Generated Collection - 2]({{collection_link}}) collection and [ADP Test - 29/5/2020-18:35:18]({{api_link}}) API schema version v1.0.0 API. Make the following changes to keep the collection in sync.\",\n                \"variables\": {\n                    \"api_link\": \"https://go.postman-beta.co/apis/31d96d1c-074c-4a4d-a26e-73df68101a21?version=774bd02c-3a9d-476a-990c-0e7bda064e07\",\n                    \"collection_link\": \"https://go.postman-beta.co/collections/510747-4db39d40-9688-402b-a6e3-b41d4fd7724c\"\n                }\n            },\n            \"collection\": {\n                \"id\": \"510747-4db39d40-9688-402b-a6e3-b41d4fd7724c\",\n                \"canUpdate\": true\n            }\n        },\n        \"diff\": {\n            \"request\": {\n                \"update\": {\n                    \"objs\": {\n                        \"ebb7405e-77b9-4210-9227-5e2c85e60922\": {\n                            \"responses\": [\n                                \"662917f1-ae9f-47a5-b33f-fff43e3125fe\",\n                                \"81da2915-0dac-4d14-8002-c5765ab5a7bc\"\n                            ],\n                            \"name\": \"List all pets\",\n                            \"method\": \"GET\",\n                            \"endpoint\": \"GET /pets\",\n                            \"diff\": {\n                                \"queryParams\": {\n                                    \"from\": [\n                                        {\n                                            \"description\": \"How many items to return at one time (max 100)\",\n                                            \"key\": \"limit\",\n                                            \"value\": \"<integer>\"\n                                        }\n                                    ],\n                                    \"to\": [\n                                        {\n                                            \"description\": \"How many items to return at one time (max 100)\",\n                                            \"key\": \"limit\",\n                                            \"value\": \"-14647066\"\n                                        }\n                                    ]\n                                }\n                            }\n                        },\n                        \"644d1cb9-ab8b-4210-9f64-e80e10f46942\": {\n                            \"responses\": [\n                                \"71719ca5-7ae5-4032-8603-a66002be5a0b\",\n                                \"d80807c9-b419-4833-943e-0700097785a8\"\n                            ],\n                            \"name\": \"Create a pet\",\n                            \"method\": \"POST\",\n                            \"endpoint\": \"POST /pets\",\n                            \"diff\": {}\n                        },\n                        \"2520d0ef-d2fe-41d9-9be7-05cc3b8f9997\": {\n                            \"responses\": [\n                                \"24e27af5-22b2-466a-a3a8-0a5eb3f35666\",\n                                \"52296c93-606c-4bb0-8fcd-9f76d93e5dd2\"\n                            ],\n                            \"name\": \"Info for a specific pet\",\n                            \"method\": \"GET\",\n                            \"endpoint\": \"GET /pets/{petId}\",\n                            \"diff\": {}\n                        }\n                    }\n                },\n                \"destroy\": {\n                    \"objs\": {}\n                }\n            },\n            \"response\": {\n                \"update\": {\n                    \"objs\": {\n                        \"662917f1-ae9f-47a5-b33f-fff43e3125fe\": {\n                            \"name\": \"A paged array of pets\",\n                            \"diff\": {\n                                \"headers\": {\n                                    \"from\": [\n                                        {\n                                            \"key\": \"x-next\",\n                                            \"value\": \"<string>\",\n                                            \"description\": \"A link to the next page of responses\"\n                                        },\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\"\n                                        }\n                                    ],\n                                    \"to\": [\n                                        {\n                                            \"key\": \"x-next\",\n                                            \"value\": \"<string>\",\n                                            \"description\": \"A link to the next page of responses\"\n                                        }\n                                    ]\n                                },\n                                \"text\": {\n                                    \"from\": \"[\\n {\\n  \\\"id\\\": \\\"<long>\\\",\\n  \\\"name\\\": \\\"<string>\\\",\\n  \\\"tag\\\": \\\"<string>\\\"\\n },\\n {\\n  \\\"id\\\": \\\"<long>\\\",\\n  \\\"name\\\": \\\"<string>\\\",\\n  \\\"tag\\\": \\\"<string>\\\"\\n }\\n]\",\n                                    \"to\": \"[{\\\"id\\\":-20483028,\\\"name\\\":\\\"<string>\\\",\\\"tag\\\":\\\"<string>\\\"},{\\\"id\\\":22536007,\\\"name\\\":\\\"<string>\\\",\\\"tag\\\":\\\"<string>\\\"}]\"\n                                }\n                            }\n                        },\n                        \"81da2915-0dac-4d14-8002-c5765ab5a7bc\": {\n                            \"name\": \"unexpected error\",\n                            \"diff\": {\n                                \"headers\": {\n                                    \"from\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\"\n                                        }\n                                    ],\n                                    \"to\": []\n                                },\n                                \"text\": {\n                                    \"from\": \"{\\n \\\"code\\\": \\\"<integer>\\\",\\n \\\"message\\\": \\\"<string>\\\"\\n}\",\n                                    \"to\": \"{\\\"code\\\":-80303703,\\\"message\\\":\\\"<string>\\\"}\"\n                                }\n                            }\n                        },\n                        \"71719ca5-7ae5-4032-8603-a66002be5a0b\": {\n                            \"name\": \"unexpected error\",\n                            \"diff\": {\n                                \"headers\": {\n                                    \"from\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\"\n                                        }\n                                    ],\n                                    \"to\": []\n                                },\n                                \"text\": {\n                                    \"from\": \"{\\n \\\"code\\\": \\\"<integer>\\\",\\n \\\"message\\\": \\\"<string>\\\"\\n}\",\n                                    \"to\": \"{\\\"code\\\":-80303703,\\\"message\\\":\\\"<string>\\\"}\"\n                                }\n                            }\n                        },\n                        \"d80807c9-b419-4833-943e-0700097785a8\": {\n                            \"name\": \"Null response\",\n                            \"diff\": {\n                                \"headers\": {\n                                    \"from\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"text/plain\"\n                                        }\n                                    ],\n                                    \"to\": []\n                                }\n                            }\n                        },\n                        \"24e27af5-22b2-466a-a3a8-0a5eb3f35666\": {\n                            \"name\": \"unexpected error\",\n                            \"diff\": {\n                                \"headers\": {\n                                    \"from\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\"\n                                        }\n                                    ],\n                                    \"to\": []\n                                },\n                                \"text\": {\n                                    \"from\": \"{\\n \\\"code\\\": \\\"<integer>\\\",\\n \\\"message\\\": \\\"<string>\\\"\\n}\",\n                                    \"to\": \"{\\\"code\\\":-80303703,\\\"message\\\":\\\"<string>\\\"}\"\n                                }\n                            }\n                        },\n                        \"52296c93-606c-4bb0-8fcd-9f76d93e5dd2\": {\n                            \"name\": \"Expected response to a valid request\",\n                            \"diff\": {\n                                \"headers\": {\n                                    \"from\": [\n                                        {\n                                            \"key\": \"Content-Type\",\n                                            \"value\": \"application/json\"\n                                        }\n                                    ],\n                                    \"to\": []\n                                },\n                                \"text\": {\n                                    \"from\": \"{\\n \\\"id\\\": \\\"<long>\\\",\\n \\\"name\\\": \\\"<string>\\\",\\n \\\"tag\\\": \\\"<string>\\\"\\n}\",\n                                    \"to\": \"{\\\"id\\\":-28263921,\\\"name\\\":\\\"<string>\\\",\\\"tag\\\":\\\"<string>\\\"}\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update validations",
					"id": "7a766059-fcc2-4269-b80e-359020744785",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"updates\": {\n        \"requests\": [{\n            \"id\": \"<RequestId> (required)\",\n            \"fieldsToBeUpdated\": \"Value\"\n        }],\n        \"responses\": [{\n            \"id\": \"<Response Id> (required)\",\n            \"fieldsToBeUpdated\": \"Value\"\n        }]\n    },\n    \"destroys\": {\n        \"requests\": [\"Array of request ids\"],\n        \"responses\": [\"Array of response ids\"]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/relations/:entityType/:entityId/diff",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":apiVersionId",
								"relations",
								":entityType",
								":entityId",
								"diff"
							],
							"variable": [
								{
									"key": "apiId",
									"value": "{{apiId}}"
								},
								{
									"key": "apiVersionId",
									"value": "{{apiVersionId}}"
								},
								{
									"key": "entityType",
									"value": "{{entityType}}"
								},
								{
									"key": "entityId",
									"value": "{{entityId}}"
								}
							]
						}
					},
					"response": [
						{
							"id": "bdd66377-7a25-4eff-86d8-b94edfff0269",
							"name": "Update validations",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"updates\": {\n        \"requests\": [{\n            \"id\": \"<RequestId> (required)\",\n            \"fieldsToBeUpdated\": \"Value\"\n        }],\n        \"responses\": [{\n            \"id\": \"<Response Id> (required)\",\n            \"fieldsToBeUpdated\": \"Value\"\n        }]\n    },\n    \"destroys\": {\n        \"requests\": [\"Array of request ids\"],\n        \"responses\": [\"Array of response ids\"]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/relations/:entityType/:entityId/diff",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"relations",
										":entityType",
										":entityId",
										"diff"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{apiId}}"
										},
										{
											"key": "apiVersionId",
											"value": "{{apiVersionId}}"
										},
										{
											"key": "entityType",
											"value": "{{entityType}}"
										},
										{
											"key": "entityId",
											"value": "{{entityId}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 12 Jun 2020 07:15:20 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=b53bd52e307bfb3c"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=3114e06b92d522d5"
								},
								{
									"key": "ETag",
									"value": "W/\"e2-HgCZW+4jqGVzHIGh0h2FDw\""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"model\": \"validation\",\n        \"action\": \"updateRelation\"\n    },\n    \"data\": {\n        \"link\": {\n            \"view_updated_collection\": {\n                \"url\": \"https://go.postman-beta.co/collections/510747-4db39d40-9688-402b-a6e3-b41d4fd7724c\"\n            }\n        }\n    },\n    \"revision\": null\n}"
						},
						{
							"id": "dc38a4d2-9943-4ddc-adcd-26e2019f5eb7",
							"name": "Accept all updates",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/relations/:entityType/:entityId/diff?acceptAll=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"relations",
										":entityType",
										":entityId",
										"diff"
									],
									"query": [
										{
											"key": "acceptAll",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{apiId}}"
										},
										{
											"key": "apiVersionId",
											"value": "{{apiVersionId}}"
										},
										{
											"key": "entityType",
											"value": "{{entityType}}"
										},
										{
											"key": "entityId",
											"value": "{{entityId}}"
										}
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "f6265d1b-6013-42d4-a64f-a7e9299f7151"
		},
		{
			"name": "Real-time Events",
			"item": [
				{
					"name": "All APIs in a Workspace Subscription Events",
					"item": [
						{
							"name": "Subscribe for all API events for a user",
							"id": "a89cb3be-ff5d-4972-ab86-579b1b6aa0f7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/subscribe?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"subscribe"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "cbaf192d-56bc-4f56-beec-dd8ef168b645",
									"name": "Subscribe for all API events for a user",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/apis/subscribe?workspace={{workspaceId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"subscribe"
											],
											"query": [
												{
													"key": "workspace",
													"value": "{{workspaceId}}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"subscribe\"\n\t},\n\t\"data\": {\n\t\t\"subscription\": {\n\t\t\t\"id\": \"workspace/{{workspaceId}}/apis\"\n\t\t}\n\t}\n}"
								}
							]
						},
						{
							"name": "Unsubscribe for all API events for a user",
							"id": "78d7fb1b-7085-4504-868a-d4c7cca58a17",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/subscribe?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"subscribe"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "API Created",
							"id": "1b50bc58-7789-4dea-ba4c-133919966f48",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": [
								{
									"id": "54f637c6-d59b-4b5b-a160-da9b186c92be",
									"name": "API Created",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": \"{{apiId}}\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"create\",\n        \"subscription\": {\n            \"id\": \"workspace/{{workspaceId}}/apis\"\n        }\n    },\n    \"data\": {\n        \"id\": \"{{apiId}}\",\n        \"name\": \"{{apiName}}\",\n        \"summary\": \"{{apiSummary}}\",\n        \"updatedAt\": \"{{updatedAt}}\",\n        \"createdAt\": \"{{createdAt}}\",\n        \"createdBy\": \"{{createdBy}}\",\n        \"updatedBy\": \"{{updatedBy}}\",\n        \"description\": \"{{description}}\"\n    }\n}"
								}
							]
						},
						{
							"name": "API Deleted",
							"id": "90554fa7-8ba3-45f6-8440-fbb0c04478be",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": [
								{
									"id": "5bdf64e7-e9a6-4018-90c4-3d029632e9f3",
									"name": "API Deleted",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": \"{{apiId}}\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"destroy\",\n        \"subscription\": {\n            \"id\": \"workspace/{{workspaceId}}/apis\"\n        }\n    },\n    \"data\": {\n        \"id\": \"{{apiId}}\"\n    }\n}"
								}
							]
						},
						{
							"name": "API Added to Workspace",
							"id": "966e958a-609b-4235-a85e-5ad204891ea4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": [
								{
									"id": "69b4e4c9-a39e-4aef-b0d8-185c7e12bce6",
									"name": "API Added to Workspace",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": \"{{apiId}}\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"addedToWorkspace\",\n        \"subscription\": {\n            \"id\": \"workspace/{{workspaceId}}/apis\"\n        }\n    },\n    \"data\": {\n        \"id\": \"{{apiId}}\",\n        \"team\": \"{{teamId}}\",\n        \"workspace\": \"{{workspaceId}}\",\n        \"isEditable\": \"true/false\"\n    }\n}"
								}
							]
						},
						{
							"name": "API Removed from Workspace",
							"id": "e5c64f8a-b35d-45b6-a6f8-dfa1835ee4ac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": [
								{
									"id": "05bb877e-8cbc-4813-a160-8464163a7ee2",
									"name": "API Removed from Workspace",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n\t\"model_id\": \"{{apiId}}\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"removedFromWorkspace\",\n\t\t\"subscription\": {\n\t\t\t\"id\": \"workspace/{{workspaceId}}/apis\"\n\t\t}\n\t},\n\t\"data\": {\n\t\t\"id\": \"{{apiId}}\",\n\t\t\"workspace\": \"{{workspaceId}}\"\n\t}\n}"
								}
							]
						}
					],
					"id": "4f862e47-9d50-414f-b26c-66f25bebd3e3",
					"description": "These include the events the client will receive on subscribing to the user channel.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								],
								"id": "d7a94904-c8e0-4280-8781-7a75618ebf6d"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								],
								"id": "dd7e7029-e98b-45f7-9585-588c00f8aabe"
							}
						}
					]
				},
				{
					"name": "Specific API Subscription Events",
					"item": [
						{
							"name": "Subscribe to an API for events",
							"id": "3695c085-8331-4435-ae32-d5de4a7d0524",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/subscribe",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"subscribe"
									]
								}
							},
							"response": [
								{
									"id": "734f0c67-1775-45cc-b62d-60723ef6cee6",
									"name": "Subscribe to an API for events",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/apis/{{apiId}}/subscribe",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"subscribe"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"subscribe\"\n\t},\n\t\"data\": {\n\t\t\"subscription\": {\n\t\t\t\"id\": \"apis/{{apiId}}\"\n\t\t}\n\t}\n}"
								}
							]
						},
						{
							"name": "Unsubscribe to an API for events",
							"id": "185a12f6-9225-4b43-9b11-17327d95a42c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/subscribe",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"subscribe"
									]
								}
							},
							"response": []
						},
						{
							"name": "API Updated",
							"id": "a4efee76-aeaa-40a7-9a23-4917613fae94",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": [
								{
									"id": "656f1a2c-63a4-4b49-b6ba-f01b0d55f82a",
									"name": "API Updated",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n\t\"model_id\": \"{{apiId}}\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"update\",\n\t\t\"subscription\": {\n\t\t\t\"id\": \"apis/{{apiId}}\"\n\t\t}\n\t},\n\t\"data\": {\n\t\t\"id\": \"{{apiId}}\",\n\t\t\"name\": \"{{name}}\",\n\t\t\"summary\": \"{{summary}}\",\n\t\t\"description\": \"{{description}}\",\n\t\t\"updatedBy\": \"{{updatedBy}}\",\n\t\t\"updatedAt\": \"{{updatedAt}}\"\n\t}\n}"
								}
							]
						},
						{
							"name": "API Version Created",
							"id": "4c3d1179-099a-4b4f-9958-8e57cc0ee08f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": [
								{
									"id": "aa9442b4-2312-4ecb-8c28-8b7edf1c7d12",
									"name": "API Version Created",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": \"{{apiVersionId}}\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"create\",\n        \"subscription\": {\n            \"id\": \"apis/{{apiId}}\"\n        }\n    },\n    \"data\": {\n        \"api\": \"{{apiId}}\",\n        \"name\": \"{{apiVersionName}}\",\n        \"id\": \"{{apiVersionId}}\",\n        \"createdBy\": \"{{createdBy}}\",\n        \"updatedBy\": \"{{updatedBy}}\",\n        \"createdAt\": \"{{createdAt}}\",\n        \"updatedAt\": \"{{updatedAt}}\"\n    }\n}"
								}
							]
						},
						{
							"name": "API Version Deleted",
							"id": "0d40c679-fba3-4316-863c-af1dfca6f6a6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": [
								{
									"id": "04a2da0c-ed82-4afd-9c7d-b2ec07b26f7a",
									"name": "API Version Deleted",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": \"{{apiVersionId}}\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"destroy\",\n        \"subscription\": {\n            \"id\": \"apis/{{apiId}}\"\n        }\n    },\n    \"data\": {\n        \"api\": \"{{apiId}}\",\n        \"id\": \"{{apiVersionId}}\"\n    }\n}"
								}
							]
						},
						{
							"name": "Roles on the API Updated",
							"id": "29688b0a-83b8-47bd-b599-de1669822696",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": [
								{
									"id": "87a2e386-9d61-4522-a217-11b8e69e20cd",
									"name": "Roles on the API Updated",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n\t\"model_id\": \"{{apiId}}\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"updateRoles\",\n\t\t\"subscription\": {\n\t\t\t\"id\": \"apis/{{apiId}}\"\n\t\t}\n\t},\n\t\"data\": {}\n}"
								}
							]
						}
					],
					"id": "7802ff77-c2e7-4aeb-a97b-2a7447bb85e3",
					"description": "These include the events that the client will receive on subscribing to a particular API's channel.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								],
								"id": "d5dfb3d1-c5c0-4215-a79e-8f9aa7f76249"
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								],
								"id": "e8558f48-0b17-4cc6-8896-3290f20f6fcf"
							}
						}
					]
				},
				{
					"name": "Specific API Version Subscription Events",
					"item": [
						{
							"name": "Subscribe to an API Version for events",
							"id": "5ec76cc0-c46b-49cf-82e4-360c302b1397",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/subscribe",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"subscribe"
									]
								}
							},
							"response": [
								{
									"id": "1fdd504b-cda0-4b12-8bb8-98015a423600",
									"name": "[Success] Subscribe to an API Version for events",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/subscribe",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"subscribe"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n\t\"meta\": {\n\t\t\"model\": \"apiversion\",\n\t\t\"action\": \"subscribe\"\n\t},\n\t\"data\": {\n\t\t\"subscription\": {\n\t\t\t\"id\": \"apis/{{apiId}}/apiversions/{{apiVersionId}}\"\n\t\t}\n\t}\n}"
								}
							]
						},
						{
							"name": "Unsubscribe to an API Version for events",
							"id": "567c876c-8d75-4ce1-a8ca-8185fd7142cc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/subscribe",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"subscribe"
									]
								}
							},
							"response": [
								{
									"id": "c4c05a83-8902-4688-85a6-31bf7cd16b5d",
									"name": "[Success] Unsubscribe to an API Version for events",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/subscribe",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"subscribe"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Schema Created",
							"id": "9cb12af6-8dbc-4d5b-b14f-f168c8896487",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": [
								{
									"id": "335b61b9-ba86-4c12-9442-f81480a949cf",
									"name": "Schema Created",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": \"{{schemaId}}\",\n    \"meta\": {\n        \"model\": \"schema\",\n        \"action\": \"create\",\n        \"subscription\": {\n            \"id\": \"apis/{{apiId}}/apiversions/{{apiVersionId}}\"\n        }\n    },\n    \"data\": {\n        \"api\": \"{{apiId}}\",\n        \"apiVersion\": \"{{apiVersionId}}\",\n        \"id\": \"{{schemaId}}\"\n    }\n}"
								}
							]
						},
						{
							"name": "Schema Updated",
							"id": "b4d90de0-96dd-490f-a365-990cf3a5802a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": [
								{
									"id": "eb9d3fb8-12d3-467a-be74-37aad21710cf",
									"name": "Schema Updated",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": \"{{schemaId}}\",\n    \"meta\": {\n        \"model\": \"schema\",\n        \"action\": \"update\",\n        \"subscription\": {\n            \"id\": \"apis/{{apiId}}/apiversions/{{apiVersionId}}\"\n        }\n    },\n    \"data\": {\n        \"id\": \"{{schemaId}}\",\n        \"api\": \"{{apiId}}\",\n        \"apiVersion\": \"{{apiVersionId}}\"\n    }\n}"
								}
							]
						},
						{
							"name": "API Version Updated",
							"id": "b4af4480-8782-4862-989e-9f1cade01e0f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": [
								{
									"id": "ffeef847-91d7-41b1-b7ca-20926f58de6b",
									"name": "API Version Meta Updated",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": \"{{apiVersionId}}\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"update\",\n        \"subscription\": {\n            \"id\": \"apis/{{apiId}}/apiversions/{{apiVersionId}}\"\n        }\n    },\n    \"data\": {\n        \"api\": \"{{apiId}}\",\n        \"name\": \"{{apiVersionName}}\",\n        \"id\": \"{{apiVersionId}}\",\n        \"updatedBy\": \"{{updatedBy}}\",\n        \"updatedAt\": \"{{updatedAt}}\",\n        \"repositoryIntegration\": {\n            \"changesToPushCount\": {{changesToPushCount}},\n            \"changesToPullCount\": {{changesToPullCount}}\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Relation Added",
							"id": "1db06da4-9891-46e3-9cc0-960a15a8bf67",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": [
								{
									"id": "13254638-8628-4545-a74a-8e8e3b574bda",
									"name": "Relation Added",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": \"{{relationId}}\",\n    \"meta\": {\n        \"model\": \"relation\",\n        \"action\": \"update\",\n        \"subscription\": {\n            \"id\": \"apis/{{apiId}}/apiversions/{{apiVersionId}}\"\n        }\n    },\n    \"data\": {\n        \"type\": \"{{relationType}}\",\n        \"api\": \"{{apiId}}\",\n        \"apiVersion\": \"{{apiVersionId}}\"\n    }\n}"
								}
							]
						},
						{
							"name": "Relation Updated",
							"id": "b49dbaa7-c4c7-4afc-8f4b-d8ea6f37e14a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": [
								{
									"id": "a230f618-03de-48a8-8801-c3f685795112",
									"name": "Relation Updated",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": \"{{relationId}}\",\n    \"meta\": {\n        \"model\": \"relation\",\n        \"action\": \"update\",\n        \"subscription\": {\n            \"id\": \"apis/{{apiId}}/apiversions/{{apiVersionId}}\"\n        }\n    },\n    \"data\": {\n        \"type\": \"{{relationType}}\",\n        \"api\": \"{{apiId}}\",\n        \"apiVersion\": \"{{apiVersionId}}\"\n    }\n}"
								}
							]
						},
						{
							"name": "Relation Removed",
							"id": "d0ac1443-01ca-436f-944f-533330ac2aa0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"response": [
								{
									"id": "137e6ddb-ffe7-4bf5-b0ed-c6dbbdce757d",
									"name": "Relation Removed",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": \"{{relationId}}\",\n    \"meta\": {\n        \"model\": \"relation\",\n        \"action\": \"remove\",\n        \"subscription\": {\n            \"id\": \"apis/{{apiId}}/apiversions/{{apiVersionId}}\"\n        }\n    },\n    \"data\": {\n        \"type\": \"{{relationType}}\",\n        \"api\": \"{{apiId}}\",\n        \"apiVersion\": \"{{apiVersionId}}\"\n    }\n}"
								}
							]
						}
					],
					"id": "d6c4944d-abd5-4ca4-bb51-d71ae0670bbd"
				},
				{
					"name": "Collection",
					"item": [
						{
							"name": "Events",
							"item": [
								{
									"name": "Api Update",
									"id": "a6db677d-eb2d-46a8-b13d-f62257f6392e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"response": [
										{
											"id": "2edb902e-c21d-4d0c-b654-195be79152c2",
											"name": "Api Updated",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": ""
												}
											},
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n\t\"model_id\": \"{{apiId}}\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"update\",\n\t\t\"subscription\": {\n\t\t\t\"id\": \"collections/{{collectionidUid}}/apis\"\n\t\t}\n\t},\n\t\"data\": {\n\t\t\"api\": {\n        \t\"id\": \"apiId\",\n        \t\"name\": \"apiname\",\n        \t\"createdAt\": \"{{createdAt}}\",\n        \t\"updatedAt\": \"{{updatedAt}}\"\n        }\n\t}\n}"
										}
									]
								},
								{
									"name": "Api is Linked",
									"id": "9e01d40a-37c7-4c1f-8ef9-9e1fb7431f1b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"response": [
										{
											"id": "bac14c98-149d-467c-8225-2f5a7cc0458e",
											"name": "Api is Linked to a collection",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": ""
												}
											},
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n    \"model_id\": \"{{apiId}}\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"link\",\n        \"subscription\": {\n            \"id\": \"collections/{{collectionidUid}}/apis\"\n        }\n    },\n    \"data\": {\n        \"api\": {\n            \"id\": \"apiId\",\n            \"name\": \"apiname\",\n            \"createdAt\": \"{{createdAt}}\",\n            \"updatedAt\": \"{{updatedAt}}\"\n        },\n        \"apiVersion\": {\n        \t\"id\": \"apiVersionId\",\n        \t\"name\": \"api version name\",\n            \"createdAt\": \"{{createdAt}}\",\n            \"updatedAt\": \"{{updatedAt}}\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Api is unlinked",
									"id": "c38a9228-3fcd-4616-8f8d-95742633a62d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"response": [
										{
											"id": "271a18b4-aded-441d-9539-b912b2e6831c",
											"name": "Api is un-linked to a collection",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": ""
												}
											},
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n    \"model_id\": \"{{apiId}}\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"unlink\",\n        \"subscription\": {\n            \"id\": \"collections/{{collectionidUid}}/apis\"\n        }\n    },\n    \"data\": {\n        \"api\": {\n        \t\"id\": \"{{modelId}}\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "ApiVersion Update",
									"id": "d36b73fc-b084-443a-8751-29059b3c7a17",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"response": [
										{
											"id": "66e045eb-9128-4f2e-8bb7-1b43fe975846",
											"name": "Api Updated",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": ""
												}
											},
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n\t\"model_id\": \"{{apiId}}\",\n\t\"meta\": {\n\t\t\"model\": \"apiVersion\",\n\t\t\"action\": \"create\",\n\t\t\"subscription\": {\n\t\t\t\"id\": \"collections/{{collectionidUid}}/apis\"\n\t\t}\n\t},\n\t\"data\": {\n\t\t\"apiVersion\": {\n        \t\"id\": \"apiId\",\n        \t\"name\": \"api version name\",\n        \t\"createdAt\": \"{{createdAt}}\",\n        \t\"updatedAt\": \"{{updatedAt}}\"\n        },\n        \"api\": {\n        \t\"id\": \"apiId\"\n        }\n\t}\n}"
										}
									]
								},
								{
									"name": "ApiVersion Create",
									"id": "fbd8ea7c-0b56-43e9-80aa-64b90bcdcfd5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"response": [
										{
											"id": "753ced5d-6831-4bbe-9f95-4c4ff6d53a2c",
											"name": "Api Updated",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": ""
												}
											},
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n\t\"model_id\": \"{{apiId}}\",\n\t\"meta\": {\n\t\t\"model\": \"apiVersion\",\n\t\t\"action\": \"update\",\n\t\t\"subscription\": {\n\t\t\t\"id\": \"collections/{{collectionidUid}}/apis\"\n\t\t}\n\t},\n\t\"data\": {\n\t\t\"apiVersion\": {\n        \t\"id\": \"apiId\",\n        \t\"name\": \"apiname\",\n        \t\"createdAt\": \"{{createdAt}}\",\n        \t\"updatedAt\": \"{{updatedAt}}\"\n        },\n        \"api\": {\n        \t\"id\": \"{{apiId}}\"\n        }\n\t}\n}"
										}
									]
								},
								{
									"name": "ApiVersion Destroy",
									"id": "83a15de6-b027-42e4-99dd-f7805f9386c4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"response": [
										{
											"id": "a6c50854-5a3f-4623-9b98-ddcf172bccd5",
											"name": "Api Updated",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": ""
												}
											},
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n\t\"model_id\": \"{{apiId}}\",\n\t\"meta\": {\n\t\t\"model\": \"apiVersion\",\n\t\t\"action\": \"destroy\",\n\t\t\"subscription\": {\n\t\t\t\"id\": \"collections/{{collectionidUid}}/apis\"\n\t\t}\n\t},\n\t\"data\": {\n\t\t\"apiVersion\": {\n        \t\"id\": \"{{apiVersionId}}\"\n        },\n        \"api\": {\n        \t\"id\": \"{{apiId}}\"\n        }\n\t}\n}"
										}
									]
								},
								{
									"name": "Schema is added to a collection",
									"id": "7ee669be-fbbc-493c-8811-2142409b55f3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"response": [
										{
											"id": "8124ae9e-fe70-4b92-b14b-0931d0403f88",
											"name": "Schema is added to apiversion",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": ""
												}
											},
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n    \"model_id\": \"{{apiId}}\",\n    \"meta\": {\n        \"model\": \"schema\",\n        \"action\": \"link\",\n        \"subscription\": {\n            \"id\": \"apis/{{apiId}}/apiversions/{{apiVersionId}}/schema\"\n        }\n    },\n    \"data\": {\n\t\t\"schema\": {\n\t\t\t\"id\": \"{{schemaId}}\",\n        \t\"updatedAt\": \"{{updatedAt}}\",\n        \t\"createdAt\": \"{{createdAt}}\",\n        \t\"createdBy\": \"{{createdBy}}\",\n        \t\"updatedBy\": \"{{updatedBy}}\",\n        \t\"schema\": \"{{schema}}\"\n\t\t},\n\t\t\"apiId\": \"{{apiId}}\",\n\t\t\"apiVersionId\": \"{{apiVersionId}}\"\n    }\n}"
										}
									]
								},
								{
									"name": "Schema is updated",
									"id": "59f3d11d-9beb-4d99-ac62-23fc96f08102",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"response": [
										{
											"id": "9212e078-e4dc-4894-830c-5e00a9ca8e27",
											"name": "Schema is added to a collection",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": ""
												}
											},
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n    \"model_id\": \"{{apiId}}\",\n    \"meta\": {\n        \"model\": \"schema\",\n        \"action\": \"update\",\n        \"subscription\": {\n            \"id\": \"apis/{{apiId}}/apiversions/{{apiVersionId}}/schema\"\n        }\n    },\n    \"data\": {\n\t\t\"schema\": {\n\t\t\t\"id\": \"{{schemaId}}\",\n        \t\"updatedAt\": \"{{updatedAt}}\",\n        \t\"createdAt\": \"{{createdAt}}\",\n        \t\"createdBy\": \"{{createdBy}}\",\n        \t\"updatedBy\": \"{{updatedBy}}\",\n        \t\"schema\": \"{{schema}}\"\n\t\t},\n\t\t\"apiId\": \"{{apiId}}\",\n\t\t\"apiVersionId\": \"{{apiVersionId}}\"\n    }\n}"
										}
									]
								},
								{
									"name": "Schema is removed for a collection",
									"id": "48f8a01f-d071-495f-9220-bad417c789a9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"response": [
										{
											"id": "0b848302-99d9-4a3c-b402-db969d32dfbe",
											"name": "Schema is added to a collection",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": ""
												}
											},
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n    \"model_id\": \"{{apiId}}\",\n    \"meta\": {\n        \"model\": \"schema\",\n        \"action\": \"unlink\",\n        \"subscription\": {\n            \"id\": \"apis/{{apiId}}/apiversions/{{apiVersionId}}/schema\"\n        }\n    },\n    \"data\": {\n\t\t\"schema\": {},\n\t\t\"apiId\": \"{{apiId}}\",\n\t\t\"apiVersionId\": \"{{apiVersionId}}\"\n    }\n}"
										}
									]
								}
							],
							"id": "384af432-91a7-4546-9096-0ae6a0d1a6a8"
						},
						{
							"name": "Subscribe to api events for a collection",
							"id": "5c1757ce-7705-4c72-8ab3-3fa7b317d681",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{url}}/apis/subscribe?collection={{collectionUID}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"subscribe"
									],
									"query": [
										{
											"key": "collection",
											"value": "{{collectionUID}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "95e03d02-d363-48f3-8d03-dd782d81a29a",
									"name": "Subscribe to api events for a collection",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/apis/subscribe?collection={{collectionUID}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"subscribe"
											],
											"query": [
												{
													"key": "collection",
													"value": "{{collectionUID}}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"model\": \"collection\",\n        \"action\": \"subscribeForApi\"\n    },\n    \"data\": {\n        \"subscription\": {\n            \"id\": \"collections/{{collectionUid}}/apis\"\n        }\n    }\n}"
								},
								{
									"id": "316462d7-3e50-484b-8cbd-896c3692a75a",
									"name": "Subscribe to api events for a list of collections",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    collections: ['U1-CID1', 'U1-CID2']\n}"
										},
										"url": {
											"raw": "{{url}}/apis/subscribe",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"subscribe"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"model\": \"collection\",\n        \"action\": \"subscribeForApi\"\n    },\n    \"data\": {\n       \"subscription\": {\n            \"id\": [\n                \"collections/U1-CID1/apis\",\n                \"collections/U1-CID2/apis\"\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "UnSubscribe to api events for a collection",
							"id": "4ec50de0-bd7a-4bc4-9df7-fd76535abce4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/apis/subscribe?collection={{collectionUID}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"subscribe"
									],
									"query": [
										{
											"key": "collection",
											"value": "{{collectionUID}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "54d3d22c-114d-4b64-9a68-723bf0027494",
									"name": "Subscribe to api events for a collection",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/apis/subcribe?collection={{collectionUID}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"subcribe"
											],
											"query": [
												{
													"key": "collection",
													"value": "{{collectionUID}}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"model\": \"collection\",\n        \"action\": \"unsubscribeForApi\"\n    },\n    \"data\": {}\n}"
								}
							]
						},
						{
							"name": "Subscribe to schema events for a collection",
							"id": "981c9132-6984-4d01-a18b-10682b222a0f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/schemas/subscribe",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"schemas",
										"subscribe"
									]
								}
							},
							"response": [
								{
									"id": "a66eb3f6-b5e9-4925-a2aa-bc7bd91ba7e3",
									"name": "Subscribe to schema events for a collection when not linked to a collection",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/apis/:apiId/versions/:versionId/collections/:collectionUid/schema/subscribe?schemaTypes=openapi3",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												":apiId",
												"versions",
												":versionId",
												"collections",
												":collectionUid",
												"schema",
												"subscribe"
											],
											"query": [
												{
													"key": "schemaTypes",
													"value": "openapi3"
												}
											],
											"variable": [
												{
													"key": "apiId",
													"value": ""
												},
												{
													"key": "versionId",
													"value": ""
												},
												{
													"key": "collectionUid",
													"value": ""
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"model\": \"collection\",\n        \"action\": \"subscribeSchema\"\n    },\n    \"data\": {\n        \"subscription\": {\n            \"id\": \"apis/{{apiId}}/apiversions/{{apiVersionId}}/schema\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "UnSubscribe to schema events for a collection",
							"id": "a1595497-cf29-4a15-8c40-fcab9c1cf0fb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/schema/subscribe",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"schema",
										"subscribe"
									]
								}
							},
							"response": [
								{
									"id": "e358afdb-4513-452c-ab64-3aa8e898d7e7",
									"name": "Subscribe to schema events for a collection",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/apis/:apiId/versions/:versionId/collections/:collectionUid/schema",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												":apiId",
												"versions",
												":versionId",
												"collections",
												":collectionUid",
												"schema"
											],
											"variable": [
												{
													"key": "apiId",
													"value": ""
												},
												{
													"key": "versionId",
													"value": ""
												},
												{
													"key": "collectionUid",
													"value": ""
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"model\": \"collection\",\n        \"action\": \"unsubscribeSchema\"\n    },\n    \"data\": {}\n}"
								}
							]
						}
					],
					"id": "08f69057-0add-4692-9316-8d900da7bcee"
				}
			],
			"id": "686c9120-0f71-4f39-af0f-62e864386ca0"
		},
		{
			"name": "Internal",
			"item": [
				{
					"name": "API",
					"item": [
						{
							"name": "Get API and API Version for Relation",
							"id": "574bf28c-1696-4651-86ec-5f112ddc8ad3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/x/apis?relationType={{relationType}}&relationId={{relationId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"x",
										"apis"
									],
									"query": [
										{
											"key": "relationType",
											"value": "{{relationType}}",
											"description": "Supports non-collection relation types - schema, mock, monitor, environment"
										},
										{
											"key": "relationId",
											"value": "{{relationId}}",
											"description": "ID of the entity which is a relation e.g. schemaId, mockId, monitorId etc"
										}
									]
								}
							},
							"response": [
								{
									"id": "a4155b45-b672-4d01-8e0b-2b771fc2b91a",
									"name": "Response for Schema Type",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-access-token",
												"value": "{{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/x/apis?relationType=schema&relationId={{schemaId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"x",
												"apis"
											],
											"query": [
												{
													"key": "relationType",
													"value": "schema",
													"description": "Supports non-collection relation types - schema, mock, monitor, environment"
												},
												{
													"key": "relationId",
													"value": "{{schemaId}}",
													"description": "ID of the entity which is a relation e.g. schemaId, mockId, monitorId etc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": \"85129485-9433-4a72-ab4e-4117cb1e1ef0\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"id\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n        \"name\": \"some api\",\n        \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n        \"updatedAt\": \"2021-07-28T10:21:27.000Z\",\n        \"createdBy\": \"U1\",\n        \"updatedBy\": \"U1\",\n        \"apiVersion\": {\n            \"api\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n            \"id\": \"bc9d0e64-dda4-4792-85f3-95ec0cc7834e\",\n            \"name\": \"Draft\",\n            \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n            \"updatedAt\": \"2021-07-29T10:21:27.000Z\",\n            \"createdBy\": \"U1\",\n            \"updatedBy\": \"U1\"\n        }\n    }\n}"
								},
								{
									"id": "6f147b97-7fc2-452a-bc93-dcbe3efaa4f0",
									"name": "w/out Access Token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/x/apis?relationType=schema&relationId={{schemaId}}&entityType ={{entityType}}&entityId={{entityId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"x",
												"apis"
											],
											"query": [
												{
													"key": "relationType",
													"value": "schema",
													"description": "Supports non-collection relation types - schema, mock, monitor, environment"
												},
												{
													"key": "relationId",
													"value": "{{schemaId}}",
													"description": "ID of the entity which is a relation e.g. schemaId, mockId, monitorId etc"
												},
												{
													"key": "entityType ",
													"value": "{{entityType}}",
													"description": "For Access Delegation use case"
												},
												{
													"key": "entityId",
													"value": "{{entityId}}",
													"description": "For Access Delegation use case"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"find\"\n    },\n    \"data\": {\n        \"id\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n        \"name\": \"some api\",\n        \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n        \"updatedAt\": \"2021-07-28T10:21:27.000Z\",\n        \"createdBy\": \"U1\",\n        \"updatedBy\": \"U1\",\n        \"apiVersion\": {\n            \"api\": \"1afb3a16-e282-46da-a3a3-941fb324d43f\",\n            \"id\": \"bc9d0e64-dda4-4792-85f3-95ec0cc7834e\",\n            \"name\": \"Draft\",\n            \"createdAt\": \"2021-07-29T10:21:27.000Z\",\n            \"updatedAt\": \"2021-07-29T10:21:27.000Z\",\n            \"createdBy\": \"U1\",\n            \"updatedBy\": \"U1\"\n        }\n    }\n}"
								},
								{
									"id": "6559a7cd-41f7-4256-9dda-aab7309b420c",
									"name": "No API linked to Relation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-access-token",
												"value": "{{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/x/apis?relationType={{relationType}}&relationId={{relationId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"x",
												"apis"
											],
											"query": [
												{
													"key": "relationType",
													"value": "{{relationType}}",
													"description": "Supports non-collection relation types - schema, mock, monitor, environment"
												},
												{
													"key": "relationId",
													"value": "{{relationId}}",
													"description": "ID of the entity which is a relation e.g. schemaId, mockId, monitorId etc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"find\"\n    },\n    \"data\": null\n}"
								},
								{
									"id": "3d7265f3-e090-44ef-a470-714c22cb7a7c",
									"name": "Validation: Relation Type is not valid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-access-token",
												"value": "{{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/x/apis?relationType=qwhqiuuh&relationId={{relationId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"x",
												"apis"
											],
											"query": [
												{
													"key": "relationType",
													"value": "qwhqiuuh",
													"description": "Supports non-collection relation types - schema, mock, monitor, environment"
												},
												{
													"key": "relationId",
													"value": "{{relationId}}",
													"description": "ID of the entity which is a relation e.g. schemaId, mockId, monitorId etc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"invalidRelationTypeError\",\n        \"message\": \"The provided relation type is invalid.\",\n        \"details\": {\n            \"type\": \"qwhqiuuh\"\n        }\n    }\n}"
								},
								{
									"id": "13d5fdbe-31f4-401a-9436-a701caaf8f73",
									"name": "Validation: Relation ID is not a valid UUID",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-access-token",
												"value": "{{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/x/apis?relationType={{relationType}}&relationId=euthi3uh4ivh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"x",
												"apis"
											],
											"query": [
												{
													"key": "relationType",
													"value": "{{relationType}}",
													"description": "Supports schema, mock, monitor, environment, documentation and other test types"
												},
												{
													"key": "relationId",
													"value": "euthi3uh4ivh",
													"description": "ID of the entity which is a relation e.g. schemaId, mockId, monitorId etc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"invalidUIDError\",\n        \"message\": \"The ID provided is not a valid UID.\",\n        \"details\": {\n            \"uid\": \"euthi3uh4ivh\"\n        }\n    }\n}"
								},
								{
									"id": "e34a1d87-ceb6-4c41-ba9e-ed47482a560d",
									"name": "Relation Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-access-token",
												"value": "{{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/x/apis?relationType=ttt&relationId=123",
											"host": [
												"{{url}}"
											],
											"path": [
												"x",
												"apis"
											],
											"query": [
												{
													"key": "relationType",
													"value": "ttt",
													"description": "Supports non-collection relation types - schema, mock, monitor, environment"
												},
												{
													"key": "relationId",
													"value": "123",
													"description": "ID of the entity which is a relation e.g. schemaId, mockId, monitorId etc"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 06 Aug 2021 10:14:49 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the relation you are looking for\",\n        \"details\": {\n            \"model\": \"relation\",\n            \"model_id\": \"123\",\n            \"owner\": \"610363\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get an API",
							"id": "da24b7c0-6ff5-49e7-9e3c-0e614e393565",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{basicAuthUserName}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/x/apis/{{apiId}}?user_id={{user_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"apis",
										"{{apiId}}"
									],
									"query": [
										{
											"key": "user_id",
											"value": "{{user_id}}"
										}
									]
								},
								"description": "This endpoint returns an API with the provided id."
							},
							"response": [
								{
									"id": "e4a2ee7a-087d-4b97-8bba-ea4bb91c0bcb",
									"name": "Get an API with version and schema data",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Access-Token",
												"value": "{{accessToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apis/{{apiId}}?populate=versions&populate=schemas",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"{{apiId}}"
											],
											"query": [
												{
													"key": "populate",
													"value": "versions"
												},
												{
													"key": "populate",
													"value": "schemas"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Wed, 13 May 2020 19:06:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=316b2ff795ad0a46"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=fbff419242e20a27"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": ""
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": ""
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": ""
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": ""
										},
										{
											"key": "ETag",
											"value": "W/\"24f-zsrnkmp37EXZ/5LZl2tzrg\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"model_id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"findone\"\n    },\n    \"data\": {\n        \"createdBy\": \"7732157\",\n        \"updatedBy\": \"7732157\",\n        \"team\": null,\n        \"id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n        \"name\": \"Sync Pen test\",\n        \"summary\": \"This is supposed to be a short summary.\",\n        \"description\": \"This is supposed to handle markdown *descriptions*.\",\n        \"createdAt\": \"2020-05-13T18:49:31.000Z\",\n        \"updatedAt\": \"2020-05-13T19:01:31.000Z\",\n        \"versions\": [\n            {\n                \"id\": \"559da235-7d58-460a-ac17-7431e6304c94\",\n                \"name\": \"1.0.0\",\n                \"schemas\": [\n                    {\n                        \"id\": \"e2b2dd33-6261-4ba7-b6a8-cc21b633c101\",\n                        \"type\": \"openapi3\",\n                        \"language\": \"yaml\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
								},
								{
									"id": "a9fdd98e-f767-4d6e-9de0-5257457c7444",
									"name": "Get an API with version",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Access-Token",
												"value": "{{accessToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apis/{{apiId}}?populate=versions",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"{{apiId}}"
											],
											"query": [
												{
													"key": "populate",
													"value": "versions"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Wed, 13 May 2020 19:01:43 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=09ecd04a8bf99b7b"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=7abb51f906271bf4"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": ""
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": ""
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": ""
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": ""
										},
										{
											"key": "ETag",
											"value": "W/\"1f1-/FJZEKcYvwVpkaT3+XauXg\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"model_id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"findone\"\n    },\n    \"data\": {\n        \"createdBy\": \"7732157\",\n        \"updatedBy\": \"7732157\",\n        \"team\": null,\n        \"id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n        \"name\": \"Sync Pen test\",\n        \"summary\": \"This is supposed to be a short summary.\",\n        \"description\": \"This is supposed to handle markdown *descriptions*.\",\n        \"createdAt\": \"2020-05-13T18:49:31.000Z\",\n        \"updatedAt\": \"2020-05-13T19:01:31.000Z\",\n        \"versions\": [\n            {\n                \"id\": \"559da235-7d58-460a-ac17-7431e6304c94\",\n                \"name\": \"1.0.0\"\n            }\n        ]\n    }\n}"
								},
								{
									"id": "e302b773-49e0-4019-be88-0f918e80abec",
									"name": "Get an API",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Access-Token",
												"value": "{{accessToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apis/{{apiId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"{{apiId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n\t\"model_id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"find\"\n\t},\n\t\"data\": {\n\t\t\"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n\t\t\"name\": \"Sync API\",\n\t\t\"summary\": \"This is a summary\",\n\t\t\"description\": \"This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.This is a description.\",\n\t\t\"createdBy\": \"5665\",\n\t\t\"createdAt\": \"2019-02-12 19:34:49\",\n\t\t\"updatedAt\": \"2019-02-12 19:34:49\"\n\t}\n}"
								},
								{
									"id": "e6eefe75-7f2e-4548-8939-d59c7f6a0e2d",
									"name": "Get an API with version, schema and relation data",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Access-Token",
												"value": "{{accessToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apis/{{apiId}}?populate=versions&populate=schemas&populate=relations",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"{{apiId}}"
											],
											"query": [
												{
													"key": "populate",
													"value": "versions"
												},
												{
													"key": "populate",
													"value": "schemas"
												},
												{
													"key": "populate",
													"value": "relations"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Wed, 13 May 2020 19:07:10 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=6170eb279f32cbb0"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=99b23bd0ca28b287"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": ""
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": ""
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": ""
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": ""
										},
										{
											"key": "ETag",
											"value": "W/\"772-aMbOXQ28y8T1rc+HiS9HKQ\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"model_id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"findone\"\n    },\n    \"data\": {\n        \"createdBy\": \"7732157\",\n        \"updatedBy\": \"7732157\",\n        \"team\": null,\n        \"id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n        \"name\": \"Sync Pen test\",\n        \"summary\": \"This is supposed to be a short summary.\",\n        \"description\": \"This is supposed to handle markdown *descriptions*.\",\n        \"createdAt\": \"2020-05-13T18:49:31.000Z\",\n        \"updatedAt\": \"2020-05-13T19:01:31.000Z\",\n        \"versions\": [\n            {\n                \"id\": \"559da235-7d58-460a-ac17-7431e6304c94\",\n                \"name\": \"1.0.0\",\n                \"schemas\": [\n                    {\n                        \"id\": \"e2b2dd33-6261-4ba7-b6a8-cc21b633c101\",\n                        \"type\": \"openapi3\",\n                        \"language\": \"yaml\"\n                    }\n                ],\n                \"relations\": [\n                    {\n                        \"id\": \"7732157-f27041a1-1e05-4f63-a81d-31107364e640\",\n                        \"model\": \"environment\",\n                        \"type\": \"environment\",\n                        \"modelId\": \"7732157-f27041a1-1e05-4f63-a81d-31107364e640\"\n                    },\n                    {\n                        \"id\": \"7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d\",\n                        \"model\": \"environment\",\n                        \"type\": \"environment\",\n                        \"modelId\": \"7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d\"\n                    },\n                    {\n                        \"id\": \"7732157-f2924ed2-5406-4a73-bb80-39a113545cb9\",\n                        \"model\": \"environment\",\n                        \"type\": \"environment\",\n                        \"modelId\": \"7732157-f2924ed2-5406-4a73-bb80-39a113545cb9\"\n                    },\n                    {\n                        \"id\": \"7681c25b-5c50-44a6-8724-fe1e71550160\",\n                        \"model\": \"mock\",\n                        \"type\": \"mock\",\n                        \"modelId\": \"7681c25b-5c50-44a6-8724-fe1e71550160\"\n                    },\n                    {\n                        \"id\": \"1ea954a7-ad6d-46c0-b8e7-552c5334c253\",\n                        \"model\": \"monitor\",\n                        \"type\": \"monitor\",\n                        \"modelId\": \"1ea954a7-ad6d-46c0-b8e7-552c5334c253\"\n                    },\n                    {\n                        \"id\": \"5b32caea-903c-472e-81a2-2cb054ede666\",\n                        \"model\": \"collection\",\n                        \"type\": \"documentation\",\n                        \"modelId\": \"7732157-7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4\"\n                    },\n                    {\n                        \"id\": \"b26bc935-7422-4f73-8d03-9bf212fb48ba\",\n                        \"model\": \"collection\",\n                        \"type\": \"testsuite\",\n                        \"modelId\": \"7732157-37350b62-41f3-428a-8bd5-fec517bb4f43\"\n                    },\n                    {\n                        \"id\": \"35c6bdbd-d602-4b37-9c87-1640fc8025c8\",\n                        \"model\": \"collection\",\n                        \"type\": \"integrationtest\",\n                        \"modelId\": \"7732157-6537c169-8d02-413f-94f3-4dda79355a90\"\n                    },\n                    {\n                        \"id\": \"bb69b435-a90a-44fe-aa49-f580eeb1be88\",\n                        \"model\": \"collection\",\n                        \"type\": \"contracttest\",\n                        \"modelId\": \"7732157-38f1a479-3175-40c6-8b76-9b151f04d7ac\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
								},
								{
									"id": "56c0c354-02b2-4f05-bac3-a8c43644076e",
									"name": "Get an API with version and relation without schema",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Access-Token",
												"value": "{{accessToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apis/{{apiId}}?populate=versions&populate=relations",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"{{apiId}}"
											],
											"query": [
												{
													"key": "populate",
													"value": "versions"
												},
												{
													"key": "populate",
													"value": "schemas",
													"disabled": true
												},
												{
													"key": "populate",
													"value": "relations"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Wed, 13 May 2020 19:07:34 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=63072000; includeSubDomains"
										},
										{
											"key": "x-srv-trace",
											"value": "v=1;t=6f0390de3755b681"
										},
										{
											"key": "x-srv-span",
											"value": "v=1;s=0fe5d258a4aa567b"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": ""
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": ""
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": ""
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": ""
										},
										{
											"key": "ETag",
											"value": "W/\"714-Hk4+bWmwuYej76oShcO/fg\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"model_id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n    \"meta\": {\n        \"model\": \"api\",\n        \"action\": \"findone\"\n    },\n    \"data\": {\n        \"createdBy\": \"7732157\",\n        \"updatedBy\": \"7732157\",\n        \"team\": null,\n        \"id\": \"8fe00285-9991-455a-a8dc-af3115d3db24\",\n        \"name\": \"Sync Pen test\",\n        \"summary\": \"This is supposed to be a short summary.\",\n        \"description\": \"This is supposed to handle markdown *descriptions*.\",\n        \"createdAt\": \"2020-05-13T18:49:31.000Z\",\n        \"updatedAt\": \"2020-05-13T19:01:31.000Z\",\n        \"versions\": [\n            {\n                \"id\": \"559da235-7d58-460a-ac17-7431e6304c94\",\n                \"name\": \"1.0.0\",\n                \"relations\": [\n                    {\n                        \"id\": \"7732157-f27041a1-1e05-4f63-a81d-31107364e640\",\n                        \"model\": \"environment\",\n                        \"type\": \"environment\",\n                        \"modelId\": \"7732157-f27041a1-1e05-4f63-a81d-31107364e640\"\n                    },\n                    {\n                        \"id\": \"7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d\",\n                        \"model\": \"environment\",\n                        \"type\": \"environment\",\n                        \"modelId\": \"7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d\"\n                    },\n                    {\n                        \"id\": \"7732157-f2924ed2-5406-4a73-bb80-39a113545cb9\",\n                        \"model\": \"environment\",\n                        \"type\": \"environment\",\n                        \"modelId\": \"7732157-f2924ed2-5406-4a73-bb80-39a113545cb9\"\n                    },\n                    {\n                        \"id\": \"7681c25b-5c50-44a6-8724-fe1e71550160\",\n                        \"model\": \"mock\",\n                        \"type\": \"mock\",\n                        \"modelId\": \"7681c25b-5c50-44a6-8724-fe1e71550160\"\n                    },\n                    {\n                        \"id\": \"1ea954a7-ad6d-46c0-b8e7-552c5334c253\",\n                        \"model\": \"monitor\",\n                        \"type\": \"monitor\",\n                        \"modelId\": \"1ea954a7-ad6d-46c0-b8e7-552c5334c253\"\n                    },\n                    {\n                        \"id\": \"5b32caea-903c-472e-81a2-2cb054ede666\",\n                        \"model\": \"collection\",\n                        \"type\": \"documentation\",\n                        \"modelId\": \"7732157-7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4\"\n                    },\n                    {\n                        \"id\": \"35c6bdbd-d602-4b37-9c87-1640fc8025c8\",\n                        \"model\": \"collection\",\n                        \"type\": \"integrationtest\",\n                        \"modelId\": \"7732157-6537c169-8d02-413f-94f3-4dda79355a90\"\n                    },\n                    {\n                        \"id\": \"b26bc935-7422-4f73-8d03-9bf212fb48ba\",\n                        \"model\": \"collection\",\n                        \"type\": \"testsuite\",\n                        \"modelId\": \"7732157-37350b62-41f3-428a-8bd5-fec517bb4f43\"\n                    },\n                    {\n                        \"id\": \"bb69b435-a90a-44fe-aa49-f580eeb1be88\",\n                        \"model\": \"collection\",\n                        \"type\": \"contracttest\",\n                        \"modelId\": \"7732157-38f1a479-3175-40c6-8b76-9b151f04d7ac\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Delete an API",
							"id": "496f9d26-4bdc-431b-bf8c-81a4a890dcba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "x-postman-service",
										"value": "service-identifier",
										"description": "This is the service identifier from where this endpoint is being called.\nFor now we'll only allow `workspace-service` to consume this endpoint",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/x/apis/ef98d466-6dd1-4238-8f62-6575ea102d02?user_id={{userId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"apis",
										"ef98d466-6dd1-4238-8f62-6575ea102d02"
									],
									"query": [
										{
											"key": "user_id",
											"value": "{{userId}}",
											"description": "This is required parameter when calling this endpoint. It should be the id of the user on whose behalf the request is being made"
										}
									]
								},
								"description": "This endpoint exposes the delete API functionality using basic auth validation.\n\nCurrently this endpoint can only be called from workspace-service."
							},
							"response": [
								{
									"id": "b7f556ae-7c71-4795-a23d-399b99ecd7c9",
									"name": "Success: Delete an API",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-postman-service",
												"value": "workspace-service",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apis/ef98d466-6dd1-4238-8f62-6575ea102d02?user_id={{userId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"ef98d466-6dd1-4238-8f62-6575ea102d02"
											],
											"query": [
												{
													"key": "user_id",
													"value": "{{userId}}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n\t\"model_id\": \"392355ae-5f06-47b7-a5b6-854b8be41bd5\",\n\t\"meta\": {\n\t\t\"model\": \"api\",\n\t\t\"action\": \"destroy\"\n\t},\n\t\"data\": {\n\t\t\"id\": \"392355ae-5f06-47b7-a5b6-854b8be41bd5\"\n\t}\n}"
								},
								{
									"id": "cb4ae8ee-8089-41fa-b00b-8e62e7a68f94",
									"name": "403 Service not allowed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-postman-service",
												"value": "random-service",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apis/ef98d466-6dd1-4238-8f62-6575ea102d02?user_id={{userId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"ef98d466-6dd1-4238-8f62-6575ea102d02"
											],
											"query": [
												{
													"key": "user_id",
													"value": "{{userId}}"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"name\": \"serviceNotAllowed\",\n    \"message\": \"This service is not allowed to access this endpoint.\",\n    \"details\": {\n      \"service\": \"random-service\"\n    }\n  }\n}"
								},
								{
									"id": "e1c60afa-3070-4328-b106-5adcf511b0a1",
									"name": "403 Invalid basic auth credentials",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-postman-service",
												"value": "workspace-service",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apis/ef98d466-6dd1-4238-8f62-6575ea102d02?user_id={{userId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"ef98d466-6dd1-4238-8f62-6575ea102d02"
											],
											"query": [
												{
													"key": "user_id",
													"value": "{{userId}}"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"name\": \"authenticationError\",\n    \"message\": \"You are not authenticated by the server.\"\n  }\n}"
								},
								{
									"id": "49b3b85d-b96b-4229-86f6-e2c84ad01168",
									"name": "403 No permission to delete API",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-postman-service",
												"value": "workspace-service",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apis/ef98d466-6dd1-4238-8f62-6575ea102d02?user_id={{userId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"ef98d466-6dd1-4238-8f62-6575ea102d02"
											],
											"query": [
												{
													"key": "user_id",
													"value": "{{userId}}"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"name\": \"forbiddenError\",\n    \"message\": \"You are not permitted to perform the action.\",\n    \"details\": {\n      \"model\": \"api\",\n      \"model_id\": \"ef98d466-6dd1-4238-8f62-6575ea102d02\",\n      \"owner\": \"U1\",\n      \"message\": \"You do not have access to perform this operation.\"\n    }\n  }\n}"
								},
								{
									"id": "20e8582c-2bfa-468c-afab-5fea7c4fce18",
									"name": "404 API not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "x-postman-service",
												"value": "workspace-service",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/apis/ef98d466-6dd1-4238-8f62-6575ea102d02?user_id={{userId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"ef98d466-6dd1-4238-8f62-6575ea102d02"
											],
											"query": [
												{
													"key": "user_id",
													"value": "{{userId}}"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"We could not find the API you are looking for\",\n    \"details\": {\n      \"model\": \"api\",\n      \"model_id\": \"ef98d466-6dd1-4238-8f62-6575ea102d02\",\n      \"ower\": \"U1\"\n    }\n  }\n}"
								}
							]
						}
					],
					"id": "9e54ec98-2e01-4c22-bbd2-e4dfb9a2506d"
				},
				{
					"name": "Relations",
					"item": [
						{
							"name": "Link a Schema with an API Version",
							"id": "ca0cf1af-14d2-4b50-9e2f-67abd1a9961e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "// To create a single relation\n{\n\t\"type\": \"documentation\",\n\t\"model\": \"collection\",\n\t\"modelId\": \"5665-12345678-1234-1234-1234-123456789012\",\n\t\"versionTag\": null\n}\n\n// To create from schema\n{\n\t\"type\": \"<documentation|mock|monitor|testsuite|contracttest|integrationtest>\",\n\t\"schemaId\": \"<Schema id>\",\n\t\"configurations\": {\n\t\t\"converter\": {\n\t\t\t\"folderStrategy\": \"Paths\",\n\t\t\t\"collapseFolders\": true,\n\t\t\t...Other options\n\t\t},\n\t\t\"collection\": {\"name\": \"Name of collection\"},\n\t\t\"<mock|monitor>\": {\"name\": \"Name of entity\", ...other mock and monitor options}\n\t}\n}\n\n// To create mock or monitor from collection\n{\n\t\"type\": \"<mock|monitor>\",\n\t\"collectionId\": \"<collection id>\",\n\t\"configurations\": {\n\t\t\"<mock|monitor>\": {\"name\": \"Name of entity\", ...other mock and monitor options}\n\t}\n}\n\n// To link a schema\n{\n\t\"type\": \"schema\",\n    \"model\": \"schema\",\n\t\"modelId\": \"<schema id>\"\n}"
								},
								"url": {
									"raw": "{{url}}/x/apis/{{apiId}}/versions/{{apiVersionId}}/relations",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"relations"
									]
								},
								"description": "This endpoint will allow you to add any of the following entities to the specified API Version.\n\nThe `versionTag` field is optional, which means if you don't specify any, this will go ahead and link the HEAD/Current state of the collection. (Note: This behaviour can change based on what is required by product)"
							},
							"response": [
								{
									"id": "99d5c0f0-cfec-4942-8c24-2bd4c28c31de",
									"name": "Success: Link an existing schema with an API Version",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"type\": \"schema\",\n    \"model\": \"schema\",\n\t\"modelId\": \"fc64d1fe-b6aa-444c-a414-3367bed54064\",\n    \"revisionId\": \"123\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"relations"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": \"fc64d1fe-b6aa-444c-a414-3367bed54064\",\n\t\"meta\": {\n\t\t\"model\": \"schema\",\n\t\t\"action\": \"add\"\n\t},\n    \"data\": {\n        \"id\": \"fc64d1fe-b6aa-444c-a414-3367bed54064\",\n        \"model\": \"schema\",\n        \"modelId\": \"fc64d1fe-b6aa-444c-a414-3367bed54064\",\n        \"versionTag\": null\n    }\n}"
								},
								{
									"id": "71a197de-c7ff-433d-89cf-527818578cf1",
									"name": "w/out an Access Token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"type\": \"schema\",\n    \"model\": \"schema\",\n\t\"modelId\": \"fc64d1fe-b6aa-444c-a414-3367bed54064\",\n    \"revisionId\": \"123\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/relations?entityType={{entityType}}&entityId={{entityId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												"{{apiId}}",
												"versions",
												"{{apiVersionId}}",
												"relations"
											],
											"query": [
												{
													"key": "entityType",
													"value": "{{entityType}}",
													"description": "For Access Delegation use case"
												},
												{
													"key": "entityId",
													"value": "{{entityId}}",
													"description": "For Access Delegation use case"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"model_id\": \"fc64d1fe-b6aa-444c-a414-3367bed54064\",\n\t\"meta\": {\n\t\t\"model\": \"schema\",\n\t\t\"action\": \"add\"\n\t},\n    \"data\": {\n        \"id\": \"fc64d1fe-b6aa-444c-a414-3367bed54064\",\n        \"model\": \"schema\",\n        \"modelId\": \"fc64d1fe-b6aa-444c-a414-3367bed54064\",\n        \"versionTag\": null\n    }\n}"
								}
							]
						}
					],
					"id": "cb3ddaef-168b-43f6-adda-14f04a671db7"
				},
				{
					"name": "Model Events",
					"id": "74afa42f-6cbe-4382-8cd2-a0ab030a09b0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{primary_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{primary_user}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"model\": \"collection|environment|schema|api|collectionrun\",\n    \"action\": \"create|update|destroy|addedToWorkspace|removedFromWorkspace\",\n    \"data\": {\n        \"model_id\": \"\",\n        ...Some extra data as per requirement\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/x/events",
							"host": [
								"{{url}}"
							],
							"path": [
								"x",
								"events"
							]
						}
					},
					"response": [
						{
							"id": "08dc06d4-5f70-4fef-8396-df54fd6b4e5b",
							"name": "CollectionRun Create/ Destroy",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"collectionrun\",\n    \"action\": \"create / destroy\",\n    \"data\": {\n        \"model_id\": \"collectionrun ID\",\n        \"collection\": {\"id\": \"collection UID\"}\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/x/events",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"events"
									]
								}
							},
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"service\": \"api-dev-platform\",\n        \"action\": \"handleModelEvent\",\n        \"event\": {\n            \"model\": \"collectionrun\",\n            \"action\": \"create/destroy\"\n        }\n    },\n    \"data\": {\n        \"success\": true\n    }\n}"
						},
						{
							"id": "866a7131-c952-420f-9ae0-092c469c042d",
							"name": "Environment destroy",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"environment\",\n    \"action\": \"destroy\",\n    \"data\": {\n        \"model_id\": \"environment uid\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/x/events",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"service\": \"api-dev-platform\",\n        \"action\": \"handleModelEvent\",\n        \"event\": {\n            \"model\": \"environment\",\n            \"action\": \"destroy\"\n        }\n    },\n    \"data\": {\"success\": true}\n}"
						},
						{
							"id": "e7a80f2d-567c-4ac2-a379-be84a4c66ade",
							"name": "API added to workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"api\",\n    \"action\": \"addedToWorkspace\",\n    \"data\": {\n        \"model_id\": \"API id\",\n        \"workspace\": {\"id\": \"Workspace ID\"}\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/x/events",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"service\": \"api-dev-platform\",\n        \"action\": \"handleModelEvent\",\n        \"event\": {\n            \"model\": \"api\",\n            \"action\": \"addedToWorkspace\"\n        }\n    },\n    \"data\": {\"success\": true}\n}"
						},
						{
							"id": "652f7fdd-60ec-4155-a8af-b84813451dda",
							"name": "API removed from workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"api\",\n    \"action\": \"removedFromWorkspace\",\n    \"data\": {\n        \"model_id\": \"API id\",\n        \"workspace\": {\"id\": \"Workspace ID\"}\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/x/events",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"service\": \"api-dev-platform\",\n        \"action\": \"handleModelEvent\",\n        \"event\": {\n            \"model\": \"api\",\n            \"action\": \"removedFromWorkspace\"\n        }\n    },\n    \"data\": {\"success\": true}\n}"
						},
						{
							"id": "9ffae1ae-6783-485e-a687-02c4e8a6f703",
							"name": "API published to API network",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"api\",\n    \"action\": \"updatePublishedStatus\",\n    \"data\": {\n        \"model_id\": \"API id\",\n        \"publish\": [\"<API Version IDs>\"],\n        \"unpublish\": [\"<API Version IDs>\"]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/x/events",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"service\": \"api-dev-platform\",\n        \"action\": \"handleModelEvent\",\n        \"event\": {\n            \"model\": \"api\",\n            \"action\": \"updatePublishedStatus\"\n        }\n    },\n    \"data\": {\"success\": true}\n}"
						},
						{
							"id": "25985052-f5ba-42b1-87bc-58963ff86b8f",
							"name": "API unpublished from API network",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"api\",\n    \"action\": \"unpublish\",\n    \"data\": {\n        \"model_id\": \"API id\",\n        \"version\": {\"id\": \"API version id\"}\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/x/events",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"service\": \"api-dev-platform\",\n        \"action\": \"handleModelEvent\",\n        \"event\": {\n            \"model\": \"api\",\n            \"action\": \"unpublish\"\n        }\n    },\n    \"data\": {\"success\": true}\n}"
						},
						{
							"id": "ea7ffca4-ea86-4778-9b31-93eb5ffac7fb",
							"name": "Mock destroy",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"mock\",\n    \"action\": \"destroy\",\n    \"data\": {\n        \"model_id\": \"Mock ID\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/x/events",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"service\": \"api-dev-platform\",\n        \"action\": \"handleModelEvent\",\n        \"event\": {\n            \"model\": \"mock\",\n            \"action\": \"destroy\"\n        }\n    },\n    \"data\": {\"success\": true}\n}"
						},
						{
							"id": "1c6adc80-9fd8-4441-a3b0-760b8bd49977",
							"name": "Monitor destroy",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"monitor\",\n    \"action\": \"destroy\",\n    \"data\": {\n        \"model_id\": \"Monitor ID\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/x/events",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"service\": \"api-dev-platform\",\n        \"action\": \"handleModelEvent\",\n        \"event\": {\n            \"model\": \"monitor\",\n            \"action\": \"destroy\"\n        }\n    },\n    \"data\": {\"success\": true}\n}"
						},
						{
							"id": "cc5b406a-2c40-42c6-b17c-da3951ce64e8",
							"name": "Mock update",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"mock\",\n    \"action\": \"update\",\n    \"data\": {\n        \"model_id\": \"Mock ID\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/x/events",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"service\": \"api-dev-platform\",\n        \"action\": \"handleModelEvent\",\n        \"event\": {\n            \"model\": \"mock\",\n            \"action\": \"update\"\n        }\n    },\n    \"data\": {\"success\": true}\n}"
						},
						{
							"id": "a7afa964-8f78-4d4f-9670-9387fe165583",
							"name": "Monitor update",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"monitor\",\n    \"action\": \"update\",\n    \"data\": {\n        \"model_id\": \"Monitor ID\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/x/events",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"service\": \"api-dev-platform\",\n        \"action\": \"handleModelEvent\",\n        \"event\": {\n            \"model\": \"monitor\",\n            \"action\": \"update\"\n        }\n    },\n    \"data\": {\"success\": true}\n}"
						},
						{
							"id": "b2e0be7c-3423-4207-bbd8-0255fb847547",
							"name": "VersionTag destroy",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"versionTag\",\n    \"action\": \"destroy\",\n    \"data\": {\n        \"model_id\": \"Version Tag ID\",\n        \"collection\": {\"id\": \"collection UID\"}\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/x/events",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"service\": \"api-dev-platform\",\n        \"action\": \"handleModelEvent\",\n        \"event\": {\n            \"model\": \"versionTag\",\n            \"action\": \"destroy\"\n        }\n    },\n    \"data\": {\"success\": true}\n}"
						},
						{
							"id": "86397010-9b0e-4430-baec-7f5c84f09798",
							"name": "Collection update",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"collection\",\n    \"action\": \"update\",\n    \"data\": {\n        \"model_id\": \"Collection UID\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/x/events",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"service\": \"api-dev-platform\",\n        \"action\": \"handleModelEvent\",\n        \"event\": {\n            \"model\": \"collection\",\n            \"action\": \"update\"\n        }\n    },\n    \"data\": {\"success\": true}\n}"
						},
						{
							"id": "cd593243-d0c0-4481-aeef-a5be92bdf607",
							"name": "Collection destroy",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"collection\",\n    \"action\": \"destroy\",\n    \"data\": {\n        \"model_id\": \"Collection UID\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/x/events",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"service\": \"api-dev-platform\",\n        \"action\": \"handleModelEvent\",\n        \"event\": {\n            \"model\": \"collection\",\n            \"action\": \"destroy\"\n        }\n    },\n    \"data\": {\"success\": true}\n}"
						},
						{
							"id": "f1f60eb5-80e5-4369-98f2-556590447a47",
							"name": "Schema Destroy",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"schema\",\n    \"action\": \"destroy\",\n    \"data\": {\n        \"model_id\": \"Schema ID\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/x/events",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": null,\n    \"meta\": {\n        \"service\": \"api-dev-platform\",\n        \"action\": \"handleModelEvent\",\n        \"event\": {\n            \"model\": \"schema\",\n            \"action\": \"destroy\"\n        }\n    },\n    \"data\": {\n        \"success\": true\n    }\n}"
						},
						{
							"id": "9ab81b75-599d-49fa-b93e-c25e68352829",
							"name": "Schema Update",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"schema\",\n    \"action\": \"update\",\n    \"data\": {\n        \"model_id\": \"eb4c6a70-92f6-4236-94f9-d8a9da92d2d7\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/x/events",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"events"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"eb4c6a70-92f6-4236-94f9-d8a9da92d2d7\",\n    \"meta\": {\n        \"service\": \"api-dev-platform\",\n        \"action\": \"handleModelEvent\",\n        \"event\": {\n            \"model\": \"schema\",\n            \"action\": \"update\"\n        }\n    },\n    \"data\": {\n        \"success\": true\n    }\n}"
						}
					]
				},
				{
					"name": "Get IDs of the linked relations in an API Version",
					"id": "550eff1f-9d70-4212-8116-a5213e5086fc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{basicAuthUserName}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/x/apis/{{apiId}}/versions/{{apiVersionId}}/{{entityType}}?user_id={{userId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"x",
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersionId}}",
								"{{entityType}}"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{userId}}"
								}
							]
						},
						"description": "The `relationType` can be either of `mock` or `monitor`. More will be supported later."
					},
					"response": [
						{
							"id": "354cd8a7-d130-4667-bdbd-e647fc398e78",
							"name": "Get IDs of the linked monitors in an API Version",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/monitor",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"monitor"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"103eccbe-6a4e-4ee9-a498-169885976f87\",\n\t\"meta\": {\n\t\t\"model\": \"apiversion\",\n\t\t\"action\": \"getLinkedRelationsForType\"\n\t},\n\t\"data\": {\n\t\t\"monitor\": [\n\t\t\t{\n\t\t\t\t\"id\": \"103eccbe-6a4e-4ee9-a498-169885976f21\",\n\t\t\t\t\"name\": \"Monitor 1\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": \"103eccbe-6a4e-4ee9-a498-169885976f23\",\n\t\t\t\t\"name\": \"Monitor2\"\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "db10e3d6-dcbc-45e6-919c-edc7c26e261a",
							"name": "Get IDs of the linked mocks in an API Version",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-access-token",
										"value": "{{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/mock",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"mock"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{apiVersionId}}\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"getLinkedRelationsForType\"\n    },\n    \"data\": {\n        \"mock\": [\n            {\n                \"id\": \"\"\n            },\n            {\n                \"id\": \"\"\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "[Internal] Find API Version by ID",
					"id": "ac7ee276-d680-4ae7-a3ea-e322653a707a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/x/apiversions/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"x",
								"apiversions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{apiVersionId}}"
								}
							]
						}
					},
					"response": [
						{
							"id": "c845876d-906a-4f27-97e2-c372f61bca1e",
							"name": "[Internal] Find API Version by ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api-dev-platform.postman-beta.tech/x/apiversions/:id",
									"protocol": "https",
									"host": [
										"api-dev-platform",
										"postman-beta",
										"tech"
									],
									"path": [
										"x",
										"apiversions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{apiVersionId}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Wed, 28 Jul 2021 06:04:47 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=98819941aef986a9"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=7f9b852cb70b7e5e"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"key": "ETag",
									"value": "W/\"1e7-3Rx0wFAMBDN9BKqQDvfbuA\""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"14d467d2-5e1e-4b8a-b97e-aa485d54f738\",\n    \"meta\": {\n        \"model\": \"apiVersion\",\n        \"action\": \"findById\"\n    },\n    \"data\": {\n        \"api\": \"8be2e1e7-f6e0-4705-9f17-e06304729456\",\n        \"id\": \"14d467d2-5e1e-4b8a-b97e-aa485d54f738\",\n        \"name\": \"v2\",\n        \"summary\": null,\n        \"stage\": \"Planning\",\n        \"visibility\": null,\n        \"createdBy\": \"460493\",\n        \"updatedBy\": \"460493\",\n        \"repositoryIntegration\": null,\n        \"lastRevision\": null,\n        \"transactionId\": \"e60f9a02-94be-4791-9ff9-263c02486b3d\",\n        \"createdAt\": \"2021-07-28T06:00:15.000Z\",\n        \"updatedAt\": \"2021-07-28T06:00:15.000Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get API linked to a collection",
					"id": "75c4c08e-cbf7-4406-890c-8920ec99059b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/x/collections/{{collectionUID}}/api?populate[]=apiversion&filter=latest",
							"host": [
								"{{url}}"
							],
							"path": [
								"x",
								"collections",
								"{{collectionUID}}",
								"api"
							],
							"query": [
								{
									"key": "populate[]",
									"value": "apiversion"
								},
								{
									"key": "filter",
									"value": "latest"
								}
							]
						}
					},
					"response": [
						{
							"id": "c3236763-69f7-4fab-9d15-423c4d815f86",
							"name": "API linked to a collection (no API)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/x/collections/{{collectionUID}}/api",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"collections",
										"{{collectionUID}}",
										"api"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n\t\"model_id\": \"{{collectionId}}\",\n\t\"meta\": {\n\t\t\"model\": \"collection\",\n\t\t\"action\": \"getApis\"\n\t},\n\t\"data\": {\n\t\t\"api\": null\n\t}\n}"
						},
						{
							"id": "71983229-0caf-4cfe-ba0c-b9f06a937acf",
							"name": "API linked to a collection",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/x/collections/{{collectionUID}}/api",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"collections",
										"{{collectionUID}}",
										"api"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{collectionId}}\",\n    \"meta\": {\n        \"model\": \"collection\",\n        \"action\": \"getApis\"\n    },\n    \"data\": {\n        \"api\": {\n        \t\"id\": \"{{apiId}}\",\n        \t\"name\": \"{{apiName}}\",\n        \t\"createdAt\": \"{{createdAt}}\",\n        \t\"updatedAt\": \"{{updatedAt}}\"\n        }\n    }\n}"
						},
						{
							"id": "79ecaa81-b2fd-4337-bc4b-77e40336b28c",
							"name": "API linked to a collection with versions",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/x/collections/{{collectionUID}}/api?populate[]=apiversion&filter=latest",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"collections",
										"{{collectionUID}}",
										"api"
									],
									"query": [
										{
											"key": "populate[]",
											"value": "apiversion"
										},
										{
											"key": "filter",
											"value": "latest"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{collectionId}}\",\n    \"meta\": {\n        \"model\": \"collection\",\n        \"action\": \"getApis\"\n    },\n    \"data\": {\n        \"api\": {\n            \"id\": \"{{apiId}}\",\n            \"name\": \"{{apiName}}\",\n            \"createdAt\": \"{{createdAt}}\",\n            \"updatedAt\": \"{{updatedAt}}\",\n            \"versions\": [\n            \t{\n            \t\t\"name\": \"Version1\",\n            \t\t\"id\": \"{{apiVersionName}}\"\n            \t}\t\n            ]\n        }\n    }\n}"
						},
						{
							"id": "4accc410-7f2b-46c3-888e-c1531cfef2b9",
							"name": "Forbidden error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/x/collections/{{collectionUID}}/api?populate[]=apiversion&filter=latest",
									"host": [
										"{{url}}"
									],
									"path": [
										"x",
										"collections",
										"{{collectionUID}}",
										"api"
									],
									"query": [
										{
											"key": "populate[]",
											"value": "apiversion"
										},
										{
											"key": "filter",
											"value": "latest"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You are not permitted to perform the action.\",\n        \"details\": {\n            \"model\": \"collection\",\n            \"model_id\": \"ef98d466-6dd1-4238-8f62-6575ea102d02\",\n            \"owner\": \"U1\",\n            \"message\": \"You do not have access to perform this operation.\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Link relations on version tag create",
					"id": "ef899cad-0939-479e-9aa2-31e7a18af319",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiVersionId\": \"{{apVersionId}}\",\n    \"collectionId\": \"{{collectionUID}}\",\n    \"relations\": [{\"type\": \"integrationtest\"}]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/x/versionTag/:id",
							"path": [
								"x",
								"versionTag",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{versionTagId}}"
								}
							]
						}
					},
					"response": [
						{
							"id": "86c5e4d4-9fab-4b66-92a3-120d2eef121d",
							"name": "Link relations on version tag create",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apiVersionId\": \"{{apVersionId}}\",\n    \"collectionId\": \"{{collectionUID}}\",\n    \"relations\": [{\"type\": \"integrationtest\"}]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/x/versionTag/:id",
									"path": [
										"x",
										"versionTag",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{versionTagId}}"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{versionTagId}}\",\n    \"meta\": {\n        \"model\": \"versionTag\",\n        \"action\": \"create\"\n    },\n    \"data\": {\n        \"apiVersion\": {\n            \"id\": \"{{apiVersionId}}\",\n            \"name\": \"{{apiVersionName}}\"\n        },\n        \"relations\": [{\n            \"id\": \"{{relationId}}\",\n            \"type\": {{relationType}}\n        }]\n    }\n}"
						}
					]
				}
			],
			"id": "a232f4b0-9da5-4fba-a376-eca78036d564"
		},
		{
			"name": "Git Integration",
			"item": [
				{
					"name": "Pull changes from the linked repository",
					"id": "fce1c045-48ef-4970-948d-a9a8e62703eb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Access-Token",
								"name": "Content-Type",
								"type": "text",
								"value": "5764df78e25ea5bf71ab419a9740439fd0e53180fc8a9ea9ebada5d274b24ae1a3d3be1a9ce2cc9574f640a572e8844dfb1a5769adc2a5cef99f012a56da2fac"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:id/repository/changes?branch=develop",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":id",
								"repository",
								"changes"
							],
							"query": [
								{
									"key": "branch",
									"value": "develop"
								},
								{
									"key": "commit",
									"value": "{{commit}}",
									"disabled": true
								},
								{
									"key": ":apiI",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "apiId",
									"value": "42da2d27-a338-46b5-982d-92d7f6dff499"
								},
								{
									"key": "id",
									"value": "3c3cc6cc-8e92-4698-ac98-c8ef8532a684"
								}
							]
						},
						"description": "This endpoint will allow you to add any of the following entities to the specified API Version.\n\nThe `versionTag` field is optional, which means if you don't specify any, this will go ahead and link the HEAD/Current state of the collection. (Note: This behaviour can change based on what is required by product)"
					},
					"response": [
						{
							"id": "647b194d-33fd-45fb-afc9-263ce99f98ba",
							"name": "200 Successfully pulled changes to the linked repository Copy",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiid}}/versions/{{apiVersionId}}/repository/changes?branch=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiid}}",
										"versions",
										"{{apiVersionId}}",
										"repository",
										"changes"
									],
									"query": [
										{
											"key": "branch",
											"value": "develop"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"aa035c0b-72f7-4dc6-ab13-3dbfb5ceaf81\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"pullfromrepository\"\n    },\n    \"data\": {\n        \"lastCommit\": {\n            \"id\": \"c0fffd070493e54246504c2777c69fd655e6c37a\",\n            \"syncTimeStamp\": \"\" // When version got updated with the synced changes\n        },\n        \"schemas\": {\n            \"creates\": [{\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\"\n                }\n            }],\n            \"destroys\": [{\n                 \"id\": \"\"\n            }],\n            \"updates\": [{\n                \"id\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\"\n                }\n            }],\n            \"conflicts\": [{\n                \"id\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\"\n                },\n                \"destination\": \"created/updated/destroyed\"\n            }]\n        },\n        \"relations\": {\n            \"creates\": [{\n                \"name\":\"\",\n                \"file\": {\n                    \"name\": \"new.json\",\n                    \"path\": \"postman/collections/new.json\"\n                    }\n                }],\n            \"destroys\": [ {\n                    \"id\": \"f52d5721-cdc8-45c8-bb3a-defe5c64f11d_contracttest\",\n                    \"type\": \"contracttest\",\n                    \"name\": \"[Monitor] Simplekart Proxy\"\n                    }],\n            \"updates\": [\n                {\n                    \"id\": \"f52d5721-cdc8-45c8-bb3a-defe5c64f11d_contracttest\",\n                    \"type\": \"contracttest\",\n                    \"name\": \"[Monitor] Simplekart Proxy\",\n                    \"file\": {\n                        \"name\": \"new.json\",\n                        \"path\": \"postman/collections/new.json\"\n                    }\n                }\n            ],\n             \"conflicts\": [\n                {\n                    \"id\": \"f52d5721-cdc8-45c8-bb3a-defe5c64f11d_contracttest\",\n                    \"type\": \"contracttest\",\n                    \"name\": \"[Monitor] Simplekart Proxy\",\n                    \"file\": {\n                        \"name\": \"new.json\",\n                        \"path\": \"postman/collections/new.json\"\n                    }\n                }\n            ]\n        }\n    }\n}"
						},
						{
							"id": "328abddf-370d-41cf-b2d1-49793dbfa071",
							"name": "404 Resource Not found error when the API is not linked to a repository",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiid}}/versions/{{apiVersionId}}/repository/changes?branch=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiid}}",
										"versions",
										"{{apiVersionId}}",
										"repository",
										"changes"
									],
									"query": [
										{
											"key": "branch",
											"value": "develop"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"resourceNotFoundError\",\n        \"message\": \"The specified request could not be found on Github.\"\n    }\n}"
						},
						{
							"id": "4bc602b1-ad17-4f0c-ae0c-db0c680995b4",
							"name": "400 integration locked",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiid}}/versions/{{apiVersionId}}/repository/changes?branch=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiid}}",
										"versions",
										"{{apiVersionId}}",
										"repository",
										"changes"
									],
									"query": [
										{
											"key": "branch",
											"value": "develop"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"integrationLockedError\",\n    \"message\": \"This action cannot be performed because the integration is in a locked state\",\n    \"details\": {\n      \"message\": \"This action cannot be performed because the integration is in a locked state\"\n    }\n  }\n}"
						},
						{
							"id": "1aa4e69d-c51e-46b5-8449-92a6fdb1fb2f",
							"name": "400 branch not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/git/api-repository/changes?apiVersion=1d2-c2ec234ec-c123e12d2w-12d&branch=random",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"git",
										"api-repository",
										"changes"
									],
									"query": [
										{
											"key": "apiVersion",
											"value": "1d2-c2ec234ec-c123e12d2w-12d"
										},
										{
											"key": "branch",
											"value": "random"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"invalidParamsError\",\n    \"message\": \"The specified parameter is in an invalid format\",\n    \"details\": {\n      \"param\": \"We could not find the branch you are looking for\"\n    }\n  }\n}"
						},
						{
							"id": "46dc47af-e85e-495b-b6bc-cf8b31ea317e",
							"name": "404 repository not found (on 3rd party service)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiid}}/versions/{{apiVersionId}}/repository/changes?branch=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiid}}",
										"versions",
										"{{apiVersionId}}",
										"repository",
										"changes"
									],
									"query": [
										{
											"key": "branch",
											"value": "develop"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"repositoryNotFoundError\",\n    \"message\": \"We could not find the repository you are looking for\",\n    \"details\": {\n      \"name\": \"abc\"\n    }    \n  }\n}"
						},
						{
							"id": "48d6b39c-3a7f-45cb-94b2-e1b91a4cc963",
							"name": "400 - Commit doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/git/api-repository/commits/compare/:commit?apiVersion={{apiVersion_id}}&branch={{branch}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"git",
										"api-repository",
										"commits",
										"compare",
										":commit"
									],
									"query": [
										{
											"key": "apiVersion",
											"value": "{{apiVersion_id}}"
										},
										{
											"key": "branch",
											"value": "{{branch}}",
											"description": "the branch to which the commit needs to be compared to"
										}
									],
									"variable": [
										{
											"key": "commit",
											"value": ""
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 29 Sep 2021 06:10:23 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "90"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains"
								},
								{
									"key": "x-srv-trace",
									"value": "v=1;t=7542dad4e105fc95"
								},
								{
									"key": "x-srv-span",
									"value": "v=1;s=37891d98cccc96b8"
								},
								{
									"key": "ETag",
									"value": "W/\"5a-6i3hvuXxTfN7C36vl36GcA\""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"unprocessableEntityError\",\n        \"message\": \"No commit found for SHA: compare\"\n    }\n}"
						}
					]
				},
				{
					"name": "Accept Pull changes from the linked repository Copy",
					"id": "dd15133f-2362-4535-8fc5-10ac21459d0e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\"lastCommit\": {\n            \"id\": \"749227034645f69fc511f364aa5dee98c72eff1a\",\n            \"commitedAt\": \"2021-04-07T10:38:02+00:00\",\n            \"commitedBy\": \"Shivangi Bajpai\"\n        },\n        \"schemas\": {\n            \"creates\": [],\n            \"updates\": [],\n            \"destroys\": []\n        },\n        \"relations\": {\n            \"creates\": [\n                {\n                    \"name\": {{filename}},\n                    \"file\": {\n                        \"name\": {{filename}},\n                        \"path\": {{filepath}}\n                    }\n                }\n            ],\n            \"updates\": [],\n            \"destroys\": []\n        }\n }"
						},
						"url": {
							"raw": "{{url}}/apis/{{apiId}}/versions/{{apiVersionId}}/repository/accepted-changes?workspace={{workspaceId}}&branch=develop",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersionId}}",
								"repository",
								"accepted-changes"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}"
								},
								{
									"key": "branch",
									"value": "develop"
								}
							]
						},
						"description": "This endpoint will allow you to add any of the following entities to the specified API Version.\n\nThe `versionTag` field is optional, which means if you don't specify any, this will go ahead and link the HEAD/Current state of the collection. (Note: This behaviour can change based on what is required by product)"
					},
					"response": [
						{
							"id": "592aa52c-d9e7-409e-9981-c632ef5cc94b",
							"name": "200 Successfully pulled changes to the linked repository",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"lastCommit\": {\n        \"id\": \"749227034645f69fc511f364aa5dee98c72eff1a\",\n        \"commitedAt\": \"2021-04-07T10:38:02+00:00\",\n        \"commitedBy\": \"Shivangi Bajpai\"\n    },\n    \"schemas\": {\n        \"creates\": [],\n        \"updates\": [],\n        \"destroys\": []\n    },\n    \"relations\": {\n        \"creates\": [\n            {\n                \"name\": {{filename}},\n                \"file\": {\n                    \"name\": {{filename}},\n                    \"path\": {{filepath}}\n                }\n            }\n        ],\n        \"updates\": [],\n        \"destroys\": []\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/repository/accepted-changes?workspace={{workspaceId}}&branch=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions{{apiVersionId}}",
										"repository",
										"accepted-changes"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}",
											"description": "This is the current workspace id"
										},
										{
											"key": "branch",
											"value": "develop",
											"description": "Name of the branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": {{apiVersionId}},\n    \"meta\": {\n        \"model\": \"apiVersion\",\n        \"action\": \"acceptChangesInPull\"\n    },\n    \"data\": {\n        \"lastCommit\": {\n            \"id\": \"c0fffd070493e54246504c2777c69fd655e6c37a\",\n            \"syncTimeStamp\": \"\" // When version got updated with the synced changes\n        },\n        \"changesToPullCount\": {{changesToPullCount}}\n    }\n}"
						},
						{
							"id": "1af21370-ab40-475a-aaf8-02323315a3dd",
							"name": "400 branch not tracked",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"lastCommit\": {\n        \"id\": \"749227034645f69fc511f364aa5dee98c72eff1a\",\n        \"commitedAt\": \"2021-04-07T10:38:02+00:00\",\n        \"commitedBy\": \"Test\"\n    },\n    \"schemas\": {\n        \"creates\": [],\n        \"updates\": [],\n        \"destroys\": []\n    },\n    \"relations\": {\n        \"creates\": [\n            {\n                \"name\": {{filename}},\n                \"file\": {\n                    \"name\": {{filename}},\n                    \"path\": {{filepath}}\n                }\n            }\n        ],\n        \"updates\": [],\n        \"destroys\": []\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/repository/accepted-changes?workspace={{workspaceId}}&branch=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions{{apiVersionId}}",
										"repository",
										"accepted-changes"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}"
										},
										{
											"key": "branch",
											"value": "develop"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"invalidParamsError\",\n    \"message\": \"The specified parameter is in an invalid format\",\n    \"details\": {\n      \"param\": \"We could not find the branch you are looking for\"\n    }\n  }\n}"
						},
						{
							"id": "5a254198-0569-443d-85f8-7ee5b16f6c5e",
							"name": "400 integration locked",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"lastCommit\": {\n        \"id\": \"749227034645f69fc511f364aa5dee98c72eff1a\",\n        \"commitedAt\": \"2021-04-07T10:38:02+00:00\",\n        \"commitedBy\": \"Test\"\n    },\n    \"schemas\": {\n        \"creates\": [],\n        \"updates\": [],\n        \"destroys\": []\n    },\n    \"relations\": {\n        \"creates\": [\n            {\n                \"name\": {{filename}},\n                \"file\": {\n                    \"name\": {{filename}},\n                    \"path\": {{filepath}}\n                }\n            }\n        ],\n        \"updates\": [],\n        \"destroys\": []\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/repository/accepted-changes?workspace={{workspaceId}}&branch=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions{{apiVersionId}}",
										"repository",
										"accepted-changes"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}"
										},
										{
											"key": "branch",
											"value": "develop"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"integrationLockedError\",\n    \"message\": \"This action cannot be performed because the integration is in a locked state\",\n    \"details\": {\n      \"message\": \"This action cannot be performed because the integration is in a locked state\"\n    }\n  }\n}"
						},
						{
							"id": "b5f0ef18-257f-4996-bae4-ab6d9eded3ba",
							"name": "400 branch missing",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"lastCommit\": {\n        \"id\": \"749227034645f69fc511f364aa5dee98c72eff1a\",\n        \"commitedAt\": \"2021-04-07T10:38:02+00:00\",\n        \"commitedBy\": \"Test\"\n    },\n    \"schemas\": {\n        \"creates\": [],\n        \"updates\": [],\n        \"destroys\": []\n    },\n    \"relations\": {\n        \"creates\": [\n            {\n                \"name\": {{filename}},\n                \"file\": {\n                    \"name\": {{filename}},\n                    \"path\": {{filepath}}\n                }\n            }\n        ],\n        \"updates\": [],\n        \"destroys\": []\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/repository/accepted-changes?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions{{apiVersionId}}",
										"repository",
										"accepted-changes"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"paramMissingError\",\n    \"message\": \"Required param missing in the request\",\n    \"details\": {\n      \"param\": \"branch\"\n    }\n  }\n}"
						},
						{
							"id": "61450529-0729-473c-8251-43cd5cc206d9",
							"name": "404 no link exists",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/repository/accepted-changes?workspace={{workspaceId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions{{apiVersionId}}",
										"repository",
										"accepted-changes"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"error\": {\n      \"name\": \"apiRepositoryNotFoundError\",\n      \"message\": \"This API version is not linked to a repository\"\n  }\n}"
						},
						{
							"id": "f8af4b8c-291d-41a7-b6f1-fe196840ccde",
							"name": "400 Updates to main or develop branch not allowed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"lastCommit\": {\n        \"id\": \"749227034645f69fc511f364aa5dee98c72eff1a\",\n        \"commitedAt\": \"2021-04-07T10:38:02+00:00\",\n        \"commitedBy\": \"Test\"\n    },\n    \"schemas\": {\n        \"creates\": [],\n        \"updates\": [],\n        \"destroys\": []\n    },\n    \"relations\": {\n        \"creates\": [\n            {\n                \"name\": {{filename}},\n                \"file\": {\n                    \"name\": {{filename}},\n                    \"path\": {{filepath}}\n                }\n            }\n        ],\n        \"updates\": [],\n        \"destroys\": []\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/repository/accepted-changes?workspace={{workspaceId}}&branch=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions{{apiVersionId}}",
										"repository",
										"accepted-changes"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}"
										},
										{
											"key": "branch",
											"value": "develop"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"invalidParamsError\",\n    \"message\": \"Updates to main or develop branches are not allowed\"\n  }\n}"
						}
					]
				},
				{
					"name": "Unlink for API from repository",
					"id": "c00ce76b-ead8-4b20-a6d1-e192b0441516",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apis/{{apiId}}/versions/{{apiVersion}}/repository",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersion}}",
								"repository"
							]
						}
					},
					"response": [
						{
							"id": "a557d426-6e89-455c-85e2-917638bfd678",
							"name": "Successul unlink of an API from repository",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/versions/{{apiVersion}}/repository",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersion}}",
										"repository"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"406363bd-9caf-4d86-942d-ea84cbb1eb1c\",\n    \"meta\": {\n        \"model\": \"apiversion\",\n        \"action\": \"unlinkFromRepository\"\n    },\n    \"data\": {\n        \"result\": true\n    }\n}"
						},
						{
							"id": "caec5cbd-bb0e-4383-93b2-2e4ecccc90b1",
							"name": "Forbidden Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/versions/{{apiVersion}}/repository",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersion}}",
										"repository"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You are not permitted to perform the action.\",\n        \"details\": {\n            \"model\": \"apirepository\",\n            \"owner\": \"shreys7\",\n            \"message\": \"You do not have access to perform this action on the API\"\n        }\n    }\n}"
						},
						{
							"id": "abc77e0d-2c76-4a5a-9235-030e2ec65554",
							"name": "Repostiory already unlinked, i.e Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/versions/{{apiVersion}}/repository",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersion}}",
										"repository"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n      \"name\": \"apiRepositoryNotFoundError\",\n      \"message\": \"We could not find the api-repository link you are looking for\"\n    }\n}"
						}
					]
				},
				{
					"name": "Changes to be pushed",
					"id": "7a6fce09-a95b-427d-82a7-bef3da4f8078",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apis/{{apiId}}/versions/{{apiVersionId}}/repository/changes-to-be-pushed?branch={{branch}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apis",
								"{{apiId}}",
								"versions",
								"{{apiVersionId}}",
								"repository",
								"changes-to-be-pushed"
							],
							"query": [
								{
									"key": "branch",
									"value": "{{branch}}"
								}
							]
						}
					},
					"response": [
						{
							"id": "900fb3ea-f35f-443a-bb2a-0e7ddcf5b5ba",
							"name": "Successful fetch of changes",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/versions/{{apiVersionId}}/repository/changes-to-be-pushed?branch={{branch}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"repository",
										"changes-to-be-pushed"
									],
									"query": [
										{
											"key": "branch",
											"value": "{{branch}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"model\": \"apiVersion\",\n        \"action\": \"changesToBePushed\"\n    },\n    \"data\": {\n        \"lastCommit\": {\n            \"id\": \"c0fffd070493e54246504c2777c69fd655e6c37a\",\n            \"syncTimeStamp\": \"\" // When version got updated with the synced changes\n        },\n        \"schemas\": {\n            \"create\": [\n                {\n                    \"entityId\":\"27c320c8-83a4-40f4-9f0b-d2bf2749d7ae\",\n                    \"entityName\":\"27c320c8-83a4-40f4-9f0b-d2bf2749d7ae.schema\",\n                    \"entityType\": \"schemas\"\n                }\n            ],\n            \"update\": [\n                {\n                \"entityId\":\"8a0b58ae-1535-4178-95e5-5aa2eb50a2d3\",\n                \"entityName\":\"8a0b58ae-1535-4178-95e5-5aa2eb50a2d3.schema\",\n                \"entityType\": \"schemas\"\n                }\n            ],\n            \"delete\": [\n                {\n                \"entityId\":\"a9e9b7b1-5d9c-4f0b-85a1-e6c2de92b150\",\n                \"entityName\":\"a9e9b7b1-5d9c-4f0b-85a1-e6c2de92b150.schema\",\n                \"entityType\": \"schemas\"\n                }\n            ]\n        },\n        \"relations\": {\n            \"create\": [\n                {\n                    \"entityId\":\"ahc320c8-83a4-40f4-9f0b-d2bf2749d86\",\n                    \"entityName\":\"ahc320c8-83a4-40f4-9f0b-d2bf2749d86.testsuite\",\n                    \"entityType\": \"testsuite\"\n                }\n            ],\n            \"update\": [\n                {\n                \"entityId\":\"b5c8f40a-dd21-447d-a23d-867fcb710ec6\",\n                \"entityName\":\"b5c8f40a-dd21-447d-a23d-867fcb710ec6.testsuite\",\n                \"entityType\": \"testsuite\"\n                }\n            ],\n            \"delete\": [\n                {\n                    \"entityId\":\"dba326ec-b01c-450b-a163-f844a67abb33\",\n                    \"entityName\":\"dba326ec-b01c-450b-a163-f844a67abb33.testsuite\",\n                    \"entityType\": \"testsuite\"\n                }\n            ]\n        }\n    }\n}"
						},
						{
							"id": "b708c7e9-d61e-4e9f-b09c-56542b079586",
							"name": "404 No link exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/apis/{{apiId}}/versions/{{apiVersionId}}/repository/changes-to-be-pushed?branch={{branch}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions",
										"{{apiVersionId}}",
										"repository",
										"changes-to-be-pushed"
									],
									"query": [
										{
											"key": "branch",
											"value": "{{branch}}"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"apiRepositoryNotFoundError\",\n    \"message\": \"This API version is not linked to a repository\"\n  }\n}"
						}
					]
				},
				{
					"name": "Connect to Git repo",
					"id": "c970bcc3-0f19-40b3-bbb8-0b4a3d2f952c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"repository\": {\n        \"id\": \"repoId\",\n        \"name\": \"repository name\",\n        \"owner\": {\n            \"id\": \"owner\",\n            \"name\": \"owner name\"\n        }\n    },\n    \"service\": \"3rd party service name such as github or bitbucket\",\n    \"tokenId\": \"Oauth token id for github/bitbucket received during authentication\",\n    \"userConfig\": {\n        \"branches\": {\n            \"main\": \"the main branch used for tracking releases\",\n            \"develop\": \"the development branch for pushing/pulling the changes\"\n        },\n        \"paths\": {\n            \"collection\": \"the path where we should sync collections\",\n            \"schema\": \"the path where we should sync schemas\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/repository",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":apiVersionId",
								"repository"
							],
							"variable": [
								{
									"key": "apiId",
									"value": "{{apiId}}"
								},
								{
									"key": "apiVersionId",
									"value": "{{apiVersionId}}"
								}
							]
						}
					},
					"response": [
						{
							"id": "932bdb91-81cd-4cbf-87a9-fe785ba43b9c",
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repository\": {\n        \"id\": \"repoId\",\n        \"name\": \"repository name\",\n        \"owner\": {\n            \"id\": \"owner\",\n            \"name\": \"owner name\"\n        }\n    },\n    \"service\": \"3rd party service name such as github or bitbucket\",\n    \"tokenId\": \"Oauth token id for github/bitbucket received during authentication\",\n    \"userConfig\": {\n        \"branches\": {\n            \"main\": \"the main branch used for tracking releases\",\n            \"develop\": \"the development branch for pushing/pulling the changes\"\n        },\n        \"paths\": {\n            \"collection\": \"the path where we should sync collections\",\n            \"schema\": \"the path where we should sync schemas\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/repository",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"repository"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{apiId}}"
										},
										{
											"key": "apiVersionId",
											"value": "{{apiVersionId}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"model_id\": null,\n  \"meta\": {\n    \"model\": \"apiversion\",\n    \"action\": \"connectAPIVersionToRepository\"\n  },\n  \"data\": {\n    \"repository\": {\n      \"name\": \"sequence\",\n      \"id\": \"repoId\",\n      \"service\": \"github\",\n      \"tokenId\": 123\n    },\n    \"id\": 48,\n    \"userConfig\": {\n      \"branches\": {\n        \"main\": \"master\",\n        \"develop\": \"develop\"\n      }\n    }\n  }\n}"
						},
						{
							"id": "5ca18624-83af-4d4c-b150-9f9387261e44",
							"name": "403 Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repository\": {\n        \"id\": \"repoId\",\n        \"name\": \"repository name\",\n        \"owner\": {\n            \"id\": \"owner\",\n            \"name\": \"owner name\"\n        }\n    },\n    \"service\": \"3rd party service name such as github or bitbucket\",\n    \"tokenId\": \"Oauth token id for github/bitbucket received during authentication\",\n    \"userConfig\": {\n        \"branches\": {\n            \"main\": \"the main branch used for tracking releases\",\n            \"develop\": \"the development branch for pushing/pulling the changes\"\n        },\n        \"paths\": {\n            \"collection\": \"the path where we should sync collections\",\n            \"schema\": \"the path where we should sync schemas\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/repository",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"repository"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{apiId}}"
										},
										{
											"key": "apiVersionId",
											"value": "{{apiVersionId}}"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"forbiddenError\",\n    \"message\": \"You are not permitted to perform the action.\",\n    \"details\": {\n      \"model\": \"apiversion\",\n      \"owner\": \"123\",\n      \"message\": \"You do not have access to perform this operation.\"\n    }\n  }\n}"
						},
						{
							"id": "ba84cd95-d20b-4249-9e68-41b29b6639f9",
							"name": "API Version not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repository\": {\n        \"id\": \"repoId\",\n        \"name\": \"repository name\",\n        \"owner\": {\n            \"id\": \"owner\",\n            \"name\": \"owner name\"\n        }\n    },\n    \"service\": \"3rd party service name such as github or bitbucket\",\n    \"tokenId\": \"Oauth token id for github/bitbucket received during authentication\",\n    \"userConfig\": {\n        \"branches\": {\n            \"main\": \"the main branch used for tracking releases\",\n            \"develop\": \"the development branch for pushing/pulling the changes\"\n        },\n        \"paths\": {\n            \"collection\": \"the path where we should sync collections\",\n            \"schema\": \"the path where we should sync schemas\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/repository",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"repository"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{apiId}}"
										},
										{
											"key": "apiVersionId",
											"value": "{{apiVersionId}}"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"We could not find the API version you are looking for\",\n    \"details\": {\n      \"model\": \"apiversion\",\n      \"model_id\": \"4a5c117a-06ad-40fd-9414-912e058dd8f1\",\n      \"owner\": \"123\"\n    }\n  }\n}"
						},
						{
							"id": "06b68d36-bcff-4806-a51c-9bd2134ef202",
							"name": "API Version doesn't belong to API",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repository\": {\n        \"id\": \"repoId\",\n        \"name\": \"repository name\",\n        \"owner\": {\n            \"id\": \"owner\",\n            \"name\": \"owner name\"\n        }\n    },\n    \"service\": \"3rd party service name such as github or bitbucket\",\n    \"tokenId\": \"Oauth token id for github/bitbucket received during authentication\",\n    \"userConfig\": {\n        \"branches\": {\n            \"main\": \"the main branch used for tracking releases\",\n            \"develop\": \"the development branch for pushing/pulling the changes\"\n        },\n        \"paths\": {\n            \"collection\": \"the path where we should sync collections\",\n            \"schema\": \"the path where we should sync schemas\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/repository",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"repository"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{apiId}}"
										},
										{
											"key": "apiVersionId",
											"value": "{{apiVersionId}}"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"apiMismatchError\",\n    \"message\": \"The API ID provided does not match with the API Version's API ID.\",\n    \"details\": {\n      \"model\": \"api\",\n      \"modelId\": \"7a5e756c-7e47-4f79-a6aa-955ec197efc1\"\n    }\n  }\n}"
						},
						{
							"id": "f6b6decb-4be6-4edc-900b-ce5e8ef3495d",
							"name": "Token Id missing",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repository\": {\n        \"id\": \"repoId\",\n        \"name\": \"repository name\",\n        \"owner\": {\n            \"id\": \"owner\",\n            \"name\": \"owner name\"\n        }\n    },\n    \"service\": \"3rd party service name such as github or bitbucket\",\n    \"userConfig\": {\n        \"branches\": {\n            \"main\": \"the main branch used for tracking releases\",\n            \"develop\": \"the development branch for pushing/pulling the changes\"\n        },\n        \"paths\": {\n            \"collection\": \"the path where we should sync collections\",\n            \"schema\": \"the path where we should sync schemas\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/repository",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"repository"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{apiId}}"
										},
										{
											"key": "apiVersionId",
											"value": "{{apiVersionId}}"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"paramMissingError\",\n    \"message\": \"Parameter is missing in the request.\",\n    \"details\": {\n      \"param\": \"tokenId\"\n    }\n  }\n}"
						},
						{
							"id": "17612935-9b4d-4f72-9277-9fac4270131a",
							"name": "Repository already linked",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repository\": {\n        \"id\": \"repoId\",\n        \"name\": \"repository name\",\n        \"owner\": {\n            \"id\": \"owner\",\n            \"name\": \"owner name\"\n        }\n    },\n    \"service\": \"3rd party service name such as github or bitbucket\",\n    \"tokenId\": \"Oauth token id for github/bitbucket received during authentication\",\n    \"userConfig\": {\n        \"branches\": {\n            \"main\": \"the main branch used for tracking releases\",\n            \"develop\": \"the development branch for pushing/pulling the changes\"\n        },\n        \"paths\": {\n            \"collection\": \"the path where we should sync collections\",\n            \"schema\": \"the path where we should sync schemas\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/repository",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"repository"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{apiId}}"
										},
										{
											"key": "apiVersionId",
											"value": "{{apiVersionId}}"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"instanceFoundError\",\n    \"message\": \"This apirepository already exists in the database.\"\n  }\n}"
						}
					]
				},
				{
					"name": "Push changes to the linked repository",
					"id": "d37dd952-c2fc-4867-b743-34a5f541bccb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"commitMessage\": \"\"\n}"
						},
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:id/repository/changes?branch=develop",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":id",
								"repository",
								"changes"
							],
							"query": [
								{
									"key": "branch",
									"value": "develop"
								}
							],
							"variable": [
								{
									"key": "apiId",
									"value": ""
								},
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "This endpoint will allow you to add any of the following entities to the specified API Version.\n\nThe `versionTag` field is optional, which means if you don't specify any, this will go ahead and link the HEAD/Current state of the collection. (Note: This behaviour can change based on what is required by product)"
					},
					"response": [
						{
							"id": "de46e4e7-029d-4ba3-a15e-1a9548b29361",
							"name": "200 Successfully pushed changes to the linked repository",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"actions\": {\n    \"create\": [\n      {\n        \"entityType\": \"collections\",\n        \"entityId\": \"869d29ae-40fc-441b-8e5e-ca1ebaa73550_documentation\",\n        \"file\": {\n          \"type\": \"raw\",\n          \"contents\": \"content\"\n        },\n        \"entityName\": \"C1_869d29ae-40fc-441b-8e5e-ca1ebaa73550.json\"\n      }\n    ],\n    \"update\": [\n      {\n        \"entityType\": \"collections\",\n        \"entityId\": \"5a0784f4-9105-4086-b115-fb3171caec91_integrationtest\",\n        \"file\": {\n          \"type\": \"raw\",\n          \"contents\": \"{\\n\\t\\\"owner\\\": \\\"U1\\\",\\n\\t\\\"id\\\": \\\"4a5c117a-06ad-40fd-9414-912e058dd8e0\\\",\\n\\t\\\"info\\\": {\\n\\t\\t\\\"name\\\": \\\"C1\\\"\\n\\t}\\n}\"\n        }\n      }\n    ],\n    \"delete\": [\n      {\n        \"entityType\": \"collections\",\n        \"entityId\": \"R5_ID\"\n      }\n    ]\n  },\n  \"commitMessage\": \"Push contents\",\n  \"lastCommit\": \"fa85f45626856e9ca50e896f44a46074cb06b19a\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/repository/changes?branch=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions{{apiVersionId}}",
										"repository",
										"changes"
									],
									"query": [
										{
											"key": "branch",
											"value": "develop"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": {{apiVersionId}},\n    \"meta\": {\n        \"model\": \"apiVersion\",\n        \"action\": \"pushToRepository\"\n    },\n    \"data\": {\n         \"lastCommit\": {\n            \"id\": \"c0fffd070493e54246504c2777c69fd655e6c37a\",\n            \"syncTimeStamp\": \"\" // When version got updated with the synced changes\n        },\n        \"changesToPushCount\": {{changesToPushCount}}\n    }\n}"
						},
						{
							"id": "5ef77cb6-e698-44f8-8631-519803c9382d",
							"name": "409 Failed to push since remote is ahead",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    commitMessage: \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/{{apiId}}/versions{{apiVersionId}}/repository/changes?branch=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										"{{apiId}}",
										"versions{{apiVersionId}}",
										"repository",
										"changes"
									],
									"query": [
										{
											"key": "branch",
											"value": "develop"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"serverError\",\n        \"message\": \"Something went wrong with the server.\",\n        \"details\": {\n            \"name\": \"githubConflictError\",\n            \"details\": \"Conflicts encountered at Github.\",\n            \"message\": \"Update is not a fast forward\",\n            \"code\": 409\n        }\n    }\n}"
						},
						{
							"id": "588811d8-43ba-4759-9d00-53bd5c7a6023",
							"name": "API Version not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"commitMessage\": \"\"\n}"
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:id/repository/changes?branch=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":id",
										"repository",
										"changes"
									],
									"query": [
										{
											"key": "branch",
											"value": "develop"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"We could not find the API version you are looking for\",\n    \"details\": {\n        \"model\": \"apiversion\",\n        \"model_id\": \"APIV1\",\n        \"owner\": \"U1\"\n    }\n}"
						},
						{
							"id": "85112520-619b-4dc3-b7a9-2414605ac3d2",
							"name": "API not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"commitMessage\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:id/repository/changes?branch=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":id",
										"repository",
										"changes"
									],
									"query": [
										{
											"key": "branch",
											"value": "develop"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"name\": \"instanceNotFoundError\",\n    \"message\": \"We could not find the API you are looking for\",\n    \"details\": {\n        \"model\": \"api\",\n        \"model_id\": \"API1\",\n        \"owner\": \"U1\"\n    }\n}"
						},
						{
							"id": "a5befb7b-a910-41a4-8849-8a1009632aa0",
							"name": "No permission on API",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"commitMessage\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:id/repository/changes?branch=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":id",
										"repository",
										"changes"
									],
									"query": [
										{
											"key": "branch",
											"value": "develop"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"name\": \"forbiddenError\",\n    \"message\": \"You are not permitted to perform the action.\",\n    \"details\": {\n        \"model\": \"apiversion\",\n        \"model_id\": \"AV1\",\n        \"owner\": \"U1\",\n        \"message\": \"You do not have access to perform this operation.\"\n    }\n}"
						},
						{
							"id": "01d0bfa9-df9d-446d-82c9-58d553124931",
							"name": "Empty Commit message",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"commitMessage\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:id/repository/changes?branch=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":id",
										"repository",
										"changes"
									],
									"query": [
										{
											"key": "branch",
											"value": "develop"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"name\": \"paramMissingError\",\n    \"message\": \"Parameter is missing in the request.\",\n    \"details\": {\n        \"param\": \"commitMessage\"\n    }\n}"
						},
						{
							"id": "99ae671d-2797-4f22-80bd-ce44f3888a05",
							"name": "400 Branch not tracked",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"actions\": {\n    \"create\": [\n      {\n        \"entityType\": \"collections\",\n        \"entityId\": \"869d29ae-40fc-441b-8e5e-ca1ebaa73550_documentation\",\n        \"file\": {\n          \"type\": \"raw\",\n          \"contents\": \"content\"\n        },\n        \"entityName\": \"C1_869d29ae-40fc-441b-8e5e-ca1ebaa73550.json\"\n      }\n    ],\n    \"update\": [\n      {\n        \"entityType\": \"collections\",\n        \"entityId\": \"5a0784f4-9105-4086-b115-fb3171caec91_integrationtest\",\n        \"file\": {\n          \"type\": \"raw\",\n          \"contents\": \"{\\n\\t\\\"owner\\\": \\\"U1\\\",\\n\\t\\\"id\\\": \\\"4a5c117a-06ad-40fd-9414-912e058dd8e0\\\",\\n\\t\\\"info\\\": {\\n\\t\\t\\\"name\\\": \\\"C1\\\"\\n\\t}\\n}\"\n        }\n      }\n    ],\n    \"delete\": [\n      {\n        \"entityType\": \"collections\",\n        \"entityId\": \"R5_ID\"\n      }\n    ]\n  },\n  \"commitMessage\": \"Push contents\",\n  \"lastCommit\": \"fa85f45626856e9ca50e896f44a46074cb06b19a\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:id/repository/changes?branch=untracked",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":id",
										"repository",
										"changes"
									],
									"query": [
										{
											"key": "branch",
											"value": "untracked"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": null
										},
										{
											"key": "id",
											"value": null
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"invalidParamsError\",\n    \"message\": \"The specified parameter is in an invalid format\",\n    \"details\": {\n      \"param\": \"We could not find the branch you are looking for\"\n    }\n  }\n}"
						},
						{
							"id": "eeed277d-3730-430a-99c0-4acb913fbeb0",
							"name": "400 Integration locked",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commitMessage\": \"Commit v1 payments API\",\n  \"lastCommit\": \"ch3ds2\",\n  \"actions\": {\n    \"create\": [\n      {\n        \"entityType\": \"collection\",\n        \"entityId\": \"123d-cwec-32rf23d-23\",\n        \"entityName\": \"payments_documentation.json\",\n        \"file\": {\n          \"type\": \"link\",\n          \"contents\": \"dew12.s3.com/c1.json\"\n        }\n      }\n      // ... more files to be created\n    ],\n    \"update\": [\n      {\n        \"entityType\": \"schema\",\n        \"entityId\": \"12e23d-d23d12-1d21\",\n        \"file\": {\n          \"type\": \"raw\",\n          \"contents\": \"{\\\"openapi\\\": \\\"3.0.0\\\"}\"\n        }\n      }\n      // ... more files to be updated\n    ],\n    \"delete\": [\n      {\n        \"entityType\": \"stub\",\n        \"entityId\": \"api-12s-cew-23r1-stub\"\n      }\n      // ... more files to be deleted\n    ] \n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:id/repository/changes?branch=develop",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":id",
										"repository",
										"changes"
									],
									"query": [
										{
											"key": "branch",
											"value": "develop"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": null
										},
										{
											"key": "id",
											"value": null
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"integrationLockedError\",\n    \"message\": \"This action cannot be performed because the integration is in a locked state\",\n    \"details\": {\n      \"message\": \"This action cannot be performed because the integration is in a locked state\"\n    }\n  }\n}"
						},
						{
							"id": "f3c08dde-2c45-49a6-af07-c35d51ddae9d",
							"name": "400 Branch missing error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"actions\": {\n    \"create\": [\n      {\n        \"entityType\": \"collections\",\n        \"entityId\": \"869d29ae-40fc-441b-8e5e-ca1ebaa73550_documentation\",\n        \"file\": {\n          \"type\": \"raw\",\n          \"contents\": \"content\"\n        },\n        \"entityName\": \"C1_869d29ae-40fc-441b-8e5e-ca1ebaa73550.json\"\n      }\n    ],\n    \"update\": [\n      {\n        \"entityType\": \"collections\",\n        \"entityId\": \"5a0784f4-9105-4086-b115-fb3171caec91_integrationtest\",\n        \"file\": {\n          \"type\": \"raw\",\n          \"contents\": \"{\\n\\t\\\"owner\\\": \\\"U1\\\",\\n\\t\\\"id\\\": \\\"4a5c117a-06ad-40fd-9414-912e058dd8e0\\\",\\n\\t\\\"info\\\": {\\n\\t\\t\\\"name\\\": \\\"C1\\\"\\n\\t}\\n}\"\n        }\n      }\n    ],\n    \"delete\": [\n      {\n        \"entityType\": \"collections\",\n        \"entityId\": \"R5_ID\"\n      }\n    ]\n  },\n  \"commitMessage\": \"Push contents\",\n  \"lastCommit\": \"fa85f45626856e9ca50e896f44a46074cb06b19a\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:id/repository/changes",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":id",
										"repository",
										"changes"
									],
									"variable": [
										{
											"key": "apiId",
											"value": null
										},
										{
											"key": "id",
											"value": null
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"paramMissingError\",\n    \"message\": \"Required param missing in the request\",\n    \"details\": {\n      \"param\": \"branch\"\n    }\n  }\n}"
						},
						{
							"id": "8abfbdd3-e7a6-413a-9bb9-809c61b16f78",
							"name": "400 Actions missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commitMessage\": \"Push contents\",\n  \"lastCommit\": \"fa85f45626856e9ca50e896f44a46074cb06b19a\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:id/repository/changes?branch=untracked",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":id",
										"repository",
										"changes"
									],
									"query": [
										{
											"key": "branch",
											"value": "untracked"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": null
										},
										{
											"key": "id",
											"value": null
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"paramMissingError\",\n    \"message\": \"Required param missing in the request\",\n    \"details\": {\n      \"param\": \"actions\"\n    }\n  }\n}"
						},
						{
							"id": "8b6eddcb-b8fc-40b6-a384-02f531a17502",
							"name": "400 Invalid actions",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"actions\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/git/api-repository/changes?apiVersion=1d2-c2ec234ec-c123e12d2w-12d&branch=develop",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"git",
										"api-repository",
										"changes"
									],
									"query": [
										{
											"key": "apiVersion",
											"value": "1d2-c2ec234ec-c123e12d2w-12d"
										},
										{
											"key": "branch",
											"value": "develop"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"name\": \"invalidParamsError\",\n    \"message\": \"Required param missing in the request\",\n    \"details\": {\n      \"param\": \"actions\"\n    }\n  }\n}"
						}
					]
				}
			],
			"id": "c198b929-6445-484b-ae4b-8a685514d9ec"
		},
		{
			"name": "Release",
			"item": [
				{
					"name": "Socket only endpoints",
					"item": [
						{
							"name": "Subscribe to a release",
							"id": "bf08977a-99f8-42e6-b2ac-8475575ff9fe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/releases/:id/subscribe",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"releases",
										":id",
										"subscribe"
									],
									"variable": [
										{
											"key": "apiId",
											"value": null
										},
										{
											"key": "apiVersionId",
											"value": null
										},
										{
											"key": "id",
											"value": null
										}
									]
								}
							},
							"response": [
								{
									"id": "94244bd2-fa73-4e1e-9d07-e848d94e62cd",
									"name": "[Success] Subscribe to a release",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/releases/:id/subscribe",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												":apiId",
												"versions",
												":apiVersionId",
												"releases",
												":id",
												"subscribe"
											],
											"variable": [
												{
													"key": "apiId",
													"value": null
												},
												{
													"key": "apiVersionId",
													"value": null
												},
												{
													"key": "id",
													"value": null
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"model\": \"release\",\n        \"action\": \"subscribe\"\n    },\n    \"data\": {\n        \"subscription\": {\n            \"id\": \"apis/{{apiId}}/apiversions/{{apiVersionId}}/releases/{{id}}\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Unsubscribe to a release",
							"id": "0adb6946-072f-4e4a-b806-111449530b90",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/releases/:id/subscribe",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"releases",
										":id",
										"subscribe"
									],
									"variable": [
										{
											"key": "apiId",
											"value": null
										},
										{
											"key": "apiVersionId",
											"value": null
										},
										{
											"key": "id",
											"value": null
										}
									]
								}
							},
							"response": [
								{
									"id": "3e9f14ea-e66a-45e9-a3b6-470171647d1b",
									"name": "[Success] Unsubscribe to a release",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/releases/:id/subscribe",
											"host": [
												"{{url}}"
											],
											"path": [
												"apis",
												":apiId",
												"versions",
												":apiVersionId",
												"releases",
												":id",
												"subscribe"
											],
											"variable": [
												{
													"key": "apiId",
													"value": null
												},
												{
													"key": "apiVersionId",
													"value": null
												},
												{
													"key": "id",
													"value": null
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"model\": \"release\",\n        \"action\": \"unsubscribe\"\n    },\n    \"data\": {\n        \"subscription\": {\n            \"id\": \"apis/{{apiId}}/apiversions/{{apiVersionId}}/releases/{{id}}\"\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "6c50e3c2-069a-407a-92f7-a16d5f5138b3"
				},
				{
					"name": "Create a new release",
					"id": "ca126285-7ae3-40ea-bde1-705b72dee9ab",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-access-token",
								"value": "6a6c5133ada94a44ed257745a5e75412c64423ebe5d7dd10f82344d6f10bacafa654e43ba11a91b07a5c81b7a82b5be1c89c9c496936df8cd3d8b04988007206",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"releaseName\",\n  \"summary\": \"Summary of the release\", // optional\n  \"description\": \"Description of the release\", // optional\n  \"visibility\": \"public\", // can be either public or private\n  \"gitTag\": \" \" //optional\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:versionId/releases",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":versionId",
								"releases"
							],
							"variable": [
								{
									"key": "apiId",
									"value": "887f7542-487c-4754-b0b9-232f1feffd79"
								},
								{
									"key": "versionId",
									"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
								}
							]
						}
					},
					"response": [
						{
							"id": "6022171c-2a32-4f1a-a046-a52fb93d367a",
							"name": "( 200  OK ) Create a new release",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"1.2\",\n    \"sumamry\": \"My first release summary\",\n    \"description\": \"My first release description\",\n    \"gitTag\": \"Tag 1\" ,\n    \"visibility\": \"public\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases"
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "versionId",
											"value": ""
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{releaseId}}\",\n    \"meta\": {\n        \"model\": \"release\",\n        \"action\": \"create\"\n    },\n    \"data\": {\n        \"id\": \"{{releaseId}}\",\n        \"name\": \"1.2\",\n        \"sumamry\": \"My first release summary\",\n        \"description\": \"My first release description\",\n        \"visibility\": \"public\",\n        \"gitTag\":\"Tag 1\"\n    }\n}"
						},
						{
							"id": "7fc1b516-a716-495b-ae68-343fa44f00a8",
							"name": "( 404 When API is invalid ) Create a new release",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-access-token",
										"value": "6a6c5133ada94a44ed257745a5e75412c64423ebe5d7dd10f82344d6f10bacafa654e43ba11a91b07a5c81b7a82b5be1c89c9c496936df8cd3d8b04988007206",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"releaseName\",\n  \"description\": \"Description of the release\",\n  \"gitTag\": \"Tag 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "API1V1"
										},
										{
											"key": "versionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the API you are looking for\",\n        \"details\": {\n            \"model\": \"api\",\n            \"model_id\": \"API1V1\",\n            \"owner\": \"U1\"\n        }\n    }\n}"
						},
						{
							"id": "d6fd879b-5499-4895-a3fe-e203b9473439",
							"name": "( 404 When API Version is invalid ) Create a new release",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-access-token",
										"value": "6a6c5133ada94a44ed257745a5e75412c64423ebe5d7dd10f82344d6f10bacafa654e43ba11a91b07a5c81b7a82b5be1c89c9c496936df8cd3d8b04988007206",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"releaseName\",\n  \"description\": \"Description of the release\",\n  \"gitTag\": \"Tag 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										},
										{
											"key": "versionId",
											"value": "API1V1"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the apiversion you are looking for\",\n        \"details\": {\n            \"model\": \"apiversion\",\n            \"model_id\": \"API1V1\",\n            \"owner\": \"U1\"\n        }\n    }\n}"
						},
						{
							"id": "27caf39d-d427-453d-b736-767d5c05da1a",
							"name": "( 400 When name of the release is missing ) Create a new release",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-access-token",
										"value": "6a6c5133ada94a44ed257745a5e75412c64423ebe5d7dd10f82344d6f10bacafa654e43ba11a91b07a5c81b7a82b5be1c89c9c496936df8cd3d8b04988007206",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Description of the release\",\n  \"gitTag\": \"Tag 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										},
										{
											"key": "versionId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\":\"paramMissingError\",\n        \"message\":\"Parameter is missing in the request.\",\n        \"details\":{\n            \"param\":\"name\"\n        }\n    }\n}"
						},
						{
							"id": "b4d2bf65-d099-4dfc-8c23-31d175d7ad31",
							"name": "( 400 When name of the release is not string ) Create a new release",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-access-token",
										"value": "6a6c5133ada94a44ed257745a5e75412c64423ebe5d7dd10f82344d6f10bacafa654e43ba11a91b07a5c81b7a82b5be1c89c9c496936df8cd3d8b04988007206",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": [1,2],\n  \"description\": \"Description of the release\",\n  \"gitTag\": \"Tag 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										},
										{
											"key": "versionId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\":\"invalidParamsError\",\n        \"message\":\"The specified parameter is in an invalid format\",\n        \"details\":{\n            \"param\":\"name\"\n    }\n}"
						},
						{
							"id": "59ee7e4c-f52d-49b4-b647-c314e1b59249",
							"name": "( 400 When summary of the release is not string ) Create a new release",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-access-token",
										"value": "6a6c5133ada94a44ed257745a5e75412c64423ebe5d7dd10f82344d6f10bacafa654e43ba11a91b07a5c81b7a82b5be1c89c9c496936df8cd3d8b04988007206",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"1.2\",\n  \"summary\": [1,2],\n  \"gitTag\": \"Tag 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "versionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\":\"invalidParamsError\",\n        \"message\":\"The specified parameter is in an invalid format\",\n        \"details\":{\n            \"param\":\"summary\"\n    }\n}"
						},
						{
							"id": "73becfb3-a3e3-48bb-b8cd-2abddcedc267",
							"name": "( 400 When description of the release is not string ) Create a new release",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-access-token",
										"value": "6a6c5133ada94a44ed257745a5e75412c64423ebe5d7dd10f82344d6f10bacafa654e43ba11a91b07a5c81b7a82b5be1c89c9c496936df8cd3d8b04988007206",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"1.2\",\n  \"description\": [1,2],\n  \"gitTag\": \"Tag 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										},
										{
											"key": "versionId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\":\"invalidParamsError\",\n        \"message\":\"The specified parameter is in an invalid format\",\n        \"details\":{\n            \"param\":\"description\"\n    }\n}"
						}
					]
				},
				{
					"name": "Update a release",
					"id": "5b6741f9-b9b4-46be-8eda-dba3361feb37",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Release 2\",\n    \"visibility\": \"private\",\n    \"sumamry\": \"s1\",\n    \"description\": \"d1\",\n    \"gitTag\": \"r2.0\" // Can pass empty string to unlink git tag from a release \n}\n// User can update either of these 5 properties",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:versionId/releases/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":versionId",
								"releases",
								":id"
							],
							"variable": [
								{
									"key": "apiId",
									"value": ""
								},
								{
									"key": "versionId",
									"value": ""
								},
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"id": "029a20f4-224e-4446-be4b-2ac661c74f5b",
							"name": "200 OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Release 2\",\n    \"summary\": \"some sumamry\",\n    \"description\": \"some description\",\n    \"gitTag\": \"r2.0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases",
										":id"
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "versionId",
											"value": ""
										},
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{releaseId}}\",\n    \"meta\": {\n        \"model\": \"release\",\n        \"action\": \"update\"\n    },\n    \"data\": {\n        \"id\": \"{{releaseId}}\",\n        \"name\": \"Release 2\",\n        \"summary\": \"some sumamry\",\n        \"description\": \"some description\",\n        \"visibiltiy\": \"private\",\n        \"gitTag\": \"r2.0\"\n    }\n}"
						},
						{
							"id": "3e499d59-51c0-4a8b-9cc1-08e09c2fdd64",
							"name": "404 Not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Release 2\",\n    \"visibility\": \"private\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases",
										":id"
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "versionId",
											"value": ""
										},
										{
											"key": "id",
											"value": "f4498d"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the release you are looking for\",\n        \"details\": {\n            \"model\": \"release\",\n            \"model_id\": \"f4498d7\",\n            \"owner\": \"525986\"\n        }\n    }\n}"
						},
						{
							"id": "b2533e65-2712-4df1-b84d-6e072b04c59d",
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Release 2\",\n    \"visibility\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases",
										":id"
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "versionId",
											"value": ""
										},
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The specified parameter is in an invalid format\",\n        \"details\": {\n            \"param\": \"visibility\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Delete a release",
					"id": "ed701d3a-117a-4f8c-9386-9dc311ba40aa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:versionId/releases/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":versionId",
								"releases",
								":id"
							],
							"variable": [
								{
									"key": "apiId",
									"value": ""
								},
								{
									"key": "versionId",
									"value": ""
								},
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"id": "e990210c-1221-4130-80ef-7b960eda926f",
							"name": "( 200 OK )Delete a release",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases",
										":id"
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "versionId",
											"value": ""
										},
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"{{releaseId}}\",\n    \"meta\": {\n        \"model\": \"release\",\n        \"action\": \"delete\"\n    }\n}"
						},
						{
							"id": "7da22b18-827c-4a7a-ae05-ea218889e154",
							"name": "(404 Release Id not found) Delete a release",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases",
										":id"
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "versionId",
											"value": ""
										},
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the release you are looking for\",\n        \"details\": {\n            \"model\": \"release\",\n            \"action\": \"destroy\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "List all releases",
					"id": "c5df19ce-2c7f-4166-a8a7-5926a9ada9e1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:versionId/releases",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":versionId",
								"releases"
							],
							"variable": [
								{
									"key": "apiId",
									"value": ""
								},
								{
									"key": "versionId",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"id": "37921753-ef8c-45a9-af2a-a4541957524a",
							"name": "List all releases",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "text/plain",
										"type": "text"
									},
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases"
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "versionId",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"model\": \"release\",\n        \"action\": \"findall\"\n    },\n    \"data\": [\n        {\n            \"apiVersion\": \"10819bfe-19c1-47e4-b172-3dcfa9bd62e3\",\n            \"id\": \"4fe8f8b2-4571-4d9e-b5c0-1bbfc499329f\",\n            \"name\": \"release doc\",\n            \"summary\": \"r11\",\n            \"description\": \"r1\",\n            \"visibility\": \"public\",\n            \"entities\": {\n                \"schemas\": [\n                    {\n                        \"tag\": \"bdca84bc-f348-4c7e-9e5c-aacb236551fd\",\n                        \"entityId\": \"8f40961a-8295-4b6c-b5d4-d2fd9be3281b\",\n                        \"entityType\": \"schema\",\n                        \"relationType\": \"schema\"\n                    }\n                ],\n                \"documentations\": [\n                    {\n                        \"tag\": \"8891af4e-d0f7-4e0f-afd1-c509533d0ee1\",\n                        \"entityId\": \"525986-550e55a2-09a3-4eb7-af02-5148754a8e8a\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"documentation\"\n                    }\n                ],\n                \"integrationtests\": [\n                    {\n                        \"tag\": \"9d983bc9-1dd0-40a0-a1ea-1b6c3302fb07\",\n                        \"entityId\": \"525986-441cfffb-542f-40b7-a52c-a6a5c0c43615\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"integrationtest\"\n                    }\n                ]\n            },\n            \"createdBy\": \"525986\",\n            \"updatedBy\": \"525986\",\n            \"createdAt\": \"2021-08-11T12:53:15.000Z\",\n            \"updatedAt\": \"2021-08-11T12:53:15.000Z\",\n            \"transactionId\": \"0a390c18-5238-4999-903b-b28a6a120bee\"\n        },\n        {\n            \"apiVersion\": \"10819bfe-19c1-47e4-b172-3dcfa9bd62e3\",\n            \"id\": \"73283fc1-682d-4f82-96bc-4856b5295823\",\n            \"name\": \"Release with doc\",\n            \"description\": \"doc release\",\n            \"visibility\": \"public\",\n            \"entities\": {\n                \"schemas\": [\n                    {\n                        \"tag\": \"ebfcdd5e-aea9-4740-b299-436fe45d73b7\",\n                        \"entityId\": \"8f40961a-8295-4b6c-b5d4-d2fd9be3281b\",\n                        \"entityType\": \"schema\",\n                        \"relationType\": \"schema\"\n                    }\n                ],\n                \"documentations\": [\n                    {\n                        \"tag\": \"4169a89b-f34e-4d13-b94b-47068e1b7b4f\",\n                        \"entityId\": \"525986-1bb63f31-fac1-44c9-a8b4-0bb325ab79cc\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"documentation\"\n                    }\n                ],\n                \"integrationtests\": [\n                    {\n                        \"tag\": \"b121b8b7-8037-40d3-9936-59ca9d857cbc\",\n                        \"entityId\": \"525986-441cfffb-542f-40b7-a52c-a6a5c0c43615\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"integrationtest\"\n                    }\n                ]\n            },\n            \"createdBy\": \"525986\",\n            \"updatedBy\": \"525986\",\n            \"createdAt\": \"2021-08-11T11:26:28.000Z\",\n            \"updatedAt\": \"2021-08-11T11:26:28.000Z\",\n            \"transactionId\": \"a975242f-84d3-4688-acd8-ee427c96a170\"\n        },\n        {\n            \"apiVersion\": \"10819bfe-19c1-47e4-b172-3dcfa9bd62e3\",\n            \"id\": \"8d62d805-1fd8-41a4-8f97-19b8d96376dd\",\n            \"name\": \"r33\",\n            \"description\": \"r3\",\n            \"visibility\": \"public\",\n            \"entities\": {\n                \"schemas\": [\n                    {\n                        \"tag\": \"684a914d-6d8d-44fa-a912-74ec3610a01a\",\n                        \"entityId\": \"8f40961a-8295-4b6c-b5d4-d2fd9be3281b\",\n                        \"entityType\": \"schema\",\n                        \"relationType\": \"schema\"\n                    }\n                ],\n                \"documentations\": [\n                    {\n                        \"tag\": \"3daa1777-77d4-4f9d-8782-25babd81e83e\",\n                        \"entityId\": \"525986-550e55a2-09a3-4eb7-af02-5148754a8e8a\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"documentation\"\n                    }\n                ],\n                \"integrationtests\": [\n                    {\n                        \"tag\": \"f5105af2-e2bf-4531-b950-9935e0e44377\",\n                        \"entityId\": \"525986-441cfffb-542f-40b7-a52c-a6a5c0c43615\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"integrationtest\"\n                    }\n                ]\n            },\n            \"createdBy\": \"525986\",\n            \"updatedBy\": \"525986\",\n            \"createdAt\": \"2021-08-18T11:47:56.000Z\",\n            \"updatedAt\": \"2021-08-18T11:47:56.000Z\",\n            \"transactionId\": \"7c637352-c9b2-476c-ba20-58d2d303dfe3\"\n        },\n        {\n            \"apiVersion\": \"10819bfe-19c1-47e4-b172-3dcfa9bd62e3\",\n            \"id\": \"93d34f76-f637-4316-bd6b-fb51119caf30\",\n            \"name\": \"Release R1\",\n            \"description\": \"The admin.analytics.getFile method now returns daily data about conversations in public channels.\",\n            \"visibility\": \"public\",\n            \"entities\": {\n                \"schemas\": [\n                    {\n                        \"tag\": \"00f60a39-1878-4794-88f3-2c9b10e4d1a5\",\n                        \"entityId\": \"8f40961a-8295-4b6c-b5d4-d2fd9be3281b\",\n                        \"entityType\": \"schema\",\n                        \"relationType\": \"schema\"\n                    }\n                ]\n            },\n            \"createdBy\": \"525986\",\n            \"updatedBy\": \"525986\",\n            \"createdAt\": \"2021-08-09T15:50:47.000Z\",\n            \"updatedAt\": \"2021-08-09T15:50:47.000Z\",\n            \"transactionId\": \"6b99f540-4e0f-4da2-8fed-7a79356e6647\"\n        },\n        {\n            \"apiVersion\": \"10819bfe-19c1-47e4-b172-3dcfa9bd62e3\",\n            \"id\": \"ed58e593-4d95-4b89-8180-751c7ad04a6a\",\n            \"name\": \"R1\",\n            \"description\": \"RELEASE\",\n            \"visibility\": \"public\",\n            \"entities\": {\n                \"schemas\": [\n                    {\n                        \"tag\": \"f8fab867-1f77-418e-ac53-6d583a498a08\",\n                        \"entityId\": \"8f40961a-8295-4b6c-b5d4-d2fd9be3281b\",\n                        \"entityType\": \"schema\",\n                        \"relationType\": \"schema\"\n                    }\n                ],\n                \"documentations\": [\n                    {\n                        \"tag\": \"86e7aed6-6d13-4e8d-9e07-fa760824fbdc\",\n                        \"entityId\": \"525986-550e55a2-09a3-4eb7-af02-5148754a8e8a\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"documentation\"\n                    }\n                ],\n                \"integrationtests\": [\n                    {\n                        \"tag\": \"aa77b566-f8ff-40b8-a5ab-1786a465d60f\",\n                        \"entityId\": \"525986-441cfffb-542f-40b7-a52c-a6a5c0c43615\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"integrationtest\"\n                    }\n                ]\n            },\n            \"createdBy\": \"525986\",\n            \"updatedBy\": \"525986\",\n            \"createdAt\": \"2021-08-17T15:56:23.000Z\",\n            \"updatedAt\": \"2021-08-17T15:56:23.000Z\",\n            \"transactionId\": \"17b54a22-f421-40b6-b5be-614edf1e0724\"\n        }\n    ]\n}"
						},
						{
							"id": "d2e55003-3ce2-417e-b641-4efca5e7fd29",
							"name": "List all releases with test relation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "text/plain",
										"type": "text"
									},
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases"
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "versionId",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"model\": \"release\",\n        \"action\": \"findall\"\n    },\n    \"data\": [\n        {\n            \"apiVersion\": \"6e2b2d6d-5914-49f4-afa8-a8f3d7eee852\",\n            \"id\": \"134a9075-629d-4b7a-bd93-61896336fdfc\",\n            \"name\": \"another release\",\n            \"summary\": \"test release summary\",\n            \"description\": \"test release\",\n            \"visibility\": \"public\",\n            \"entities\": {\n                \"tests\": [\n                    {\n                        \"tag\": \"77d28594-1839-4939-8679-f888e3fbee5e\",\n                        \"entityId\": \"545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"7618e365-7bcc-47db-ad0c-b6d2c70769d4\",\n                        \"entityId\": \"545941-276b1520-34ed-447b-8647-5da135df49f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"d3d1b05a-9fbf-4b46-9898-0e08fe50d097\",\n                        \"entityId\": \"545941-2d5b31a4-7db7-4686-a062-fa83413fab29\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"9b61cb20-32f6-4b3d-9f43-7e5557c1f630\",\n                        \"entityId\": \"545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"267a3513-73b1-418c-81ad-bb5fee5b80c6\",\n                        \"entityId\": \"545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"1b88977e-0123-4613-8b9e-d37a2d8f26e7\",\n                        \"entityId\": \"545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"82d6e82f-0dba-4cc6-9c09-b90011b4c45e\",\n                        \"entityId\": \"545941-41d74988-a6dd-443b-911b-5774001641f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"6ea51235-ba56-494d-9bea-388bf3179998\",\n                        \"entityId\": \"545941-ab66c209-e61f-404d-9138-84c4e49e76b5\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    }\n                ],\n                \"schemas\": [\n                    {\n                        \"tag\": \"179ebfa7-61a3-4bfd-b75a-2644a565f793\",\n                        \"entityId\": \"304aa93a-504f-410d-b88b-9cec4c8c1630\",\n                        \"entityType\": \"schema\",\n                        \"relationType\": \"schema\"\n                    }\n                ],\n                \"testsuites\": [\n                    {\n                        \"tag\": \"77d28594-1839-4939-8679-f888e3fbee5e\",\n                        \"entityId\": \"545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"7618e365-7bcc-47db-ad0c-b6d2c70769d4\",\n                        \"entityId\": \"545941-276b1520-34ed-447b-8647-5da135df49f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"d3d1b05a-9fbf-4b46-9898-0e08fe50d097\",\n                        \"entityId\": \"545941-2d5b31a4-7db7-4686-a062-fa83413fab29\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"9b61cb20-32f6-4b3d-9f43-7e5557c1f630\",\n                        \"entityId\": \"545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"267a3513-73b1-418c-81ad-bb5fee5b80c6\",\n                        \"entityId\": \"545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"1b88977e-0123-4613-8b9e-d37a2d8f26e7\",\n                        \"entityId\": \"545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"82d6e82f-0dba-4cc6-9c09-b90011b4c45e\",\n                        \"entityId\": \"545941-41d74988-a6dd-443b-911b-5774001641f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"6ea51235-ba56-494d-9bea-388bf3179998\",\n                        \"entityId\": \"545941-ab66c209-e61f-404d-9138-84c4e49e76b5\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    }\n                ],\n                \"contracttests\": [\n                    {\n                        \"tag\": \"9b61cb20-32f6-4b3d-9f43-7e5557c1f630\",\n                        \"entityId\": \"545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"contracttest\"\n                    }\n                ],\n                \"documentations\": [\n                    {\n                        \"tag\": \"3f7cf13b-a03e-4a02-81d1-61f6cad46576\",\n                        \"entityId\": \"545941-b9eebc88-b14d-4d55-a498-11ffd27a9137\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"documentation\"\n                    }\n                ],\n                \"integrationtests\": [\n                    {\n                        \"tag\": \"267a3513-73b1-418c-81ad-bb5fee5b80c6\",\n                        \"entityId\": \"545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"integrationtest\"\n                    }\n                ]\n            },\n            \"createdBy\": \"545941\",\n            \"updatedBy\": \"545941\",\n            \"createdAt\": \"2021-09-07T23:35:13.000Z\",\n            \"updatedAt\": \"2021-09-07T23:35:13.000Z\",\n            \"transactionId\": \"c27989b5-4e90-4893-b2de-56a5d6a2ac01\"\n        },\n        {\n            \"apiVersion\": \"6e2b2d6d-5914-49f4-afa8-a8f3d7eee852\",\n            \"id\": \"8c38fa36-2709-4056-90bf-6c5fc6c62a17\",\n            \"name\": \"release 7\",\n            \"description\": \"removed the forceful clubbing in the create\",\n            \"visibility\": \"public\",\n            \"entities\": {\n                \"tests\": [\n                    {\n                        \"tag\": \"fb03ac82-29a8-4736-9c72-40bda41d7f66\",\n                        \"entityId\": \"545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"ffc030f3-66c9-44f8-9f3d-4a402a3a20ba\",\n                        \"entityId\": \"545941-276b1520-34ed-447b-8647-5da135df49f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"ea8c6fca-c04a-4374-9a1b-db8c566a1372\",\n                        \"entityId\": \"545941-2d5b31a4-7db7-4686-a062-fa83413fab29\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"9a8d907d-c64b-4ba4-8fc7-db496779667c\",\n                        \"entityId\": \"545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"38b14b7b-86c7-4bac-8db7-b82053ca5548\",\n                        \"entityId\": \"545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"03d84085-57d7-4fb0-b1f4-f8b3d9c7a44e\",\n                        \"entityId\": \"545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"dd24de68-80a9-436f-9126-555988181afe\",\n                        \"entityId\": \"545941-41d74988-a6dd-443b-911b-5774001641f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"1f31c0bb-d13e-4a1c-beb5-337d3ec190d5\",\n                        \"entityId\": \"545941-ab66c209-e61f-404d-9138-84c4e49e76b5\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    }\n                ],\n                \"schemas\": [\n                    {\n                        \"tag\": \"fffbfa5b-36f0-400f-a2cc-54abb742e7d6\",\n                        \"entityId\": \"304aa93a-504f-410d-b88b-9cec4c8c1630\",\n                        \"entityType\": \"schema\",\n                        \"relationType\": \"schema\"\n                    }\n                ],\n                \"testsuites\": [\n                    {\n                        \"tag\": \"03d84085-57d7-4fb0-b1f4-f8b3d9c7a44e\",\n                        \"entityId\": \"545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"dd24de68-80a9-436f-9126-555988181afe\",\n                        \"entityId\": \"545941-41d74988-a6dd-443b-911b-5774001641f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"1f31c0bb-d13e-4a1c-beb5-337d3ec190d5\",\n                        \"entityId\": \"545941-ab66c209-e61f-404d-9138-84c4e49e76b5\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"fb03ac82-29a8-4736-9c72-40bda41d7f66\",\n                        \"entityId\": \"545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"ffc030f3-66c9-44f8-9f3d-4a402a3a20ba\",\n                        \"entityId\": \"545941-276b1520-34ed-447b-8647-5da135df49f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"ea8c6fca-c04a-4374-9a1b-db8c566a1372\",\n                        \"entityId\": \"545941-2d5b31a4-7db7-4686-a062-fa83413fab29\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    }\n                ],\n                \"contracttests\": [\n                    {\n                        \"tag\": \"9a8d907d-c64b-4ba4-8fc7-db496779667c\",\n                        \"entityId\": \"545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"contracttest\"\n                    }\n                ],\n                \"documentations\": [\n                    {\n                        \"tag\": \"ad51f969-3018-40d0-9690-72b2009962f1\",\n                        \"entityId\": \"545941-b9eebc88-b14d-4d55-a498-11ffd27a9137\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"documentation\"\n                    }\n                ],\n                \"integrationtests\": [\n                    {\n                        \"tag\": \"38b14b7b-86c7-4bac-8db7-b82053ca5548\",\n                        \"entityId\": \"545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"integrationtest\"\n                    }\n                ]\n            },\n            \"createdBy\": \"545941\",\n            \"updatedBy\": \"545941\",\n            \"createdAt\": \"2021-09-08T04:38:44.000Z\",\n            \"updatedAt\": \"2021-09-08T04:38:44.000Z\",\n            \"transactionId\": \"bc37c324-13b9-43e3-89fc-70c5df459855\"\n        },\n        {\n            \"apiVersion\": \"6e2b2d6d-5914-49f4-afa8-a8f3d7eee852\",\n            \"id\": \"a5bbeeb9-4c6e-426e-90e9-e9f699172fc2\",\n            \"name\": \"test release\",\n            \"description\": \"this is a test release\",\n            \"visibility\": \"public\",\n            \"entities\": {\n                \"tests\": [\n                    {\n                        \"tag\": \"368524dd-06f6-4fec-afb3-e3b665baba41\",\n                        \"entityId\": \"545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"4a4ee8c1-385a-4cba-9c16-bffb94aab232\",\n                        \"entityId\": \"545941-276b1520-34ed-447b-8647-5da135df49f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"2680b425-f427-4902-85da-2ad685805596\",\n                        \"entityId\": \"545941-2d5b31a4-7db7-4686-a062-fa83413fab29\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"3468aad3-f7b8-488d-806b-7b402bb540e3\",\n                        \"entityId\": \"545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"bc11d065-3262-4bde-9a63-d8d908ec9193\",\n                        \"entityId\": \"545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"42228238-5246-4810-8842-e7e8768a2d1e\",\n                        \"entityId\": \"545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"6b70983f-cf4e-45a5-b9f4-0117b23d1280\",\n                        \"entityId\": \"545941-41d74988-a6dd-443b-911b-5774001641f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"2808868e-2eeb-4249-858b-9b8f44867a09\",\n                        \"entityId\": \"545941-ab66c209-e61f-404d-9138-84c4e49e76b5\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    }\n                ],\n                \"schemas\": [\n                    {\n                        \"tag\": \"9d9abe84-e11d-4826-b9ca-000881bc0fdf\",\n                        \"entityId\": \"304aa93a-504f-410d-b88b-9cec4c8c1630\",\n                        \"entityType\": \"schema\",\n                        \"relationType\": \"schema\"\n                    }\n                ],\n                \"testsuites\": [\n                    {\n                        \"tag\": \"368524dd-06f6-4fec-afb3-e3b665baba41\",\n                        \"entityId\": \"545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"4a4ee8c1-385a-4cba-9c16-bffb94aab232\",\n                        \"entityId\": \"545941-276b1520-34ed-447b-8647-5da135df49f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"2680b425-f427-4902-85da-2ad685805596\",\n                        \"entityId\": \"545941-2d5b31a4-7db7-4686-a062-fa83413fab29\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"3468aad3-f7b8-488d-806b-7b402bb540e3\",\n                        \"entityId\": \"545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"bc11d065-3262-4bde-9a63-d8d908ec9193\",\n                        \"entityId\": \"545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"42228238-5246-4810-8842-e7e8768a2d1e\",\n                        \"entityId\": \"545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"6b70983f-cf4e-45a5-b9f4-0117b23d1280\",\n                        \"entityId\": \"545941-41d74988-a6dd-443b-911b-5774001641f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"2808868e-2eeb-4249-858b-9b8f44867a09\",\n                        \"entityId\": \"545941-ab66c209-e61f-404d-9138-84c4e49e76b5\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    }\n                ],\n                \"contracttests\": [\n                    {\n                        \"tag\": \"3468aad3-f7b8-488d-806b-7b402bb540e3\",\n                        \"entityId\": \"545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"contracttest\"\n                    }\n                ],\n                \"documentations\": [\n                    {\n                        \"tag\": \"7257bb86-1123-45ab-8814-e371f90b761c\",\n                        \"entityId\": \"545941-b9eebc88-b14d-4d55-a498-11ffd27a9137\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"documentation\"\n                    }\n                ],\n                \"integrationtests\": [\n                    {\n                        \"tag\": \"bc11d065-3262-4bde-9a63-d8d908ec9193\",\n                        \"entityId\": \"545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"integrationtest\"\n                    }\n                ]\n            },\n            \"createdBy\": \"545941\",\n            \"updatedBy\": \"545941\",\n            \"createdAt\": \"2021-09-07T21:50:57.000Z\",\n            \"updatedAt\": \"2021-09-07T21:50:57.000Z\",\n            \"transactionId\": \"d95ebdbd-b464-45fe-aea2-966025168866\"\n        },\n        {\n            \"apiVersion\": \"6e2b2d6d-5914-49f4-afa8-a8f3d7eee852\",\n            \"id\": \"e809a345-d59a-49e2-9ac2-3197b393240d\",\n            \"name\": \"release test\",\n            \"description\": \"another release test \",\n            \"visibility\": \"public\",\n            \"entities\": {\n                \"tests\": [\n                    {\n                        \"tag\": \"4b44a5d8-db00-44fa-bd2c-c504a60ffae8\",\n                        \"entityId\": \"545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"fe02bf99-0856-4102-9d03-a05d2d580726\",\n                        \"entityId\": \"545941-276b1520-34ed-447b-8647-5da135df49f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"cc9554ba-d762-46ae-8f08-6639256daa5c\",\n                        \"entityId\": \"545941-2d5b31a4-7db7-4686-a062-fa83413fab29\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"a60ce132-19cb-40a5-a672-a523624a3c94\",\n                        \"entityId\": \"545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"c93a65b6-ac7b-4345-bb00-e63a2b67ceda\",\n                        \"entityId\": \"545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"38755e44-578b-4e91-b84f-31dabf77bb96\",\n                        \"entityId\": \"545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"cb0b2849-9e36-4381-8e2e-6af00cdaa837\",\n                        \"entityId\": \"545941-41d74988-a6dd-443b-911b-5774001641f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    },\n                    {\n                        \"tag\": \"f5cd2e1b-9250-4763-be99-c242e38b5814\",\n                        \"entityId\": \"545941-ab66c209-e61f-404d-9138-84c4e49e76b5\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"test\"\n                    }\n                ],\n                \"schemas\": [\n                    {\n                        \"tag\": \"fdc560f5-d274-4498-9f4e-54f45efd328d\",\n                        \"entityId\": \"304aa93a-504f-410d-b88b-9cec4c8c1630\",\n                        \"entityType\": \"schema\",\n                        \"relationType\": \"schema\"\n                    }\n                ],\n                \"testsuites\": [\n                    {\n                        \"tag\": \"38755e44-578b-4e91-b84f-31dabf77bb96\",\n                        \"entityId\": \"545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"cb0b2849-9e36-4381-8e2e-6af00cdaa837\",\n                        \"entityId\": \"545941-41d74988-a6dd-443b-911b-5774001641f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"f5cd2e1b-9250-4763-be99-c242e38b5814\",\n                        \"entityId\": \"545941-ab66c209-e61f-404d-9138-84c4e49e76b5\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"4b44a5d8-db00-44fa-bd2c-c504a60ffae8\",\n                        \"entityId\": \"545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"fe02bf99-0856-4102-9d03-a05d2d580726\",\n                        \"entityId\": \"545941-276b1520-34ed-447b-8647-5da135df49f1\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    },\n                    {\n                        \"tag\": \"cc9554ba-d762-46ae-8f08-6639256daa5c\",\n                        \"entityId\": \"545941-2d5b31a4-7db7-4686-a062-fa83413fab29\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"testsuite\"\n                    }\n                ],\n                \"contracttests\": [\n                    {\n                        \"tag\": \"a60ce132-19cb-40a5-a672-a523624a3c94\",\n                        \"entityId\": \"545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"contracttest\"\n                    }\n                ],\n                \"documentations\": [\n                    {\n                        \"tag\": \"73523e98-3695-44a3-8fd9-d0a50c7cdddd\",\n                        \"entityId\": \"545941-b9eebc88-b14d-4d55-a498-11ffd27a9137\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"documentation\"\n                    }\n                ],\n                \"integrationtests\": [\n                    {\n                        \"tag\": \"c93a65b6-ac7b-4345-bb00-e63a2b67ceda\",\n                        \"entityId\": \"545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"integrationtest\"\n                    }\n                ]\n            },\n            \"createdBy\": \"545941\",\n            \"updatedBy\": \"545941\",\n            \"createdAt\": \"2021-09-08T05:13:26.000Z\",\n            \"updatedAt\": \"2021-09-08T05:13:26.000Z\",\n            \"transactionId\": \"fae92550-f76a-4fb9-83b9-690b0a6993d9\"\n        }\n    ]\n}"
						},
						{
							"id": "4d7e430a-8fd2-4adc-8df4-0c4f82f9be0d",
							"name": "No releases found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases"
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "versionId",
											"value": ""
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"model\": \"release\",\n        \"action\": \"findall\"\n    },\n    \"data\": []\n}"
						},
						{
							"id": "3e616dc7-0bc0-4b92-9fe1-06eff5891849",
							"name": "List all releases (with gitTag)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases?populate=gitTag",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases"
									],
									"query": [
										{
											"key": "populate",
											"value": "gitTag"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "versionId",
											"value": ""
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"model\": \"release\",\n        \"action\": \"findall\"\n    },\n    \"data\": [\n        {\n            \"apiVersion\": \"f5fa33de-de4b-46e6-ac63-3b2fcd7ba3a8\",\n            \"id\": \"5b946fe3-0516-4f78-ad4f-9d3463e85343\",\n            \"name\": \"Testing\",\n            \"summary\": \"some summary\",\n            \"description\": \"0.2\",\n            \"visibility\": \"public\",\n            \"entities\": {\n                \"documentations\": [\n                    {\n                        \"tag\": \"bf332eb0-856e-4437-b7dd-08aa60da1e76\",\n                        \"entityId\": \"525986-8005fa07-8976-471c-8608-baf06a40e9b2\",\n                        \"entityType\": \"collection\",\n                        \"relationType\": \"documentation\"\n                    }\n                ]\n            },\n            \"createdBy\": \"525986\",\n            \"updatedBy\": \"525986\",\n            \"createdAt\": \"2021-08-17T12:04:06.000Z\",\n            \"updatedAt\": \"2021-08-17T12:04:06.000Z\",\n            \"transactionId\": \"e0970e72-db93-4cf3-9f39-56a888d1c89b\",\n            \"gitTag\": \"\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Fetch details of a release",
					"id": "bca9a314-06a1-4f62-ad86-f214fcfd1eac",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-access-token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:versionId/releases/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":versionId",
								"releases",
								":id"
							],
							"variable": [
								{
									"key": "apiId",
									"value": ""
								},
								{
									"key": "versionId",
									"value": ""
								},
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"id": "139f8045-477d-409f-a255-c5d8c87dee3f",
							"name": "Fetch details of a release",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases/:releaseId",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases",
										":releaseId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "versionId",
											"value": ""
										},
										{
											"key": "releaseId",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"8d62d805-1fd8-41a4-8f97-19b8d96376dd\",\n    \"meta\": {\n        \"model\": \"release\",\n        \"action\": \"findbyid\"\n    },\n    \"data\": {\n        \"apiVersion\": \"10819bfe-19c1-47e4-b172-3dcfa9bd62e3\",\n        \"id\": \"8d62d805-1fd8-41a4-8f97-19b8d96376dd\",\n        \"name\": \"r33\",\n        \"sumamry\": \"r3\",\n        \"description\": \"r3\",\n        \"visibility\": \"public\",\n        \"entities\": {\n            \"schemas\": [\n                {\n                    \"tag\": \"684a914d-6d8d-44fa-a912-74ec3610a01a\",\n                    \"entityId\": \"8f40961a-8295-4b6c-b5d4-d2fd9be3281b\",\n                    \"entityType\": \"schema\",\n                    \"relationType\": \"schema\"\n                }\n            ],\n            \"documentations\": [\n                {\n                    \"tag\": \"3daa1777-77d4-4f9d-8782-25babd81e83e\",\n                    \"entityId\": \"525986-550e55a2-09a3-4eb7-af02-5148754a8e8a\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"documentation\"\n                }\n            ],\n            \"integrationtests\": [\n                {\n                    \"tag\": \"f5105af2-e2bf-4531-b950-9935e0e44377\",\n                    \"entityId\": \"525986-441cfffb-542f-40b7-a52c-a6a5c0c43615\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"integrationtest\"\n                }\n            ]\n        },\n        \"createdBy\": \"525986\",\n        \"updatedBy\": \"525986\",\n        \"createdAt\": \"2021-08-18T11:47:56.000Z\",\n        \"updatedAt\": \"2021-08-18T11:47:56.000Z\",\n        \"transactionId\": \"5aa8bcec-73cd-48a1-89d5-fee4e6dfd2fa\"\n    }\n}"
						},
						{
							"id": "8094ff65-b231-4479-9d43-64cd3d742054",
							"name": "Fetch details of a release with Test relation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases/:releaseId",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases",
										":releaseId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "versionId",
											"value": ""
										},
										{
											"key": "releaseId",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"e809a345-d59a-49e2-9ac2-3197b393240d\",\n    \"meta\": {\n        \"model\": \"release\",\n        \"action\": \"findbyid\"\n    },\n    \"data\": {\n        \"apiVersion\": \"6e2b2d6d-5914-49f4-afa8-a8f3d7eee852\",\n        \"id\": \"e809a345-d59a-49e2-9ac2-3197b393240d\",\n        \"name\": \"release test\",\n        \"summary\": \"release summary\",\n        \"description\": \"another release test \",\n        \"visibility\": \"public\",\n        \"entities\": {\n            \"tests\": [\n                {\n                    \"tag\": \"4b44a5d8-db00-44fa-bd2c-c504a60ffae8\",\n                    \"entityId\": \"545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"test\"\n                },\n                {\n                    \"tag\": \"fe02bf99-0856-4102-9d03-a05d2d580726\",\n                    \"entityId\": \"545941-276b1520-34ed-447b-8647-5da135df49f1\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"test\"\n                },\n                {\n                    \"tag\": \"cc9554ba-d762-46ae-8f08-6639256daa5c\",\n                    \"entityId\": \"545941-2d5b31a4-7db7-4686-a062-fa83413fab29\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"test\"\n                },\n                {\n                    \"tag\": \"a60ce132-19cb-40a5-a672-a523624a3c94\",\n                    \"entityId\": \"545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"test\"\n                },\n                {\n                    \"tag\": \"c93a65b6-ac7b-4345-bb00-e63a2b67ceda\",\n                    \"entityId\": \"545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"test\"\n                },\n                {\n                    \"tag\": \"38755e44-578b-4e91-b84f-31dabf77bb96\",\n                    \"entityId\": \"545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"test\"\n                },\n                {\n                    \"tag\": \"cb0b2849-9e36-4381-8e2e-6af00cdaa837\",\n                    \"entityId\": \"545941-41d74988-a6dd-443b-911b-5774001641f1\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"test\"\n                },\n                {\n                    \"tag\": \"f5cd2e1b-9250-4763-be99-c242e38b5814\",\n                    \"entityId\": \"545941-ab66c209-e61f-404d-9138-84c4e49e76b5\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"test\"\n                }\n            ],\n            \"schemas\": [\n                {\n                    \"tag\": \"fdc560f5-d274-4498-9f4e-54f45efd328d\",\n                    \"entityId\": \"304aa93a-504f-410d-b88b-9cec4c8c1630\",\n                    \"entityType\": \"schema\",\n                    \"relationType\": \"schema\"\n                }\n            ],\n            \"testsuites\": [\n                {\n                    \"tag\": \"38755e44-578b-4e91-b84f-31dabf77bb96\",\n                    \"entityId\": \"545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"testsuite\"\n                },\n                {\n                    \"tag\": \"cb0b2849-9e36-4381-8e2e-6af00cdaa837\",\n                    \"entityId\": \"545941-41d74988-a6dd-443b-911b-5774001641f1\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"testsuite\"\n                },\n                {\n                    \"tag\": \"f5cd2e1b-9250-4763-be99-c242e38b5814\",\n                    \"entityId\": \"545941-ab66c209-e61f-404d-9138-84c4e49e76b5\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"testsuite\"\n                },\n                {\n                    \"tag\": \"4b44a5d8-db00-44fa-bd2c-c504a60ffae8\",\n                    \"entityId\": \"545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"testsuite\"\n                },\n                {\n                    \"tag\": \"fe02bf99-0856-4102-9d03-a05d2d580726\",\n                    \"entityId\": \"545941-276b1520-34ed-447b-8647-5da135df49f1\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"testsuite\"\n                },\n                {\n                    \"tag\": \"cc9554ba-d762-46ae-8f08-6639256daa5c\",\n                    \"entityId\": \"545941-2d5b31a4-7db7-4686-a062-fa83413fab29\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"testsuite\"\n                }\n            ],\n            \"contracttests\": [\n                {\n                    \"tag\": \"a60ce132-19cb-40a5-a672-a523624a3c94\",\n                    \"entityId\": \"545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"contracttest\"\n                }\n            ],\n            \"documentations\": [\n                {\n                    \"tag\": \"73523e98-3695-44a3-8fd9-d0a50c7cdddd\",\n                    \"entityId\": \"545941-b9eebc88-b14d-4d55-a498-11ffd27a9137\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"documentation\"\n                }\n            ],\n            \"integrationtests\": [\n                {\n                    \"tag\": \"c93a65b6-ac7b-4345-bb00-e63a2b67ceda\",\n                    \"entityId\": \"545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3\",\n                    \"entityType\": \"collection\",\n                    \"relationType\": \"integrationtest\"\n                }\n            ]\n        },\n        \"createdBy\": \"545941\",\n        \"updatedBy\": \"545941\",\n        \"createdAt\": \"2021-09-08T05:13:26.000Z\",\n        \"updatedAt\": \"2021-09-08T05:13:26.000Z\",\n        \"transactionId\": \"f7048c7d-a5ae-45ca-995a-805ee82be9ad\"\n    }\n}"
						},
						{
							"id": "913ca099-7eee-4bd4-bd12-8cabfa4d8931",
							"name": "Release Id not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-access-token",
										"value": "{{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:versionId/releases/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":versionId",
										"releases",
										":id"
									],
									"variable": [
										{
											"key": "apiId",
											"value": ""
										},
										{
											"key": "versionId",
											"value": ""
										},
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the release you are looking for\",\n        \"details\": {\n            \"model\": \"release\",\n            \"owner\": \"545941\"\n        }\n    }\n}"
						}
					]
				}
			],
			"id": "e14beaa2-1182-49c2-a8df-40d3c3e1e39f"
		},
		{
			"name": "Operations",
			"item": [
				{
					"name": "Create Operation",
					"id": "8d6ad069-d8d1-434d-b246-0f441612e9cf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"identifier\": \"GET /user/{userId}\",\n    \"definition\": {\n        \"path\": \"/user/{userId}\",\n        \"method\": \"GET\",\n        \"externalDocs\": {\n            \"url\": \"https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md\",\n            \"description\": \"Definition of Operation object\"\n        },\n        \"operationId\": \"getUser\",\n        \"deprecated\": false,\n        \"description\": \"This is operation definition\",\n        \"operationType\": \"OPERATION\",\n        \"summary\": \"Get User Details\",\n        \"servers\": [\n            {\n                \"url\": \"https://postman.com/{environment}\",\n                \"description\": \"Server Decription (Production server)\",\n                \"source\": \"GLOBAL\",\n                \"variables\": [\n                    {\n                        \"name\": \"environment\",\n                        \"defaultValue\": \"prod\",\n                        \"enums\": [\n                            \"prod\",\n                            \"beta\"\n                        ],\n                        \"description\": \"Environment variable information\"\n                    }\n                ]\n            }\n        ],\n        \"requests\": [\n            {\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"binding\": \"PATH\",\n                        \"required\": true,\n                        \"description\": \"ID of user\",\n                        \"allowEmptyValue\": false,\n                        \"source\": \"OPERATION\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"schema\": {\n                                \"type\": \"string\",\n                                \"format\": \"uuid\"\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"pet\",\n                        \"binding\": \"QUERY\",\n                        \"required\": false,\n                        \"description\": \"info about pet\",\n                        \"source\": \"ENDPOINT\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"allowReserved\": true,\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": null,\n                                \"id\": {\n                                    \"type\": \"integer\",\n                                    \"example\": 123\n                                },\n                                \"name\": {\n                                    \"type\": \"string\",\n                                    \"example\": \"John Johanson\"\n                                },\n                                \"address\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"city\": {\n                                            \"type\": \"string\",\n                                            \"example\": \"Delhi\"\n                                        },\n                                        \"country\": {\n                                            \"type\": \"string\",\n                                            \"example\": \"India\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"coordinates\",\n                        \"binding\": \"query\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"mediaType\": \"application/json\",\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"required\": [\n                                    \"lat\",\n                                    \"long\"\n                                ],\n                                \"properties\": {\n                                    \"lat\": {\n                                        \"type\": \"number\"\n                                    },\n                                    \"long\": {\n                                        \"type\": \"number\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"payload\": [\n                    {\n                        \"schemaFormat\": {\n                            \"format\": \"JSON-SCHEMA\",\n                            \"version\": \"2020-12\"\n                        },\n                        \"mediaType\": \"multipart/mixed\",\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"id\": {\n                                    \"type\": \"string\",\n                                    \"format\": \"uuid\"\n                                },\n                                \"address\": {\n                                    \"type\": \"string\"\n                                },\n                                \"historyMetadata\": {\n                                    \"description\": \"metadata in XML format\",\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"createdOn\": {\n                                            \"type\": \"string\"\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"encoding\": [\n                            {\n                                \"name\": \"historyMetadata\",\n                                \"mediaType\": \"application/xml; charset=utf-8\"\n                            },\n                            {\n                                \"headers\": [\n                                    {\n                                        \"name\": \"X-Rate-Limit\",\n                                        \"binding\": \"HEADER\",\n                                        \"description\": \"The number of allowed requests in the current period\",\n                                        \"source\": \"OPERATION\",\n                                        \"payload\": {\n                                            \"schemaFormat\": {\n                                                \"format\": \"JSON-SCHEMA\",\n                                                \"version\": \"2020-12\"\n                                            },\n                                            \"mediaType\": \"application/json\",\n                                            \"schema\": {\n                                                \"type\": \"integer\"\n                                            }\n                                        }\n                                    }\n                                ],\n                                \"mediaType\": \"image/png, image/jpeg\"\n                            }\n                        ],\n                        \"examples\": [\n                            {\n                                \"name\": \"foo\",\n                                \"summary\": \"A foo example\",\n                                \"value\": {\n                                    \"foo\": \"bar\"\n                                },\n                                \"description\": \"This is example object\"\n                            }\n                        ]\n                    }\n                ],\n                \"isPayloadRequired\": true,\n                \"description\": \"This is Request object\"\n            }\n        ],\n        \"tags\": [\n            {\n                \"name\": \"User\",\n                \"externalDocs\": {\n                    \"url\": \"https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#tagObject\",\n                    \"description\": \"Definition of tag object\"\n                },\n                \"description\": \"All CRUD operations of Users\"\n            },\n            {\n                \"name\": \"CRUD\"\n            }\n        ],\n        \"security\": [\n            {\n                \"type\": \"apiKey\",\n                \"description\": \"Security header needed for API requesy call\",\n                \"name\": \"x-api-key\",\n                \"in\": \"header\"\n            },\n            {\n                \"type\": \"http\",\n                \"scheme\": \"bearer\",\n                \"bearerFormat\": \"JWT\"\n            },\n            {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"implicit\": {\n                        \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n                        \"scopes\": {\n                            \"write:pets\": \"modify pets in your account\",\n                            \"read:pets\": \"read your pets\"\n                        }\n                    },\n                    \"authorizationCode\": {\n                        \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n                        \"tokenUrl\": \"https://example.com/api/oauth/token\",\n                        \"scopes\": {\n                            \"write:pets\": \"modify pets in your account\",\n                            \"read:pets\": \"read your pets\"\n                        }\n                    }\n                }\n            }\n        ],\n        \"reponses\": [\n            {\n                \"statusCode\": \"200\",\n                \"headers\": [\n                    {\n                        \"name\": \"X-Rate-Limit-Limit\",\n                        \"binding\": \"HEADER\",\n                        \"description\": \"The number of allowed requests in the current period\",\n                        \"source\": \"OPERATION\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"mediaType\": \"application/json\",\n                            \"schema\": {\n                                \"type\": \"integer\"\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"X-Rate-Limit-Remaining\",\n                        \"binding\": \"HEADER\",\n                        \"description\": \"The number of allowed requests in the current period\",\n                        \"source\": \"OPERATION\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"mediaType\": \"application/json\",\n                            \"schema\": {\n                                \"type\": \"integer\"\n                            }\n                        }\n                    }\n                ],\n                \"description\": \"This is the reponse detailed description\",\n                \"summary\": \"User info\",\n                \"links\": [\n                    {\n                        \"name\": \"address\",\n                        \"parameters\": [\n                            {\n                                \"name\": \"username\",\n                                \"expression\": \"$response.body#/uuid\"\n                            }\n                        ],\n                        \"operationId\": \"getUserAddressByUUID\"\n                    }\n                ]\n            }\n        ],\n        \"callbacks\": [\n            {\n                \"expression\": \"{$request.query.queryUrl}\",\n                \"operation\": {\n                    \"path\": \"/user/{userId}\",\n                    \"method\": \"POST\",\n                    \"requests\": [\n                        {\n                            \"description\": \"Callback payload\",\n                            \"isPayloadRequired\": true,\n                            \"payload\": [\n                                {\n                                    \"schemaFormat\": {\n                                        \"format\": \"JSON-SCHEMA\",\n                                        \"version\": \"2020-12\"\n                                    },\n                                    \"mediaType\": \"application/json\",\n                                    \"schema\": {\n                                        \"type\": \"string\",\n                                        \"format\": \"date\"\n                                    }\n                                }\n                            ]\n                        }\n                    ],\n                    \"responses\": [\n                        {\n                            \"statusCode\": \"201\",\n                            \"description\": \"callback successfully processed\"\n                        }\n                    ]\n                },\n                \"name\": \"myCallback\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":apiVersionId",
								"operations"
							],
							"variable": [
								{
									"key": "apiId",
									"value": "887f7542-487c-4754-b0b9-232f1feffd79"
								},
								{
									"key": "apiVersionId",
									"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
								}
							]
						},
						"description": "This endpoint creates an operation.\n\nIt accepts the following fields:\n\n| **Name** | **Description** |\n| --- | --- |\n| identifier | A unique identifier for finding and identifying an operation among all operations in an API version.  <br>For APIs that are using REST-likeST like semantics (derived from OpenAPI/RAML), the identifier should be **HTTP Method + Path.** |\n| definition | The definition of the operation. Usually contains the schema and other details derived from API specification. |"
					},
					"response": [
						{
							"id": "4dd6e3b1-f373-4bd5-895b-cb1c9230bd26",
							"name": "200 OK Successful Create",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"identifier\": \"GET /user/{userId}\",\n    \"definition\": {\n        \"path\": \"/user/{userId}\",\n        \"method\": \"GET\",\n        \"externalDocs\": {\n            \"url\": \"https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md\",\n            \"description\": \"Definition of Operation object\"\n        },\n        \"operationId\": \"getUser\",\n        \"deprecated\": false,\n        \"description\": \"This is operation definition\",\n        \"operationType\": \"OPERATION\",\n        \"summary\": \"Get User Details\",\n        \"servers\": [\n            {\n                \"url\": \"https://postman.com/{environment}\",\n                \"description\": \"Server Decription (Production server)\",\n                \"source\": \"GLOBAL\",\n                \"variables\": [\n                    {\n                        \"name\": \"environment\",\n                        \"defaultValue\": \"prod\",\n                        \"enums\": [\n                            \"prod\",\n                            \"beta\"\n                        ],\n                        \"description\": \"Environment variable information\"\n                    }\n                ]\n            }\n        ],\n        \"requests\": [\n            {\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"binding\": \"PATH\",\n                        \"required\": true,\n                        \"description\": \"ID of user\",\n                        \"allowEmptyValue\": false,\n                        \"source\": \"OPERATION\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"schema\": {\n                                \"type\": \"string\",\n                                \"format\": \"uuid\"\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"pet\",\n                        \"binding\": \"QUERY\",\n                        \"required\": false,\n                        \"description\": \"info about pet\",\n                        \"source\": \"ENDPOINT\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"allowReserved\": true,\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": null,\n                                \"id\": {\n                                    \"type\": \"integer\",\n                                    \"example\": 123\n                                },\n                                \"name\": {\n                                    \"type\": \"string\",\n                                    \"example\": \"John Johanson\"\n                                },\n                                \"address\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"city\": {\n                                            \"type\": \"string\",\n                                            \"example\": \"Delhi\"\n                                        },\n                                        \"country\": {\n                                            \"type\": \"string\",\n                                            \"example\": \"India\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"coordinates\",\n                        \"binding\": \"query\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"mediaType\": \"application/json\",\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"required\": [\n                                    \"lat\",\n                                    \"long\"\n                                ],\n                                \"properties\": {\n                                    \"lat\": {\n                                        \"type\": \"number\"\n                                    },\n                                    \"long\": {\n                                        \"type\": \"number\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"payload\": [\n                    {\n                        \"schemaFormat\": {\n                            \"format\": \"JSON-SCHEMA\",\n                            \"version\": \"2020-12\"\n                        },\n                        \"mediaType\": \"multipart/mixed\",\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"id\": {\n                                    \"type\": \"string\",\n                                    \"format\": \"uuid\"\n                                },\n                                \"address\": {\n                                    \"type\": \"string\"\n                                },\n                                \"historyMetadata\": {\n                                    \"description\": \"metadata in XML format\",\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"createdOn\": {\n                                            \"type\": \"string\"\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"encoding\": [\n                            {\n                                \"name\": \"historyMetadata\",\n                                \"mediaType\": \"application/xml; charset=utf-8\"\n                            },\n                            {\n                                \"headers\": [\n                                    {\n                                        \"name\": \"X-Rate-Limit\",\n                                        \"binding\": \"HEADER\",\n                                        \"description\": \"The number of allowed requests in the current period\",\n                                        \"source\": \"OPERATION\",\n                                        \"payload\": {\n                                            \"schemaFormat\": {\n                                                \"format\": \"JSON-SCHEMA\",\n                                                \"version\": \"2020-12\"\n                                            },\n                                            \"mediaType\": \"application/json\",\n                                            \"schema\": {\n                                                \"type\": \"integer\"\n                                            }\n                                        }\n                                    }\n                                ],\n                                \"mediaType\": \"image/png, image/jpeg\"\n                            }\n                        ],\n                        \"examples\": [\n                            {\n                                \"name\": \"foo\",\n                                \"summary\": \"A foo example\",\n                                \"value\": {\n                                    \"foo\": \"bar\"\n                                },\n                                \"description\": \"This is example object\"\n                            }\n                        ]\n                    }\n                ],\n                \"isPayloadRequired\": true,\n                \"description\": \"This is Request object\"\n            }\n        ],\n        \"tags\": [\n            {\n                \"name\": \"User\",\n                \"externalDocs\": {\n                    \"url\": \"https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#tagObject\",\n                    \"description\": \"Definition of tag object\"\n                },\n                \"description\": \"All CRUD operations of Users\"\n            },\n            {\n                \"name\": \"CRUD\"\n            }\n        ],\n        \"security\": [\n            {\n                \"type\": \"apiKey\",\n                \"description\": \"Security header needed for API requesy call\",\n                \"name\": \"x-api-key\",\n                \"in\": \"header\"\n            },\n            {\n                \"type\": \"http\",\n                \"scheme\": \"bearer\",\n                \"bearerFormat\": \"JWT\"\n            },\n            {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"implicit\": {\n                        \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n                        \"scopes\": {\n                            \"write:pets\": \"modify pets in your account\",\n                            \"read:pets\": \"read your pets\"\n                        }\n                    },\n                    \"authorizationCode\": {\n                        \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n                        \"tokenUrl\": \"https://example.com/api/oauth/token\",\n                        \"scopes\": {\n                            \"write:pets\": \"modify pets in your account\",\n                            \"read:pets\": \"read your pets\"\n                        }\n                    }\n                }\n            }\n        ],\n        \"reponses\": [\n            {\n                \"statusCode\": \"200\",\n                \"headers\": [\n                    {\n                        \"name\": \"X-Rate-Limit-Limit\",\n                        \"binding\": \"HEADER\",\n                        \"description\": \"The number of allowed requests in the current period\",\n                        \"source\": \"OPERATION\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"mediaType\": \"application/json\",\n                            \"schema\": {\n                                \"type\": \"integer\"\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"X-Rate-Limit-Remaining\",\n                        \"binding\": \"HEADER\",\n                        \"description\": \"The number of allowed requests in the current period\",\n                        \"source\": \"OPERATION\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"mediaType\": \"application/json\",\n                            \"schema\": {\n                                \"type\": \"integer\"\n                            }\n                        }\n                    }\n                ],\n                \"description\": \"This is the reponse detailed description\",\n                \"summary\": \"User info\",\n                \"links\": [\n                    {\n                        \"name\": \"address\",\n                        \"parameters\": [\n                            {\n                                \"name\": \"username\",\n                                \"expression\": \"$response.body#/uuid\"\n                            }\n                        ],\n                        \"operationId\": \"getUserAddressByUUID\"\n                    }\n                ]\n            }\n        ],\n        \"callbacks\": [\n            {\n                \"expression\": \"{$request.query.queryUrl}\",\n                \"operation\": {\n                    \"path\": \"/user/{userId}\",\n                    \"method\": \"POST\",\n                    \"requests\": [\n                        {\n                            \"description\": \"Callback payload\",\n                            \"isPayloadRequired\": true,\n                            \"payload\": [\n                                {\n                                    \"schemaFormat\": {\n                                        \"format\": \"JSON-SCHEMA\",\n                                        \"version\": \"2020-12\"\n                                    },\n                                    \"mediaType\": \"application/json\",\n                                    \"schema\": {\n                                        \"type\": \"string\",\n                                        \"format\": \"date\"\n                                    }\n                                }\n                            ]\n                        }\n                    ],\n                    \"responses\": [\n                        {\n                            \"statusCode\": \"201\",\n                            \"description\": \"callback successfully processed\"\n                        }\n                    ]\n                },\n                \"name\": \"myCallback\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"model_id\": \"4e419917-e324-44b2-90fe-0a91a123bf8e\",\n    \"meta\": {\n        \"model\": \"operation\",\n        \"action\": \"create\"\n    },\n    \"operation\": {\n        \"id\": \"4e419917-e324-44b2-90fe-0a91a123bf8e\",\n        \"identifier\": \"GET /user/{userId}\",\n        \"definition\": {\n            \"path\": \"/user/{userId}\",\n            \"method\": \"GET\",\n            \"externalDocs\": {\n                \"url\": \"https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md\",\n                \"description\": \"Definition of Operation object\"\n            },\n            \"operationId\": \"getUser\",\n            \"deprecated\": false,\n            \"description\": \"This is operation definition\",\n            \"operationType\": \"OPERATION\",\n            \"summary\": \"Get User Details\",\n            \"servers\": [\n                {\n                    \"url\": \"https://postman.com/{environment}\",\n                    \"description\": \"Server Decription (Production server)\",\n                    \"source\": \"GLOBAL\",\n                    \"variables\": [\n                        {\n                            \"name\": \"environment\",\n                            \"defaultValue\": \"prod\",\n                            \"enums\": [\n                                \"prod\",\n                                \"beta\"\n                            ],\n                            \"description\": \"Environment variable information\"\n                        }\n                    ]\n                }\n            ],\n            \"requests\": [\n                {\n                    \"parameters\": [\n                        {\n                            \"name\": \"userId\",\n                            \"binding\": \"PATH\",\n                            \"required\": true,\n                            \"description\": \"ID of user\",\n                            \"allowEmptyValue\": false,\n                            \"source\": \"OPERATION\",\n                            \"payload\": {\n                                \"schemaFormat\": {\n                                    \"format\": \"JSON-SCHEMA\",\n                                    \"version\": \"2020-12\"\n                                },\n                                \"schema\": {\n                                    \"type\": \"string\",\n                                    \"format\": \"uuid\"\n                                }\n                            }\n                        },\n                        {\n                            \"name\": \"pet\",\n                            \"binding\": \"QUERY\",\n                            \"required\": false,\n                            \"description\": \"info about pet\",\n                            \"source\": \"ENDPOINT\",\n                            \"style\": \"deepObject\",\n                            \"explode\": true,\n                            \"allowReserved\": true,\n                            \"payload\": {\n                                \"schemaFormat\": {\n                                    \"format\": \"JSON-SCHEMA\",\n                                    \"version\": \"2020-12\"\n                                },\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": null,\n                                    \"id\": {\n                                        \"type\": \"integer\",\n                                        \"example\": 123\n                                    },\n                                    \"name\": {\n                                        \"type\": \"string\",\n                                        \"example\": \"John Johanson\"\n                                    },\n                                    \"address\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"city\": {\n                                                \"type\": \"string\",\n                                                \"example\": \"Delhi\"\n                                            },\n                                            \"country\": {\n                                                \"type\": \"string\",\n                                                \"example\": \"India\"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        {\n                            \"name\": \"coordinates\",\n                            \"binding\": \"query\",\n                            \"payload\": {\n                                \"schemaFormat\": {\n                                    \"format\": \"JSON-SCHEMA\",\n                                    \"version\": \"2020-12\"\n                                },\n                                \"mediaType\": \"application/json\",\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"required\": [\n                                        \"lat\",\n                                        \"long\"\n                                    ],\n                                    \"properties\": {\n                                        \"lat\": {\n                                            \"type\": \"number\"\n                                        },\n                                        \"long\": {\n                                            \"type\": \"number\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    ],\n                    \"payload\": [\n                        {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"mediaType\": \"multipart/mixed\",\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"id\": {\n                                        \"type\": \"string\",\n                                        \"format\": \"uuid\"\n                                    },\n                                    \"address\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"historyMetadata\": {\n                                        \"description\": \"metadata in XML format\",\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"createdOn\": {\n                                                \"type\": \"string\"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            \"encoding\": [\n                                {\n                                    \"name\": \"historyMetadata\",\n                                    \"mediaType\": \"application/xml; charset=utf-8\"\n                                },\n                                {\n                                    \"headers\": [\n                                        {\n                                            \"name\": \"X-Rate-Limit\",\n                                            \"binding\": \"HEADER\",\n                                            \"description\": \"The number of allowed requests in the current period\",\n                                            \"source\": \"OPERATION\",\n                                            \"payload\": {\n                                                \"schemaFormat\": {\n                                                    \"format\": \"JSON-SCHEMA\",\n                                                    \"version\": \"2020-12\"\n                                                },\n                                                \"mediaType\": \"application/json\",\n                                                \"schema\": {\n                                                    \"type\": \"integer\"\n                                                }\n                                            }\n                                        }\n                                    ],\n                                    \"mediaType\": \"image/png, image/jpeg\"\n                                }\n                            ],\n                            \"examples\": [\n                                {\n                                    \"name\": \"foo\",\n                                    \"summary\": \"A foo example\",\n                                    \"value\": {\n                                        \"foo\": \"bar\"\n                                    },\n                                    \"description\": \"This is example object\"\n                                }\n                            ]\n                        }\n                    ],\n                    \"isPayloadRequired\": true,\n                    \"description\": \"This is Request object\"\n                }\n            ],\n            \"tags\": [\n                {\n                    \"name\": \"User\",\n                    \"externalDocs\": {\n                        \"url\": \"https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#tagObject\",\n                        \"description\": \"Definition of tag object\"\n                    },\n                    \"description\": \"All CRUD operations of Users\"\n                },\n                {\n                    \"name\": \"CRUD\"\n                }\n            ],\n            \"security\": [\n                {\n                    \"type\": \"apiKey\",\n                    \"description\": \"Security header needed for API requesy call\",\n                    \"name\": \"x-api-key\",\n                    \"in\": \"header\"\n                },\n                {\n                    \"type\": \"http\",\n                    \"scheme\": \"bearer\",\n                    \"bearerFormat\": \"JWT\"\n                },\n                {\n                    \"type\": \"oauth2\",\n                    \"flows\": {\n                        \"implicit\": {\n                            \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n                            \"scopes\": {\n                                \"write:pets\": \"modify pets in your account\",\n                                \"read:pets\": \"read your pets\"\n                            }\n                        },\n                        \"authorizationCode\": {\n                            \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n                            \"tokenUrl\": \"https://example.com/api/oauth/token\",\n                            \"scopes\": {\n                                \"write:pets\": \"modify pets in your account\",\n                                \"read:pets\": \"read your pets\"\n                            }\n                        }\n                    }\n                }\n            ],\n            \"reponses\": [\n                {\n                    \"statusCode\": \"200\",\n                    \"headers\": [\n                        {\n                            \"name\": \"X-Rate-Limit-Limit\",\n                            \"binding\": \"HEADER\",\n                            \"description\": \"The number of allowed requests in the current period\",\n                            \"source\": \"OPERATION\",\n                            \"payload\": {\n                                \"schemaFormat\": {\n                                    \"format\": \"JSON-SCHEMA\",\n                                    \"version\": \"2020-12\"\n                                },\n                                \"mediaType\": \"application/json\",\n                                \"schema\": {\n                                    \"type\": \"integer\"\n                                }\n                            }\n                        },\n                        {\n                            \"name\": \"X-Rate-Limit-Remaining\",\n                            \"binding\": \"HEADER\",\n                            \"description\": \"The number of allowed requests in the current period\",\n                            \"source\": \"OPERATION\",\n                            \"payload\": {\n                                \"schemaFormat\": {\n                                    \"format\": \"JSON-SCHEMA\",\n                                    \"version\": \"2020-12\"\n                                },\n                                \"mediaType\": \"application/json\",\n                                \"schema\": {\n                                    \"type\": \"integer\"\n                                }\n                            }\n                        }\n                    ],\n                    \"description\": \"This is the reponse detailed description\",\n                    \"summary\": \"User info\",\n                    \"links\": [\n                        {\n                            \"name\": \"address\",\n                            \"parameters\": [\n                                {\n                                    \"name\": \"username\",\n                                    \"expression\": \"$response.body#/uuid\"\n                                }\n                            ],\n                            \"operationId\": \"getUserAddressByUUID\"\n                        }\n                    ]\n                }\n            ],\n            \"callbacks\": [\n                {\n                    \"expression\": \"{$request.query.queryUrl}\",\n                    \"operation\": {\n                        \"path\": \"/user/{userId}\",\n                        \"method\": \"POST\",\n                        \"requests\": [\n                            {\n                                \"description\": \"Callback payload\",\n                                \"isPayloadRequired\": true,\n                                \"payload\": [\n                                    {\n                                        \"schemaFormat\": {\n                                            \"format\": \"JSON-SCHEMA\",\n                                            \"version\": \"2020-12\"\n                                        },\n                                        \"mediaType\": \"application/json\",\n                                        \"schema\": {\n                                            \"type\": \"string\",\n                                            \"format\": \"date\"\n                                        }\n                                    }\n                                ]\n                            }\n                        ],\n                        \"responses\": [\n                            {\n                                \"statusCode\": \"201\",\n                                \"description\": \"callback successfully processed\"\n                            }\n                        ]\n                    },\n                    \"name\": \"myCallback\"\n                }\n            ]\n        },\n        \"createdAt\": \"2020-01-01T00:00:00.000Z\",\n        \"updatedAt\": \"2020-01-01T00:00:00.000Z\",\n        \"createdBy\": 788373,\n        \"updatedBy\": 788373\n    }\n}"
						},
						{
							"id": "ec2e2031-e4ad-47db-aa2c-c5d8494c8c97",
							"name": "400 Identifier is missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"definition\": {\n        \"path\": \"/user/{userId}\",\n        \"method\": \"GET\",\n        \"externalDocs\": {\n            \"url\": \"https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md\",\n            \"description\": \"Definition of Operation object\"\n        },\n        \"operationId\": \"getUser\",\n        \"deprecated\": false,\n        \"description\": \"This is operation definition\",\n        \"operationType\": \"OPERATION\",\n        \"summary\": \"Get User Details\",\n        \"servers\": [\n            {\n                \"url\": \"https://postman.com/{environment}\",\n                \"description\": \"Server Decription (Production server)\",\n                \"source\": \"GLOBAL\",\n                \"variables\": [\n                    {\n                        \"name\": \"environment\",\n                        \"defaultValue\": \"prod\",\n                        \"enums\": [\n                            \"prod\",\n                            \"beta\"\n                        ],\n                        \"description\": \"Environment variable information\"\n                    }\n                ]\n            }\n        ],\n        \"requests\": [\n            {\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"binding\": \"PATH\",\n                        \"required\": true,\n                        \"description\": \"ID of user\",\n                        \"allowEmptyValue\": false,\n                        \"source\": \"OPERATION\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"schema\": {\n                                \"type\": \"string\",\n                                \"format\": \"uuid\"\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"pet\",\n                        \"binding\": \"QUERY\",\n                        \"required\": false,\n                        \"description\": \"info about pet\",\n                        \"source\": \"ENDPOINT\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"allowReserved\": true,\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": null,\n                                \"id\": {\n                                    \"type\": \"integer\",\n                                    \"example\": 123\n                                },\n                                \"name\": {\n                                    \"type\": \"string\",\n                                    \"example\": \"John Johanson\"\n                                },\n                                \"address\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"city\": {\n                                            \"type\": \"string\",\n                                            \"example\": \"Delhi\"\n                                        },\n                                        \"country\": {\n                                            \"type\": \"string\",\n                                            \"example\": \"India\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"coordinates\",\n                        \"binding\": \"query\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"mediaType\": \"application/json\",\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"required\": [\n                                    \"lat\",\n                                    \"long\"\n                                ],\n                                \"properties\": {\n                                    \"lat\": {\n                                        \"type\": \"number\"\n                                    },\n                                    \"long\": {\n                                        \"type\": \"number\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"payload\": [\n                    {\n                        \"schemaFormat\": {\n                            \"format\": \"JSON-SCHEMA\",\n                            \"version\": \"2020-12\"\n                        },\n                        \"mediaType\": \"multipart/mixed\",\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"id\": {\n                                    \"type\": \"string\",\n                                    \"format\": \"uuid\"\n                                },\n                                \"address\": {\n                                    \"type\": \"string\"\n                                },\n                                \"historyMetadata\": {\n                                    \"description\": \"metadata in XML format\",\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"createdOn\": {\n                                            \"type\": \"string\"\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"encoding\": [\n                            {\n                                \"name\": \"historyMetadata\",\n                                \"mediaType\": \"application/xml; charset=utf-8\"\n                            },\n                            {\n                                \"headers\": [\n                                    {\n                                        \"name\": \"X-Rate-Limit\",\n                                        \"binding\": \"HEADER\",\n                                        \"description\": \"The number of allowed requests in the current period\",\n                                        \"source\": \"OPERATION\",\n                                        \"payload\": {\n                                            \"schemaFormat\": {\n                                                \"format\": \"JSON-SCHEMA\",\n                                                \"version\": \"2020-12\"\n                                            },\n                                            \"mediaType\": \"application/json\",\n                                            \"schema\": {\n                                                \"type\": \"integer\"\n                                            }\n                                        }\n                                    }\n                                ],\n                                \"mediaType\": \"image/png, image/jpeg\"\n                            }\n                        ],\n                        \"examples\": [\n                            {\n                                \"name\": \"foo\",\n                                \"summary\": \"A foo example\",\n                                \"value\": {\n                                    \"foo\": \"bar\"\n                                },\n                                \"description\": \"This is example object\"\n                            }\n                        ]\n                    }\n                ],\n                \"isPayloadRequired\": true,\n                \"description\": \"This is Request object\"\n            }\n        ],\n        \"tags\": [\n            {\n                \"name\": \"User\",\n                \"externalDocs\": {\n                    \"url\": \"https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#tagObject\",\n                    \"description\": \"Definition of tag object\"\n                },\n                \"description\": \"All CRUD operations of Users\"\n            },\n            {\n                \"name\": \"CRUD\"\n            }\n        ],\n        \"security\": [\n            {\n                \"type\": \"apiKey\",\n                \"description\": \"Security header needed for API requesy call\",\n                \"name\": \"x-api-key\",\n                \"in\": \"header\"\n            },\n            {\n                \"type\": \"http\",\n                \"scheme\": \"bearer\",\n                \"bearerFormat\": \"JWT\"\n            },\n            {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"implicit\": {\n                        \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n                        \"scopes\": {\n                            \"write:pets\": \"modify pets in your account\",\n                            \"read:pets\": \"read your pets\"\n                        }\n                    },\n                    \"authorizationCode\": {\n                        \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n                        \"tokenUrl\": \"https://example.com/api/oauth/token\",\n                        \"scopes\": {\n                            \"write:pets\": \"modify pets in your account\",\n                            \"read:pets\": \"read your pets\"\n                        }\n                    }\n                }\n            }\n        ],\n        \"reponses\": [\n            {\n                \"statusCode\": \"200\",\n                \"headers\": [\n                    {\n                        \"name\": \"X-Rate-Limit-Limit\",\n                        \"binding\": \"HEADER\",\n                        \"description\": \"The number of allowed requests in the current period\",\n                        \"source\": \"OPERATION\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"mediaType\": \"application/json\",\n                            \"schema\": {\n                                \"type\": \"integer\"\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"X-Rate-Limit-Remaining\",\n                        \"binding\": \"HEADER\",\n                        \"description\": \"The number of allowed requests in the current period\",\n                        \"source\": \"OPERATION\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"mediaType\": \"application/json\",\n                            \"schema\": {\n                                \"type\": \"integer\"\n                            }\n                        }\n                    }\n                ],\n                \"description\": \"This is the reponse detailed description\",\n                \"summary\": \"User info\",\n                \"links\": [\n                    {\n                        \"name\": \"address\",\n                        \"parameters\": [\n                            {\n                                \"name\": \"username\",\n                                \"expression\": \"$response.body#/uuid\"\n                            }\n                        ],\n                        \"operationId\": \"getUserAddressByUUID\"\n                    }\n                ]\n            }\n        ],\n        \"callbacks\": [\n            {\n                \"expression\": \"{$request.query.queryUrl}\",\n                \"operation\": {\n                    \"path\": \"/user/{userId}\",\n                    \"method\": \"POST\",\n                    \"requests\": [\n                        {\n                            \"description\": \"Callback payload\",\n                            \"isPayloadRequired\": true,\n                            \"payload\": [\n                                {\n                                    \"schemaFormat\": {\n                                        \"format\": \"JSON-SCHEMA\",\n                                        \"version\": \"2020-12\"\n                                    },\n                                    \"mediaType\": \"application/json\",\n                                    \"schema\": {\n                                        \"type\": \"string\",\n                                        \"format\": \"date\"\n                                    }\n                                }\n                            ]\n                        }\n                    ],\n                    \"responses\": [\n                        {\n                            \"statusCode\": \"201\",\n                            \"description\": \"callback successfully processed\"\n                        }\n                    ]\n                },\n                \"name\": \"myCallback\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\":\"paramMissingError\",\n        \"message\":\"Parameter is missing in the request.\",\n        \"details\":{\n            \"param\": \"identifier\"\n        }\n    }\n}"
						},
						{
							"id": "00b554f1-787c-4a96-a4bb-8a3cc98c5498",
							"name": "400 Identifier is not valid",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"identifier\": \"invalid\",\n    \"definition\": {\n        \"path\": \"/user/{userId}\",\n        \"method\": \"GET\",\n        \"externalDocs\": {\n            \"url\": \"https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md\",\n            \"description\": \"Definition of Operation object\"\n        },\n        \"operationId\": \"getUser\",\n        \"deprecated\": false,\n        \"description\": \"This is operation definition\",\n        \"operationType\": \"OPERATION\",\n        \"summary\": \"Get User Details\",\n        \"servers\": [\n            {\n                \"url\": \"https://postman.com/{environment}\",\n                \"description\": \"Server Decription (Production server)\",\n                \"source\": \"GLOBAL\",\n                \"variables\": [\n                    {\n                        \"name\": \"environment\",\n                        \"defaultValue\": \"prod\",\n                        \"enums\": [\n                            \"prod\",\n                            \"beta\"\n                        ],\n                        \"description\": \"Environment variable information\"\n                    }\n                ]\n            }\n        ],\n        \"requests\": [\n            {\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"binding\": \"PATH\",\n                        \"required\": true,\n                        \"description\": \"ID of user\",\n                        \"allowEmptyValue\": false,\n                        \"source\": \"OPERATION\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"schema\": {\n                                \"type\": \"string\",\n                                \"format\": \"uuid\"\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"pet\",\n                        \"binding\": \"QUERY\",\n                        \"required\": false,\n                        \"description\": \"info about pet\",\n                        \"source\": \"ENDPOINT\",\n                        \"style\": \"deepObject\",\n                        \"explode\": true,\n                        \"allowReserved\": true,\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": null,\n                                \"id\": {\n                                    \"type\": \"integer\",\n                                    \"example\": 123\n                                },\n                                \"name\": {\n                                    \"type\": \"string\",\n                                    \"example\": \"John Johanson\"\n                                },\n                                \"address\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"city\": {\n                                            \"type\": \"string\",\n                                            \"example\": \"Delhi\"\n                                        },\n                                        \"country\": {\n                                            \"type\": \"string\",\n                                            \"example\": \"India\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"coordinates\",\n                        \"binding\": \"query\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"mediaType\": \"application/json\",\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"required\": [\n                                    \"lat\",\n                                    \"long\"\n                                ],\n                                \"properties\": {\n                                    \"lat\": {\n                                        \"type\": \"number\"\n                                    },\n                                    \"long\": {\n                                        \"type\": \"number\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ],\n                \"payload\": [\n                    {\n                        \"schemaFormat\": {\n                            \"format\": \"JSON-SCHEMA\",\n                            \"version\": \"2020-12\"\n                        },\n                        \"mediaType\": \"multipart/mixed\",\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"id\": {\n                                    \"type\": \"string\",\n                                    \"format\": \"uuid\"\n                                },\n                                \"address\": {\n                                    \"type\": \"string\"\n                                },\n                                \"historyMetadata\": {\n                                    \"description\": \"metadata in XML format\",\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"createdOn\": {\n                                            \"type\": \"string\"\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"encoding\": [\n                            {\n                                \"name\": \"historyMetadata\",\n                                \"mediaType\": \"application/xml; charset=utf-8\"\n                            },\n                            {\n                                \"headers\": [\n                                    {\n                                        \"name\": \"X-Rate-Limit\",\n                                        \"binding\": \"HEADER\",\n                                        \"description\": \"The number of allowed requests in the current period\",\n                                        \"source\": \"OPERATION\",\n                                        \"payload\": {\n                                            \"schemaFormat\": {\n                                                \"format\": \"JSON-SCHEMA\",\n                                                \"version\": \"2020-12\"\n                                            },\n                                            \"mediaType\": \"application/json\",\n                                            \"schema\": {\n                                                \"type\": \"integer\"\n                                            }\n                                        }\n                                    }\n                                ],\n                                \"mediaType\": \"image/png, image/jpeg\"\n                            }\n                        ],\n                        \"examples\": [\n                            {\n                                \"name\": \"foo\",\n                                \"summary\": \"A foo example\",\n                                \"value\": {\n                                    \"foo\": \"bar\"\n                                },\n                                \"description\": \"This is example object\"\n                            }\n                        ]\n                    }\n                ],\n                \"isPayloadRequired\": true,\n                \"description\": \"This is Request object\"\n            }\n        ],\n        \"tags\": [\n            {\n                \"name\": \"User\",\n                \"externalDocs\": {\n                    \"url\": \"https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#tagObject\",\n                    \"description\": \"Definition of tag object\"\n                },\n                \"description\": \"All CRUD operations of Users\"\n            },\n            {\n                \"name\": \"CRUD\"\n            }\n        ],\n        \"security\": [\n            {\n                \"type\": \"apiKey\",\n                \"description\": \"Security header needed for API requesy call\",\n                \"name\": \"x-api-key\",\n                \"in\": \"header\"\n            },\n            {\n                \"type\": \"http\",\n                \"scheme\": \"bearer\",\n                \"bearerFormat\": \"JWT\"\n            },\n            {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"implicit\": {\n                        \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n                        \"scopes\": {\n                            \"write:pets\": \"modify pets in your account\",\n                            \"read:pets\": \"read your pets\"\n                        }\n                    },\n                    \"authorizationCode\": {\n                        \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n                        \"tokenUrl\": \"https://example.com/api/oauth/token\",\n                        \"scopes\": {\n                            \"write:pets\": \"modify pets in your account\",\n                            \"read:pets\": \"read your pets\"\n                        }\n                    }\n                }\n            }\n        ],\n        \"reponses\": [\n            {\n                \"statusCode\": \"200\",\n                \"headers\": [\n                    {\n                        \"name\": \"X-Rate-Limit-Limit\",\n                        \"binding\": \"HEADER\",\n                        \"description\": \"The number of allowed requests in the current period\",\n                        \"source\": \"OPERATION\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"mediaType\": \"application/json\",\n                            \"schema\": {\n                                \"type\": \"integer\"\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"X-Rate-Limit-Remaining\",\n                        \"binding\": \"HEADER\",\n                        \"description\": \"The number of allowed requests in the current period\",\n                        \"source\": \"OPERATION\",\n                        \"payload\": {\n                            \"schemaFormat\": {\n                                \"format\": \"JSON-SCHEMA\",\n                                \"version\": \"2020-12\"\n                            },\n                            \"mediaType\": \"application/json\",\n                            \"schema\": {\n                                \"type\": \"integer\"\n                            }\n                        }\n                    }\n                ],\n                \"description\": \"This is the reponse detailed description\",\n                \"summary\": \"User info\",\n                \"links\": [\n                    {\n                        \"name\": \"address\",\n                        \"parameters\": [\n                            {\n                                \"name\": \"username\",\n                                \"expression\": \"$response.body#/uuid\"\n                            }\n                        ],\n                        \"operationId\": \"getUserAddressByUUID\"\n                    }\n                ]\n            }\n        ],\n        \"callbacks\": [\n            {\n                \"expression\": \"{$request.query.queryUrl}\",\n                \"operation\": {\n                    \"path\": \"/user/{userId}\",\n                    \"method\": \"POST\",\n                    \"requests\": [\n                        {\n                            \"description\": \"Callback payload\",\n                            \"isPayloadRequired\": true,\n                            \"payload\": [\n                                {\n                                    \"schemaFormat\": {\n                                        \"format\": \"JSON-SCHEMA\",\n                                        \"version\": \"2020-12\"\n                                    },\n                                    \"mediaType\": \"application/json\",\n                                    \"schema\": {\n                                        \"type\": \"string\",\n                                        \"format\": \"date\"\n                                    }\n                                }\n                            ]\n                        }\n                    ],\n                    \"responses\": [\n                        {\n                            \"statusCode\": \"201\",\n                            \"description\": \"callback successfully processed\"\n                        }\n                    ]\n                },\n                \"name\": \"myCallback\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\":\"invalidParamsError\",\n        \"message\":\"The specified parameter is in an invalid format\",\n        \"details\":{\n            \"param\": \"identifier\"\n        }\n    }\n}"
						},
						{
							"id": "7fdb7859-2897-4648-8752-1c04695ac491",
							"name": "400 Definition is not in valid format",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"identifier\": \"GET /user/{userId}\",\n    \"definition\": \"some invalid definition\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\":\"invalidParamsError\",\n        \"message\":\"The specified parameter is in an invalid format\",\n        \"details\":{\n            \"param\": \"definition\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Operation",
					"id": "fe07b121-419a-41be-8c8a-ee4eafbf03dd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/:operationId",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":apiVersionId",
								"operations",
								":operationId"
							],
							"query": [
								{
									"key": "fields",
									"value": "sources,definitions",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "apiId",
									"value": "887f7542-487c-4754-b0b9-232f1feffd79"
								},
								{
									"key": "apiVersionId",
									"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
								},
								{
									"key": "operationId",
									"value": "7b5df9a8-b6d4-49ae-abbb-c085a447d5e7"
								}
							]
						}
					},
					"response": [
						{
							"id": "d79f0eea-46fe-4c05-af0c-269a9a3528ee",
							"name": "200 OK Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/:operationId?fields=identifier,definition",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations",
										":operationId"
									],
									"query": [
										{
											"key": "fields",
											"value": "identifier,definition"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										},
										{
											"key": "operationId",
											"value": "7b5df9a8-b6d4-49ae-abbb-c085a447d5e7"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"4e419917-e324-44b2-90fe-0a91a123bf8e\",\n    \"meta\": {\n        \"model\": \"operation\",\n        \"action\": \"findOne\"\n    },\n    \"data\": {\n        \"id\": \"4e419917-e324-44b2-90fe-0a91a123bf8e\",\n        \"identifier\": \"GET /pets\",\n        \"definition\": {\n            \"method\": \"get\",\n            \"path\": \"/pets\"\n        }\n    }\n}"
						},
						{
							"id": "072c5e76-3839-4277-a80a-9018fe33b578",
							"name": "404 Invalid Operation ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/:operationId",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations",
										":operationId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										},
										{
											"key": "operationId",
											"value": "7b5df9a8-b6d4-49ae-abbb-c085a447d5e7"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the operation you are looking for\",\n        \"details\": {\n            \"model\": \"operation\",\n            \"model_id\": \"7b5df9a8-b6d4-49ae-abbb-c085a447d5e7\"\n        }\n    }\n}"
						},
						{
							"id": "0409d78d-845b-4e17-acfd-cb022c62d9ee",
							"name": "400 API Version Mismatch",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/:operationId",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations",
										":operationId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										},
										{
											"key": "operationId",
											"value": "7b5df9a8-b6d4-49ae-abbb-c085a447d5e7"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"apiVersionMismatchError\",\n        \"message\": \"The API Version ID provided does not match with the Operation's API Version ID.\",\n        \"details\": {\n            \"model\": \"apiVersion\",\n            \"model_id\": \"75fe8592-0568-4c37-9ba5-1201fb6ff5ea\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get All Operations",
					"id": "6daab367-275a-4cd9-a2d9-ace02a5a2d9b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations?Accept=application/json",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":apiVersionId",
								"operations"
							],
							"query": [
								{
									"key": "Accept",
									"value": "application/json"
								}
							],
							"variable": [
								{
									"key": "apiId",
									"value": "887f7542-487c-4754-b0b9-232f1feffd79"
								},
								{
									"key": "apiVersionId",
									"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
								}
							]
						}
					},
					"response": [
						{
							"id": "0d101cdb-e91a-4e88-9abc-b3b7d3f1b915",
							"name": "200 OK Successful Response - Default fields",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"model\": \"operation\",\n        \"action\": \"find\"\n    },\n    \"data\": [\n        {\n            \"id\": \"4e419917-e324-44b2-90fe-0a91a123bf8e\",\n            \"identifier\": \"GET /pets\",\n            \"sources\": [\n                {\n                    \"model\": \"schema\",\n                    \"model_id\": \"be1b6c55-5622-4e78-bf73-b0cd16ee820d\",\n                    \"metadata\": {\n                        \"changeLogId\": \"1234567\"\n                    },\n                    \"fields\": [\n                        \"definition\"\n                    ]\n                }\n            ],\n            \"createdBy\": \"14564\",\n            \"updatedBy\": \"14564\",\n            \"createdAt\": \"2020-01-01T00:00:00.000Z\",\n            \"updatedAt\": \"2020-01-01T00:00:00.000Z\"\n        },\n        {\n            \"id\": \"a4054390-3684-4d34-a94a-04443e9fe533\",\n            \"identifier\": \"POST /pets\",\n            \"sources\": [\n                {\n                    \"model\": \"schema\",\n                    \"model_id\": \"be1b6c55-5622-4e78-bf73-b0cd16ee820d\",\n                    \"metadata\": {\n                        \"changeLogId\": \"1234567\"\n                    },\n                    \"fields\": [\n                        \"definition\"\n                    ]\n                }\n            ],\n            \"createdBy\": \"14564\",\n            \"updatedBy\": \"14564\",\n            \"createdAt\": \"2020-01-01T00:00:00.000Z\",\n            \"updatedAt\": \"2020-01-01T00:00:00.000Z\"\n        },\n        {\n            \"id\": \"a4054390-3684-4d34-a94a-04443e9fe533\",\n            \"identifier\": \"GET /pets/{petId}\",\n            \"sources\": [\n                {\n                    \"model\": \"schema\",\n                    \"model_id\": \"be1b6c55-5622-4e78-bf73-b0cd16ee820d\",\n                    \"metadata\": {\n                        \"changeLogId\": \"1234567\"\n                    },\n                    \"fields\": [\n                        \"definition\"\n                    ]\n                }\n            ],\n            \"createdBy\": \"14564\",\n            \"updatedBy\": \"14564\",\n            \"createdAt\": \"2020-01-01T00:00:00.000Z\",\n            \"updatedAt\": \"2020-01-01T00:00:00.000Z\"\n        }\n    ]\n}"
						},
						{
							"id": "6849a538-c1a1-44ac-9c01-77d61e2960b4",
							"name": "200 Ok Only Specific Fields",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations?fields=identifier,definition",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations"
									],
									"query": [
										{
											"key": "fields",
											"value": "identifier,definition"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"model\": \"operation\",\n        \"action\": \"find\"\n    },\n    \"data\": [\n        {\n            \"id\": \"4e419917-e324-44b2-90fe-0a91a123bf8e\",\n            \"identifier\": \"GET /pets\",\n            \"definition\": {\n                \"method\": \"get\",\n                \"path\": \"/pets\"\n            }\n        },\n        {\n            \"id\": \"a4054390-3684-4d34-a94a-04443e9fe533\",\n            \"identifier\": \"POST /pets\",\n            \"definition\": {\n                \"method\": \"post\",\n                \"path\": \"/pets\"\n            }\n        },\n        {\n            \"id\": \"a4054390-3684-4d34-a94a-04443e9fe533\",\n            \"identifier\": \"GET /pets/{petId}\",\n            \"definition\": {\n                \"method\": \"get\",\n                \"path\": \"/pets/{petId}\"\n            }\n        }\n    ]\n}"
						},
						{
							"id": "5496ab66-0785-44fb-837c-1f5c27315e2e",
							"name": "400 Invalid Fields in Query",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations?fields=invalid1,invalid2",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations"
									],
									"query": [
										{
											"key": "fields",
											"value": "invalid1,invalid2"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\":\"invalidParamsError\",\n        \"message\":\"The specified parameter is in an invalid format\",\n        \"details\":{\n            \"param\": \"fields: invalid1,invalid2\"\n        }\n    }\n}"
						},
						{
							"id": "9bc0b799-ea7e-4b8f-a23d-e96344379d21",
							"name": "400 Too Many Operations",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations?Accept=application/json",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations"
									],
									"query": [
										{
											"key": "Accept",
											"value": "application/json"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"tooManyOperationsError\",\n        \"message\": \"The query returned too many operations\"\n    }\n}"
						}
					]
				},
				{
					"name": "Update Operation",
					"id": "cec2af24-3eae-49ae-b957-e2a5506afd0e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    { \"op\": \"replace\", \"path\": \"/definition\", \"value\": \"{a:1}\" },\n    { \"op\": \"add\", \"path\": \"/identifier\", \"value\": \"POST /abc\" },\n    { \"op\": \"remove\", \"path\": \"/performance\" }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/:operationId",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":apiVersionId",
								"operations",
								":operationId"
							],
							"variable": [
								{
									"key": "apiId",
									"value": "887f7542-487c-4754-b0b9-232f1feffd79"
								},
								{
									"key": "apiVersionId",
									"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
								},
								{
									"key": "operationId",
									"value": "7b5df9a8-b6d4-49ae-abbb-c085a447d5e7"
								}
							]
						}
					},
					"response": [
						{
							"id": "5c625325-d680-4ca7-b6cf-0b0d698d2e4f",
							"name": "200 OK Successful Response",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    { \"op\": \"replace\", \"path\": \"/definition\", \"value\": \"{a:1}\" },\n    { \"op\": \"add\", \"path\": \"/identifier\", \"value\": \"POST /abc\" },\n    { \"op\": \"remove\", \"path\": \"/performance\" }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/:operationId",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations",
										":operationId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										},
										{
											"key": "operationId",
											"value": "7b5df9a8-b6d4-49ae-abbb-c085a447d5e7"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"7b5df9a8-b6d4-49ae-abbb-c085a447d5e7\",\n    \"meta\": {\n        \"model\": \"operation\",\n        \"action\": \"update\"\n    },\n    \"operation\": {\n        \"id\": \"7b5df9a8-b6d4-49ae-abbb-c085a447d5e7\",\n        \"identifier\": \"GET /user/{userId}\",\n        \"definition\": {\n            \"a\": 1\n        },\n        \"createdAt\": \"2020-01-01T00:00:00.000Z\",\n        \"updatedAt\": \"2020-01-01T00:00:00.000Z\",\n        \"createdBy\": 788373,\n        \"updatedBy\": 788373\n    }\n}"
						}
					]
				},
				{
					"name": "Delete Operation",
					"id": "fbe0e503-c868-404f-adbe-36694fe1ff7a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/:operationId",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":apiVersionId",
								"operations",
								":operationId"
							],
							"variable": [
								{
									"key": "apiId",
									"value": "887f7542-487c-4754-b0b9-232f1feffd79"
								},
								{
									"key": "apiVersionId",
									"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
								},
								{
									"key": "operationId",
									"value": "7b5df9a8-b6d4-49ae-abbb-c085a447d5e7"
								}
							]
						}
					},
					"response": [
						{
							"id": "56b4c137-8620-4e9b-ab3e-fec500315054",
							"name": "200 OK Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/:operationId",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations",
										":operationId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										},
										{
											"key": "operationId",
											"value": "7b5df9a8-b6d4-49ae-abbb-c085a447d5e7"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"model_id\": \"7b5df9a8-b6d4-49ae-abbb-c085a447d5e7\",\n    \"meta\": {\n        \"model\": \"operation\",\n        \"action\": \"destroy\"\n    }\n}"
						},
						{
							"id": "4e1d97a0-b4d7-4a4d-b3f3-cb717976c0d1",
							"name": "404 Invalid Operation ID",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/:operationId",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations",
										":operationId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										},
										{
											"key": "operationId",
											"value": "7b5df9a8-b6d4-49ae-abbb-c085a447d5e7"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the operation you are looking for\",\n        \"details\": {\n            \"model\": \"operation\",\n            \"model_id\": \"7b5df9a8-b6d4-49ae-abbb-c085a447d5e7\"\n        }\n    }\n}"
						},
						{
							"id": "8f7913be-e598-45fc-a42b-8ccf7546ea06",
							"name": "400 API Version Mismatch",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/:operationId",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations",
										":operationId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										},
										{
											"key": "operationId",
											"value": "7b5df9a8-b6d4-49ae-abbb-c085a447d5e7"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"apiVersionMismatchError\",\n        \"message\": \"The API Version ID provided does not match with the Operation's API Version ID.\",\n        \"details\": {\n            \"model\": \"apiVersion\",\n            \"model_id\": \"75fe8592-0568-4c37-9ba5-1201fb6ff5ea\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Bulk Upsert Operations",
					"id": "2efb46dd-f0eb-4012-ba8d-84c2b5e015a4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"source\": {\n        \"model\": \"schema\",\n        \"model_id\": \"be1b6c55-5622-4e78-bf73-b0cd16ee820d\",\n        \"metadata\": {\n            \"changeLogId\": \"1234567\"\n        }\n    },\n    \"data\": {\n        \"operations\": [\n            {\n                \"identifier\": \"GET /users/{userId}\",\n                \"definition\": {\n                    \"method\": \"GET\",\n                    \"path\": \"/user/{userId}\"\n                }\n            },\n            {\n                \"identifier\": \"POST /users\",\n                \"definition\": {\n                    \"method\": \"POST\",\n                    \"path\": \"/users\"\n                }\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/modify",
							"host": [
								"{{url}}"
							],
							"path": [
								"apis",
								":apiId",
								"versions",
								":apiVersionId",
								"operations",
								"modify"
							],
							"variable": [
								{
									"key": "apiId",
									"value": "887f7542-487c-4754-b0b9-232f1feffd79"
								},
								{
									"key": "apiVersionId",
									"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
								}
							]
						}
					},
					"response": [
						{
							"id": "da469d7c-5e86-4572-a2c1-545084a31d35",
							"name": "200 OK Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"source\": {\n        \"model\": \"schema\",\n        \"model_id\": \"be1b6c55-5622-4e78-bf73-b0cd16ee820d\",\n        \"metadata\": {\n            \"changeLogId\": \"1234567\"\n        }\n    },\n    \"data\": {\n        \"operations\": [\n            {\n                \"identifier\": \"GET /users/{userId}\",\n                \"definition\": {\n                    \"method\": \"GET\",\n                    \"path\": \"/user/{userId}\"\n                }\n            },\n            {\n                \"identifier\": \"POST /users\",\n                \"definition\": {\n                    \"method\": \"POST\",\n                    \"path\": \"/users\"\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/modify",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations",
										"modify"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"meta\": {\n        \"model\": \"operation\",\n        \"action\": \"upsert\"\n    }\n}"
						},
						{
							"id": "874ba26f-b069-4570-9bfd-17a7237c5a04",
							"name": "400 Source Missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"operations\": [\n            {\n                \"identifier\": \"GET /users/{userId}\",\n                \"definition\": {\n                    \"method\": \"GET\",\n                    \"path\": \"/user/{userId}\"\n                }\n            },\n            {\n                \"identifier\": \"POST /users\",\n                \"definition\": {\n                    \"method\": \"POST\",\n                    \"path\": \"/users\"\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/modify",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations",
										"modify"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\",\n        \"details\": {\n            \"param\": \"source\"\n        }\n    }\n}"
						},
						{
							"id": "cf783762-60ec-44fd-98a5-960bb9acf23a",
							"name": "400 Data Missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"source\": {\n        \"model\": \"schema\",\n        \"model_id\": \"be1b6c55-5622-4e78-bf73-b0cd16ee820d\",\n        \"metadata\": {\n            \"changeLogId\": \"1234567\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/modify",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations",
										"modify"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"paramMissingError\",\n        \"message\": \"Parameter is missing in the request.\",\n        \"details\": {\n            \"param\": \"data\"\n        }\n    }\n}"
						},
						{
							"id": "87fb8472-90aa-4b36-8126-5375d8a67156",
							"name": "400 Operations is not an array",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"source\": {\n        \"model\": \"schema\",\n        \"model_id\": \"be1b6c55-5622-4e78-bf73-b0cd16ee820d\",\n        \"metadata\": {\n            \"changeLogId\": \"1234567\"\n        }\n    },\n    \"data\": {\n        \"operations\": \"some-invalid-value\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/modify",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations",
										"modify"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The specified parameter is in an invalid format\",\n        \"details\": {\n            \"param\": \"data.operations\"\n        }\n    }\n}"
						},
						{
							"id": "a6c1a2d4-c75e-4859-8a25-6741102bb028",
							"name": "400 Identifier in operation is invalid",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"source\": {\n        \"model\": \"schema\",\n        \"model_id\": \"be1b6c55-5622-4e78-bf73-b0cd16ee820d\",\n        \"metadata\": {\n            \"changeLogId\": \"1234567\"\n        }\n    },\n    \"data\": {\n        \"operations\": [\n            {\n                \"identifier\": \"Gdsfsdf\",\n                \"definition\": {\n                    \"method\": \"GET\",\n                    \"path\": \"/user/{userId}\"\n                }\n            },\n            {\n                \"identifier\": \"POST /users\",\n                \"definition\": {\n                    \"method\": \"POST\",\n                    \"path\": \"/users\"\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/modify",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations",
										"modify"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The specified parameter is in an invalid format\",\n        \"details\": {\n            \"param\": \"identifier\"\n        }\n    }\n}"
						},
						{
							"id": "249f3db7-4c6e-4f63-a9fc-60df31dac38c",
							"name": "400 Definition is not in valid format",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"source\": {\n        \"model\": \"schema\",\n        \"model_id\": \"be1b6c55-5622-4e78-bf73-b0cd16ee820d\",\n        \"metadata\": {\n            \"changeLogId\": \"1234567\"\n        }\n    },\n    \"data\": {\n        \"operations\": [\n            {\n                \"identifier\": \"GET /users/{userId}\",\n                \"definition\": \"some-invalid-definition\"\n            },\n            {\n                \"identifier\": \"POST /users\",\n                \"definition\": {\n                    \"method\": \"POST\",\n                    \"path\": \"/users\"\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/apis/:apiId/versions/:apiVersionId/operations/modify",
									"host": [
										"{{url}}"
									],
									"path": [
										"apis",
										":apiId",
										"versions",
										":apiVersionId",
										"operations",
										"modify"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "887f7542-487c-4754-b0b9-232f1feffd79"
										},
										{
											"key": "apiVersionId",
											"value": "75fe8592-0568-4c37-9ba5-1201fb6ff5ea"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"invalidParamsError\",\n        \"message\": \"The specified parameter is in an invalid format\",\n        \"details\": {\n            \"param\": \"definition\"\n        }\n    }\n}"
						}
					]
				}
			],
			"id": "cdc51005-2652-41f3-8eb6-d484299c205f"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "84c27830-6845-42d3-87e0-f83a6ddc71b5"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "0cc3706d-e4dc-4337-8eec-b20cf94437e4"
			}
		}
	]
}